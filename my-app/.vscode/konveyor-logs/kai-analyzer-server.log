{"time":"2025-02-27T15:16:20.736421276-06:00","level":"INFO","msg":"Java is installed"}
{"time":"2025-02-27T15:16:20.88279387-06:00","level":"INFO","msg":"Maven is installed"}
{"time":"2025-02-27T15:16:20.882855776-06:00","level":"INFO","msg":"Starting Analyzer","source-dir":"/home/dpeterson/kai-demo/my-app","rules-dir":"/home/dpeterson/.vscode-server/extensions/konveyor.konveyor-ai-0.0.13/assets/rulesets,/home/dpeterson/kai-demo/custom-rulesets/00-openjdk","lspServerPath":"/home/dpeterson/.vscode-server/extensions/konveyor.konveyor-ai-0.0.13/assets/jdtls/bin/jdtls","bundles":"/home/dpeterson/.vscode-server/extensions/konveyor.konveyor-ai-0.0.13/assets/jdtls-bundles/java-analyzer-bundle/java-analyzer-bundle.core/target/java-analyzer-bundle.core-1.0.0-SNAPSHOT.jar","depOpenSourceLabelsFile":"/home/dpeterson/.vscode-server/extensions/konveyor.konveyor-ai-0.0.13/assets/opensource-labels-file/maven.default.index"}
{"time":"2025-02-27T15:16:20.883944159-06:00","level":"INFO","msg":"logger","v":{"Log":{}}}
{"time":"2025-02-27T15:16:20.911709424-06:00","level":"ERROR","msg":"language server stopped with error","provider":"java","err":"exec: not started"}
{"time":"2025-02-27T15:16:24.106120515-06:00","level":"DEBUG+2","msg":"java connection initialized","provider":"java"}
{"time":"2025-02-27T15:16:24.697939442-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.698029985-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.hibernate.search.annotations>, type<ContainedIn> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ContainedIn>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.search.annotations>, type<ContainedIn>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.698051863-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.hibernate.search.annotations>, type<CharFilterDef> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<CharFilterDef>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.search.annotations>, type<CharFilterDef>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.698064997-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.search.annotations.ContainedIn location 4 matches0"}
{"time":"2025-02-27T15:16:24.698108733-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.search.annotations.CharFilterDef location 4 matches0"}
{"time":"2025-02-27T15:16:24.698178318-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.hibernate.search.annotations>, type<DateBridge> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<DateBridge>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.search.annotations>, type<DateBridge>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.698243864-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.698265754-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.hibernate.search.annotations>, type<AnalyzerDef> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<AnalyzerDef>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.search.annotations>, type<AnalyzerDef>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.698303173-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.698322043-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.698334978-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.search.annotations.DateBridge location 4 matches0"}
{"time":"2025-02-27T15:16:24.698363441-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.hibernate.search.annotations>, type<DocumentId> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<DocumentId>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.search.annotations>, type<DocumentId>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.698387691-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.search.annotations.DocumentId location 4 matches0"}
{"time":"2025-02-27T15:16:24.698396344-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.698429331-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.hibernate.search.annotations>, type<DynamicBoost> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<DynamicBoost>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.search.annotations>, type<DynamicBoost>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.698441693-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.search.annotations.AnalyzerDef location 4 matches0"}
{"time":"2025-02-27T15:16:24.698455995-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.698467068-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.hibernate.search.annotations>, type<ClassBridges> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ClassBridges>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.search.annotations>, type<ClassBridges>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.698530578-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.698609538-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.698643185-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.698654578-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.69867454-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.search.annotations.DynamicBoost location 4 matches0"}
{"time":"2025-02-27T15:16:24.698742573-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.search.annotations.ClassBridges location 4 matches0"}
{"time":"2025-02-27T15:16:24.698900773-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.69898518-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.hibernate.search.annotations>, type<Field> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Field>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.search.annotations>, type<Field>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.699001598-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.69901497-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.hibernate.search.annotations>, type<FieldBridge> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<FieldBridge>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.search.annotations>, type<FieldBridge>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.699037377-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.search.annotations.FieldBridge location 4 matches0"}
{"time":"2025-02-27T15:16:24.699054351-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.699076793-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.hibernate.search.annotations>, type<Facet> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Facet>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.search.annotations>, type<Facet>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.699082409-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.699104983-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.699112143-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.search.annotations.Field location 4 matches0"}
{"time":"2025-02-27T15:16:24.699123658-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.699137798-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.699164454-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.search.annotations.Facet location 4 matches0"}
{"time":"2025-02-27T15:16:24.699180471-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.hibernate.search.annotations>, type<AnalyzerDefs> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<AnalyzerDefs>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.search.annotations>, type<AnalyzerDefs>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.699190202-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.699205659-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.hibernate.search.annotations>, type<IndexedEmbedded> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<IndexedEmbedded>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.search.annotations>, type<IndexedEmbedded>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.699231077-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.699303449-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.699350002-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.search.annotations.IndexedEmbedded location 4 matches0"}
{"time":"2025-02-27T15:16:24.699384636-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.search.annotations.AnalyzerDefs location 4 matches0"}
{"time":"2025-02-27T15:16:24.699453467-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.699497699-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.699515767-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.699559898-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.699586134-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.hibernate.search.annotations>, type<Facets> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Facets>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.search.annotations>, type<Facets>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.699598257-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.search.annotations.Facets location 4 matches0"}
{"time":"2025-02-27T15:16:24.69962814-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.hibernate.search.annotations>, type<Fields> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Fields>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.search.annotations>, type<Fields>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.699682464-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.search.annotations.Fields location 4 matches0"}
{"time":"2025-02-27T15:16:24.699751099-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.hibernate.cfg>, type<AbstractPropertyHolder> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<AbstractPropertyHolder>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg>, type<AbstractPropertyHolder>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.abstractpropertyholder(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.AbstractPropertyHolder(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg>, type<AccessType> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<AccessType>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg>, type<AccessType>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.accesstype(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.AccessType(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg>, type<AnnotatedClassType> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<AnnotatedClassType>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg>, type<AnnotatedClassType>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.annotatedclasstype(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.AnnotatedClassType(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg>, type<AnnotationBinder> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<AnnotationBinder>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg>, type<AnnotationBinder>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.annotationbinder(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.AnnotationBinder(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg>, type<AttributeConversionInfo> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<AttributeConversionInfo>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg>, type<AttributeConversionInfo>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.attributeconversioninfo(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.AttributeConversionInfo(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg>, type<AttributeConverterDefinition> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<AttributeConverterDefinition>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg>, type<AttributeConverterDefinition>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.attributeconverterdefinition(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.AttributeConverterDefinition(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg>, type<BaselineSessionEventsListenerBuilder> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<BaselineSessionEventsListenerBuilder>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg>, type<BaselineSessionEventsListenerBuilder>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.baselinesessioneventslistenerbuilder(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.BaselineSessionEventsListenerBuilder(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg>, type<BinderHelper> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<BinderHelper>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg>, type<BinderHelper>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.binderhelper(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.BinderHelper(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg>, type<CannotForceNonNullableException> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<CannotForceNonNullableException>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg>, type<CannotForceNonNullableException>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.cannotforcenonnullableexception(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.CannotForceNonNullableException(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg>, type<ClassPropertyHolder> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ClassPropertyHolder>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg>, type<ClassPropertyHolder>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.classpropertyholder(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.ClassPropertyHolder(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg>, type<CollectionPropertyHolder> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<CollectionPropertyHolder>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg>, type<CollectionPropertyHolder>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.collectionpropertyholder(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.CollectionPropertyHolder(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg>, type<ColumnsBuilder> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ColumnsBuilder>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg>, type<ColumnsBuilder>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.columnsbuilder(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.ColumnsBuilder(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg>, type<ComponentPropertyHolder> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ComponentPropertyHolder>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg>, type<ComponentPropertyHolder>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.componentpropertyholder(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.ComponentPropertyHolder(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg>, type<EJB3DTDEntityResolver> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<EJB3DTDEntityResolver>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg>, type<EJB3DTDEntityResolver>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.ejb3dtdentityresolver(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.EJB3DTDEntityResolver(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg>, type<Ejb3Column> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Ejb3Column>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg>, type<Ejb3Column>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.ejb3column(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.Ejb3Column(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg>, type<Ejb3DiscriminatorColumn> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Ejb3DiscriminatorColumn>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg>, type<Ejb3DiscriminatorColumn>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.ejb3discriminatorcolumn(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.Ejb3DiscriminatorColumn(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg>, type<Ejb3JoinColumn> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Ejb3JoinColumn>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg>, type<Ejb3JoinColumn>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.ejb3joincolumn(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.Ejb3JoinColumn(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg>, type<ExternalSessionFactoryConfig> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ExternalSessionFactoryConfig>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg>, type<ExternalSessionFactoryConfig>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.externalsessionfactoryconfig(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.ExternalSessionFactoryConfig(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg>, type<IndexColumn> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<IndexColumn>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg>, type<IndexColumn>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.indexcolumn(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.IndexColumn(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg>, type<InheritanceState> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<InheritanceState>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg>, type<InheritanceState>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.inheritancestate(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.InheritanceState(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg>, type<JPAIndexHolder> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<JPAIndexHolder>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg>, type<JPAIndexHolder>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.jpaindexholder(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.JPAIndexHolder(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg>, type<NotYetImplementedException> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<NotYetImplementedException>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg>, type<NotYetImplementedException>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.notyetimplementedexception(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.NotYetImplementedException(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg>, type<ObjectNameSource> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ObjectNameSource>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg>, type<ObjectNameSource>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.objectnamesource(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.ObjectNameSource(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg>, type<PropertyContainer> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<PropertyContainer>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg>, type<PropertyContainer>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.propertycontainer(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.PropertyContainer(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg>, type<PropertyData> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<PropertyData>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg>, type<PropertyData>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.propertydata(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.PropertyData(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg>, type<PropertyHolder> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<PropertyHolder>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg>, type<PropertyHolder>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.propertyholder(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.PropertyHolder(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg>, type<PropertyHolderBuilder> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<PropertyHolderBuilder>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg>, type<PropertyHolderBuilder>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.propertyholderbuilder(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.PropertyHolderBuilder(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg>, type<PropertyInferredData> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<PropertyInferredData>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg>, type<PropertyInferredData>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.propertyinferreddata(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.PropertyInferredData(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg>, type<PropertyPreloadedData> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<PropertyPreloadedData>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg>, type<PropertyPreloadedData>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.propertypreloadeddata(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.PropertyPreloadedData(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg>, type<Settings> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Settings>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg>, type<Settings>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.settings(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.Settings(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg>, type<ToOneBinder> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ToOneBinder>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg>, type<ToOneBinder>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.toonebinder(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.ToOneBinder(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg>, type<UniqueConstraintHolder> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<UniqueConstraintHolder>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg>, type<UniqueConstraintHolder>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.uniqueconstraintholder(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.UniqueConstraintHolder(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg>, type<WrappedInferredData> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<WrappedInferredData>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg>, type<WrappedInferredData>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.wrappedinferreddata(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.WrappedInferredData(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg.annotations>, type<ArrayBinder> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ArrayBinder>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg.annotations>, type<ArrayBinder>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.annotations.arraybinder(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.annotations.ArrayBinder(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg.annotations>, type<BagBinder> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<BagBinder>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg.annotations>, type<BagBinder>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.annotations.bagbinder(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.annotations.BagBinder(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg.annotations>, type<CollectionBinder> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<CollectionBinder>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg.annotations>, type<CollectionBinder>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.annotations.collectionbinder(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.annotations.CollectionBinder(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg.annotations>, type<CustomizableColumns> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<CustomizableColumns>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg.annotations>, type<CustomizableColumns>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.annotations.customizablecolumns(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.annotations.CustomizableColumns(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg.annotations>, type<EntityBinder> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<EntityBinder>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg.annotations>, type<EntityBinder>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.annotations.entitybinder(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.annotations.EntityBinder(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg.annotations>, type<HCANNHelper> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<HCANNHelper>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg.annotations>, type<HCANNHelper>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.annotations.hcannhelper(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.annotations.HCANNHelper(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg.annotations>, type<IdBagBinder> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<IdBagBinder>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg.annotations>, type<IdBagBinder>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.annotations.idbagbinder(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.annotations.IdBagBinder(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg.annotations>, type<ListBinder> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ListBinder>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg.annotations>, type<ListBinder>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.annotations.listbinder(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.annotations.ListBinder(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg.annotations>, type<MapBinder> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<MapBinder>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg.annotations>, type<MapBinder>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.annotations.mapbinder(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.annotations.MapBinder(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg.annotations>, type<MapKeyColumnDelegator> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<MapKeyColumnDelegator>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg.annotations>, type<MapKeyColumnDelegator>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.annotations.mapkeycolumndelegator(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.annotations.MapKeyColumnDelegator(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg.annotations>, type<MapKeyJoinColumnDelegator> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<MapKeyJoinColumnDelegator>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg.annotations>, type<MapKeyJoinColumnDelegator>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.annotations.mapkeyjoincolumndelegator(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.annotations.MapKeyJoinColumnDelegator(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg.annotations>, type<NamedEntityGraphDefinition> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<NamedEntityGraphDefinition>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg.annotations>, type<NamedEntityGraphDefinition>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.annotations.namedentitygraphdefinition(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.annotations.NamedEntityGraphDefinition(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg.annotations>, type<NamedProcedureCallDefinition> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<NamedProcedureCallDefinition>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg.annotations>, type<NamedProcedureCallDefinition>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.annotations.namedprocedurecalldefinition(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.annotations.NamedProcedureCallDefinition(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg.annotations>, type<Nullability> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Nullability>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg.annotations>, type<Nullability>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.annotations.nullability(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.annotations.Nullability(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg.annotations>, type<PrimitiveArrayBinder> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<PrimitiveArrayBinder>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg.annotations>, type<PrimitiveArrayBinder>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.annotations.primitivearraybinder(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.annotations.PrimitiveArrayBinder(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg.annotations>, type<PropertyBinder> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<PropertyBinder>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg.annotations>, type<PropertyBinder>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.annotations.propertybinder(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.annotations.PropertyBinder(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg.annotations>, type<QueryBinder> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<QueryBinder>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg.annotations>, type<QueryBinder>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.annotations.querybinder(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.annotations.QueryBinder(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg.annotations>, type<QueryHintDefinition> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<QueryHintDefinition>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg.annotations>, type<QueryHintDefinition>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.annotations.queryhintdefinition(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.annotations.QueryHintDefinition(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg.annotations>, type<SetBinder> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<SetBinder>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg.annotations>, type<SetBinder>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.annotations.setbinder(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.annotations.SetBinder(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg.annotations>, type<SimpleValueBinder> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<SimpleValueBinder>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg.annotations>, type<SimpleValueBinder>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.annotations.simplevaluebinder(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.annotations.SimpleValueBinder(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg.annotations>, type<TableBinder> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<TableBinder>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg.annotations>, type<TableBinder>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.annotations.tablebinder(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.annotations.TableBinder(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg.annotations.reflection>, type<AttributeConverterDefinitionCollector> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<AttributeConverterDefinitionCollector>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg.annotations.reflection>, type<AttributeConverterDefinitionCollector>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.annotations.reflection.attributeconverterdefinitioncollector(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.annotations.reflection.AttributeConverterDefinitionCollector(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg.annotations.reflection>, type<ClassLoaderAccessLazyImpl> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ClassLoaderAccessLazyImpl>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg.annotations.reflection>, type<ClassLoaderAccessLazyImpl>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.annotations.reflection.classloaderaccesslazyimpl(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.annotations.reflection.ClassLoaderAccessLazyImpl(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg.annotations.reflection>, type<PersistentAttributeFilter> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<PersistentAttributeFilter>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg.annotations.reflection>, type<PersistentAttributeFilter>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.annotations.reflection.persistentattributefilter(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.annotations.reflection.PersistentAttributeFilter(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg.annotations.reflection.internal>, type<JPAXMLOverriddenAnnotationReader> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<JPAXMLOverriddenAnnotationReader>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg.annotations.reflection.internal>, type<JPAXMLOverriddenAnnotationReader>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.annotations.reflection.internal.jpaxmloverriddenannotationreader(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.annotations.reflection.internal.JPAXMLOverriddenAnnotationReader(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg.annotations.reflection.internal>, type<JPAXMLOverriddenMetadataProvider> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<JPAXMLOverriddenMetadataProvider>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg.annotations.reflection.internal>, type<JPAXMLOverriddenMetadataProvider>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.annotations.reflection.internal.jpaxmloverriddenmetadataprovider(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.annotations.reflection.internal.JPAXMLOverriddenMetadataProvider(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg.annotations.reflection.internal>, type<PropertyMappingElementCollector> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<PropertyMappingElementCollector>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg.annotations.reflection.internal>, type<PropertyMappingElementCollector>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.annotations.reflection.internal.propertymappingelementcollector(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.annotations.reflection.internal.PropertyMappingElementCollector(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg.annotations.reflection.internal>, type<XMLContext> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<XMLContext>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg.annotations.reflection.internal>, type<XMLContext>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.annotations.reflection.internal.xmlcontext(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.annotations.reflection.internal.XMLContext(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg.annotations.reflection>, type<package-info> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<package-info>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg.annotations.reflection>, type<package-info>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.annotations.reflection.package-info(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.annotations.reflection.package-info(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg.beanvalidation>, type<ActivationContext> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ActivationContext>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg.beanvalidation>, type<ActivationContext>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.beanvalidation.activationcontext(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.beanvalidation.ActivationContext(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg.beanvalidation>, type<BeanValidationEventListener> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<BeanValidationEventListener>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg.beanvalidation>, type<BeanValidationEventListener>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.beanvalidation.beanvalidationeventlistener(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.beanvalidation.BeanValidationEventListener(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg.beanvalidation>, type<BeanValidationIntegrator> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<BeanValidationIntegrator>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg.beanvalidation>, type<BeanValidationIntegrator>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.beanvalidation.beanvalidationintegrator(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.beanvalidation.BeanValidationIntegrator(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg.beanvalidation>, type<DuplicationStrategyImpl> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<DuplicationStrategyImpl>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg.beanvalidation>, type<DuplicationStrategyImpl>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.beanvalidation.duplicationstrategyimpl(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.beanvalidation.DuplicationStrategyImpl(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg.beanvalidation>, type<GroupsPerOperation> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<GroupsPerOperation>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg.beanvalidation>, type<GroupsPerOperation>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.beanvalidation.groupsperoperation(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.beanvalidation.GroupsPerOperation(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg.beanvalidation>, type<HibernateTraversableResolver> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<HibernateTraversableResolver>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg.beanvalidation>, type<HibernateTraversableResolver>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.beanvalidation.hibernatetraversableresolver(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.beanvalidation.HibernateTraversableResolver(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg.beanvalidation>, type<IntegrationException> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<IntegrationException>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg.beanvalidation>, type<IntegrationException>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.beanvalidation.integrationexception(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.beanvalidation.IntegrationException(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg.beanvalidation>, type<TypeSafeActivator> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<TypeSafeActivator>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg.beanvalidation>, type<TypeSafeActivator>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.beanvalidation.typesafeactivator(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.beanvalidation.TypeSafeActivator(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.cfg.beanvalidation>, type<ValidationMode> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ValidationMode>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.cfg.beanvalidation>, type<ValidationMode>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.cfg.beanvalidation.validationmode(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.cfg.beanvalidation.ValidationMode(...), exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.700001914-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.hibernate.search.annotations>, type<Key> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Key>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.search.annotations>, type<Key>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.700014932-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.hibernate.search.annotations>, type<FullTextFilterDef> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<FullTextFilterDef>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.search.annotations>, type<FullTextFilterDef>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.700026027-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.70003454-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.search.annotations.Key location 4 matches0"}
{"time":"2025-02-27T15:16:24.700048587-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.700058961-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.700066677-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.700103729-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.7001715-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.hibernate.search.annotations>, type<Indexed> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Indexed>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.search.annotations>, type<Indexed>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.7002412-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.search.annotations.FullTextFilterDef location 4 matches0"}
{"time":"2025-02-27T15:16:24.70025373-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.700283689-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.hibernate.search.annotations>, type<Latitude> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Latitude>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.search.annotations>, type<Latitude>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.700334304-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.search.annotations.Indexed location 4 matches0"}
{"time":"2025-02-27T15:16:24.700382133-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.hibernate.search.annotations>, type<Longitude> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Longitude>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.search.annotations>, type<Longitude>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.70044923-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.700464902-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.70047815-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.search.annotations.Longitude location 4 matches0"}
{"time":"2025-02-27T15:16:24.700488329-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.700508697-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.search.annotations.Latitude location 4 matches0"}
{"time":"2025-02-27T15:16:24.700549058-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.700589573-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.hibernate.search.annotations>, type<Normalizer> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Normalizer>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.search.annotations>, type<Normalizer>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.700602147-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.700627344-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.search.annotations.Normalizer location 4 matches0"}
{"time":"2025-02-27T15:16:24.700661031-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.700672126-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.hibernate.search.annotations>, type<NumericField> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<NumericField>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.search.annotations>, type<NumericField>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.700684981-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.700699406-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.700712011-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.700771637-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.hibernate.search.annotations>, type<SortableField> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<SortableField>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.search.annotations>, type<SortableField>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.700810889-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.700833316-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.search.annotations.NumericField location 4 matches0"}
{"time":"2025-02-27T15:16:24.700860482-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.hibernate.search.annotations>, type<ProvidedId> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ProvidedId>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.search.annotations>, type<ProvidedId>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.700887504-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.hibernate.search.annotations>, type<NormalizerDef> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<NormalizerDef>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.search.annotations>, type<NormalizerDef>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.700899097-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.search.annotations.SortableField location 4 matches0"}
{"time":"2025-02-27T15:16:24.700913099-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.hibernate.search.annotations>, type<FullTextFilterDefs> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<FullTextFilterDefs>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.search.annotations>, type<FullTextFilterDefs>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.700944825-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.search.annotations.NormalizerDef location 4 matches0"}
{"time":"2025-02-27T15:16:24.700997821-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.701022657-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.701045392-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.search.annotations.ProvidedId location 4 matches0"}
{"time":"2025-02-27T15:16:24.701133759-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.701150682-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.search.annotations.FullTextFilterDefs location 4 matches0"}
{"time":"2025-02-27T15:16:24.701165841-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.701180398-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.701196764-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.701258543-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.hibernate.search.annotations>, type<TikaBridge> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<TikaBridge>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.search.annotations>, type<TikaBridge>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.701283236-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.701288934-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.701299056-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.701304093-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.70131403-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.701328706-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.7013428-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.search.annotations.TikaBridge location 4 matches0"}
{"time":"2025-02-27T15:16:24.701380718-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.hibernate.search.annotations>, type<NumericFields> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<NumericFields>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.search.annotations>, type<NumericFields>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.701436918-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.701508798-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.701626312-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.hibernate.search.annotations>, type<SortableFields> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<SortableFields>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.search.annotations>, type<SortableFields>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.701692531-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.search.annotations.SortableFields location 4 matches0"}
{"time":"2025-02-27T15:16:24.701704949-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.hibernate.search.annotations>, type<NormalizerDefs> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<NormalizerDefs>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.search.annotations>, type<NormalizerDefs>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.701711253-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.hibernate.search.annotations>, type<TokenFilterDef> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<TokenFilterDef>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.search.annotations>, type<TokenFilterDef>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.701721077-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.search.annotations.NormalizerDefs location 4 matches0"}
{"time":"2025-02-27T15:16:24.701730183-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.search.annotations.TokenFilterDef location 4 matches0"}
{"time":"2025-02-27T15:16:24.701745685-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.search.annotations.NumericFields location 4 matches0"}
{"time":"2025-02-27T15:16:24.701755488-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.701769779-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.hibernate.search.annotations>, type<Spatial> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Spatial>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.search.annotations>, type<Spatial>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.701775421-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.701802201-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.search.annotations.Spatial location 4 matches0"}
{"time":"2025-02-27T15:16:24.701819499-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.701828865-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.701835706-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.701846653-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.701887468-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.701903277-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.701913644-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.701927271-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.701957796-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.hibernate.search>, type<FullTextQuery> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<FullTextQuery>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.search>, type<FullTextQuery>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.search.fulltextquery(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.search.FullTextQuery(...), exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.701968067-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.70198239-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.702027624-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.hibernate.search.annotations>, type<Spatials> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Spatials>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.search.annotations>, type<Spatials>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.70207972-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.hibernate.search.engine>, type<ProjectionConstants> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ProjectionConstants>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.search.engine>, type<ProjectionConstants>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.search.engine.projectionconstants(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.search.engine.ProjectionConstants(...), exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.702151755-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.search.annotations.Spatials location 4 matches0"}
{"time":"2025-02-27T15:16:24.702167723-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.hibernate.search.jpa>, type<FullTextEntityManager> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<FullTextEntityManager>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.search.jpa>, type<FullTextEntityManager>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.search.jpa.fulltextentitymanager(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.search.jpa.FullTextEntityManager(...), exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.702185512-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.apache.lucene.search>, type<Query> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Query>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.apache.lucene.search>, type<Query>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.apache.lucene.search.query(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.apache.lucene.search.Query(...), exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.702192208-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.hibernate.search.annotations>, type<TokenizerDef> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<TokenizerDef>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.search.annotations>, type<TokenizerDef>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.702205855-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.apache.lucene.search>, type<Sort> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Sort>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.apache.lucene.search>, type<Sort>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.apache.lucene.search.sort(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.apache.lucene.search.Sort(...), exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.702216082-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.search.annotations.TokenizerDef location 4 matches0"}
{"time":"2025-02-27T15:16:24.702365507-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.702439769-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.702448046-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.70246048-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.search.engine.ProjectionConstants location 0 matches0"}
{"time":"2025-02-27T15:16:24.702467784-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.apache.lucene.search.Sort location 0 matches0"}
{"time":"2025-02-27T15:16:24.702473141-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.apache.lucene.search.Query location 0 matches0"}
{"time":"2025-02-27T15:16:24.702479981-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.702485256-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.search.FullTextQuery location 0 matches0"}
{"time":"2025-02-27T15:16:24.702491998-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.search.jpa.FullTextEntityManager location 0 matches0"}
{"time":"2025-02-27T15:16:24.702523327-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.702528592-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.702555938-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.hibernate.search*>, type<ErrorHandl*> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ErrorHandl*>, pattern match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.search*>, type<ErrorHandl*>, pattern match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.702565337-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.7025704-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.702578955-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.search*.ErrorHandl* location 8 matches0"}
{"time":"2025-02-27T15:16:24.702601946-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.702606991-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.702648009-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.hibernate.search*>, type<Facet*> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Facet*>, pattern match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.search*>, type<Facet*>, pattern match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.702681161-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.search*.Facet* location 8 matches0"}
{"time":"2025-02-27T15:16:24.702711816-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.702725723-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.702735635-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.702791181-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.702799093-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.apache.lucene.search>, type<SortField> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<SortField>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.apache.lucene.search>, type<SortField>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.apache.lucene.search.sortfield(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.apache.lucene.search.SortField(...), exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.702807831-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.702830112-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: PackageDeclarationPattern: <org.hibernate.search*.errorhandl*>, pattern match, case insensitive, generic full match, fine grain: none | PackageReferencePattern: <org.hibernate.search*.errorhandl*>, pattern match, case insensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.70283578-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.702843537-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.hibernate.search.annotations>, type<Factory> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Factory>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.search.annotations>, type<Factory>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.702895-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: PackageDeclarationPattern: <org.hibernate.search*.facet*>, pattern match, case insensitive, generic full match, fine grain: none | PackageReferencePattern: <org.hibernate.search*.facet*>, pattern match, case insensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.702931079-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.search*.errorhandl* location 11 matches0"}
{"time":"2025-02-27T15:16:24.702945584-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.70295311-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.hibernate.search.elasticsearch>, type<ElasticsearchProjectionConstants> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ElasticsearchProjectionConstants>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.search.elasticsearch>, type<ElasticsearchProjectionConstants>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.search.elasticsearch.elasticsearchprojectionconstants(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.search.elasticsearch.ElasticsearchProjectionConstants(...), exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.70296149-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.702966931-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.search*.facet* location 11 matches0"}
{"time":"2025-02-27T15:16:24.703038973-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.search.elasticsearch.ElasticsearchProjectionConstants location 0 matches0"}
{"time":"2025-02-27T15:16:24.70305639-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.search.annotations.Factory location 4 matches0"}
{"time":"2025-02-27T15:16:24.703077886-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.hibernate.search>, type<FullTextSession> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<FullTextSession>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.search>, type<FullTextSession>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.search.fulltextsession(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.search.FullTextSession(...), exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.703093795-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.apache.lucene.search.SortField location 0 matches0"}
{"time":"2025-02-27T15:16:24.703168908-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.703185258-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.703192152-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.hibernate.search.jpa>, type<FullTextQuery> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<FullTextQuery>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.search.jpa>, type<FullTextQuery>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.search.jpa.fulltextquery(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.search.jpa.FullTextQuery(...), exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.703200259-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.703209762-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.703218928-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.70322409-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.703258316-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.hibernate.search.jsr352.massindexing>, type<MassIndexingJob> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<MassIndexingJob>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.search.jsr352.massindexing>, type<MassIndexingJob>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.search.jsr352.massindexing.massindexingjob(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.search.jsr352.massindexing.MassIndexingJob(...), exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.703264778-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.703302329-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.703317991-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.703353594-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.703446923-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.hibernate.search.store>, type<IndexShardingStrategy> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<IndexShardingStrategy>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.search.store>, type<IndexShardingStrategy>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.search.store.indexshardingstrategy(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.search.store.IndexShardingStrategy(...), exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.703510832-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.hibernate.search.exception>, type<SearchException> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<SearchException>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.search.exception>, type<SearchException>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.search.exception.searchexception(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.search.exception.SearchException(...), exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.703612602-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.hibernate.search*>, type<SearchFactory> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<SearchFactory>, pattern match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.search*>, type<SearchFactory>, pattern match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.search*.searchfactory(...), pattern match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.search*.SearchFactory(...), pattern match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.70366225-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.hibernate.search>, type<MassIndexer> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<MassIndexer>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.search>, type<MassIndexer>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.search.massindexer(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.search.MassIndexer(...), exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.704259227-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.search.FullTextSession location 0 matches0"}
{"time":"2025-02-27T15:16:24.70433233-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.704344087-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.704360409-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.search*.SearchFactory location 0 matches0"}
{"time":"2025-02-27T15:16:24.70436903-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.search.MassIndexer location 0 matches0"}
{"time":"2025-02-27T15:16:24.704433548-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.search.jpa.FullTextQuery location 0 matches0"}
{"time":"2025-02-27T15:16:24.704479917-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.search.jsr352.massindexing.MassIndexingJob location 0 matches0"}
{"time":"2025-02-27T15:16:24.704580894-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<javax.persistence>, type<GeneratedValue> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<GeneratedValue>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax.persistence>, type<GeneratedValue>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.704672677-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.persistence.GeneratedValue location 4 matches0"}
{"time":"2025-02-27T15:16:24.704692198-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.704725999-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.70475445-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.704769824-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.704780046-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.704796617-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.704814233-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.search.exception.SearchException location 0 matches0"}
{"time":"2025-02-27T15:16:24.704825452-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.704843206-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.704970636-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.hibernate.type>, type<StandardBasicTypes> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<StandardBasicTypes>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.type>, type<StandardBasicTypes>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.type.standardbasictypes(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.type.StandardBasicTypes(...), exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.705031056-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: SuperInterfaceReferencePattern: <BasicType>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.705043531-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.hibernate.annotations>, type<CollectionType> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<CollectionType>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.annotations>, type<CollectionType>, exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.annotations>, type<ParamDef> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ParamDef>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.annotations>, type<ParamDef>, exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.annotations>, type<Type> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Type>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.annotations>, type<Type>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.705090801-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.type.BasicType location 5 matches0"}
{"time":"2025-02-27T15:16:24.705216748-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.annotations.(CollectionType|ParamDef|Type) location 4 matches0"}
{"time":"2025-02-27T15:16:24.705334141-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.search.store.IndexShardingStrategy location 0 matches0"}
{"time":"2025-02-27T15:16:24.705379094-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.hibernate.annotations>, type<AnyMetaDef> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<AnyMetaDef>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.annotations>, type<AnyMetaDef>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.annotations.anymetadef(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.annotations.AnyMetaDef(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.annotations>, type<AnyMetaDefs> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<AnyMetaDefs>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.annotations>, type<AnyMetaDefs>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.annotations.anymetadefs(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.annotations.AnyMetaDefs(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.annotations>, type<TypeDef> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<TypeDef>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.annotations>, type<TypeDef>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.annotations.typedef(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.annotations.TypeDef(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.annotations>, type<TypeDefs> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<TypeDefs>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.annotations>, type<TypeDefs>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.annotations.typedefs(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.annotations.TypeDefs(...), exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.705417708-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.70547199-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.705534696-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.hibernate.usertype>, type<CompositeUserType> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<CompositeUserType>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.usertype>, type<CompositeUserType>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.usertype.compositeusertype(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.usertype.CompositeUserType(...), exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.705565806-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.705577567-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.705595456-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.705604946-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.705631082-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.705642905-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.705832975-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.hibernate.type.descriptor.sql>, type<SqlTypeDescriptor> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<SqlTypeDescriptor>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.type.descriptor.sql>, type<SqlTypeDescriptor>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.type.descriptor.sql.sqltypedescriptor(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.type.descriptor.sql.SqlTypeDescriptor(...), exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.70596375-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.hibernate.search.store>, type<ShardIdentifierProvider> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ShardIdentifierProvider>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.search.store>, type<ShardIdentifierProvider>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.search.store.shardidentifierprovider(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.search.store.ShardIdentifierProvider(...), exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.70603644-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.usertype.CompositeUserType location 0 matches0"}
{"time":"2025-02-27T15:16:24.706048047-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.type.descriptor.sql.SqlTypeDescriptor location 0 matches0"}
{"time":"2025-02-27T15:16:24.706058421-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.706070659-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.706080598-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.hibernate.type.descriptor.java>, type<JavaTypeDescriptor> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<JavaTypeDescriptor>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.type.descriptor.java>, type<JavaTypeDescriptor>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.type.descriptor.java.javatypedescriptor(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.type.descriptor.java.JavaTypeDescriptor(...), exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.706107521-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: MethodReferencePattern: jakarta.persistence.query.getresultstream(*), pattern match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE"}
{"time":"2025-02-27T15:16:24.706170357-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.706222823-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.706236901-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.706274205-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.706331428-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.hibernate.loader>, type<collection*> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<collection*>, pattern match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader>, type<collection*>, pattern match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.706378284-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: MethodReferencePattern: org.hibernate.interceptor.onsave(*), pattern match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE"}
{"time":"2025-02-27T15:16:24.706390441-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.loader.collection* location 8 matches0"}
{"time":"2025-02-27T15:16:24.706494131-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.706559106-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.70665377-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.hibernate.loader>, type<custom*> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<custom*>, pattern match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader>, type<custom*>, pattern match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.706709535-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.loader.custom* location 8 matches0"}
{"time":"2025-02-27T15:16:24.70673446-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for jakarta.persistence.Query.getResultStream(*) location 2 matches0"}
{"time":"2025-02-27T15:16:24.706746426-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.type.descriptor.java.JavaTypeDescriptor location 0 matches0"}
{"time":"2025-02-27T15:16:24.706763188-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.Interceptor.onSave(*) location 2 matches0"}
{"time":"2025-02-27T15:16:24.706779749-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.706789104-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.type.StandardBasicTypes location 0 matches0"}
{"time":"2025-02-27T15:16:24.70679912-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.706829349-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.70684362-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.706863394-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.706871018-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.hibernate.loader>, type<entity*> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<entity*>, pattern match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader>, type<entity*>, pattern match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.706887198-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.loader.entity* location 8 matches0"}
{"time":"2025-02-27T15:16:24.706944004-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.706991483-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.707002294-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.search.store.ShardIdentifierProvider location 0 matches0"}
{"time":"2025-02-27T15:16:24.707014405-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.707116876-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.hibernate.sql>, type<ordering*> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ordering*>, pattern match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.sql>, type<ordering*>, pattern match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.707197528-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.707236858-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.707250088-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.707264123-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.707269519-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.sql.ordering* location 8 matches0"}
{"time":"2025-02-27T15:16:24.707286541-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: MethodReferencePattern: org.hibernate.query.query.stream(*), pattern match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE"}
{"time":"2025-02-27T15:16:24.707297539-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.hibernate.loader>, type<plan*> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<plan*>, pattern match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader>, type<plan*>, pattern match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.707317537-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.hibernate>, type<criterion*> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<criterion*>, pattern match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate>, type<criterion*>, pattern match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.707326019-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.707339183-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.loader.plan* location 8 matches0"}
{"time":"2025-02-27T15:16:24.70739814-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.707431347-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.707471748-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.criterion* location 8 matches0"}
{"time":"2025-02-27T15:16:24.707494854-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.707513543-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: MethodReferencePattern: org.hibernate.query.query.iterate(*), pattern match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE"}
{"time":"2025-02-27T15:16:24.707564642-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.query.Query.stream(*) location 2 matches0"}
{"time":"2025-02-27T15:16:24.707635739-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.hibernate.search.store>, type<ShardIdentifierProviderTemplate> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ShardIdentifierProviderTemplate>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.search.store>, type<ShardIdentifierProviderTemplate>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.search.store.shardidentifierprovidertemplate(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.search.store.ShardIdentifierProviderTemplate(...), exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.70766784-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.707675638-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.707691371-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.707726882-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.707746028-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.hibernate.annotations>, type<NamedNativeQuery> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<NamedNativeQuery>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.annotations>, type<NamedNativeQuery>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.707762767-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.annotations.NamedNativeQuery location 4 matches0"}
{"time":"2025-02-27T15:16:24.707806658-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: PackageDeclarationPattern: <org.hibernate.jmx*>, pattern match, case insensitive, generic full match, fine grain: none | PackageReferencePattern: <org.hibernate.jmx*>, pattern match, case insensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.70788319-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.707921419-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.70798516-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.hibernate>, type<*Jacc*> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<*Jacc*>, pattern match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate>, type<*Jacc*>, pattern match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.707998173-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.jmx* location 11 matches0"}
{"time":"2025-02-27T15:16:24.708023661-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.*Jacc* location 8 matches0"}
{"time":"2025-02-27T15:16:24.708327792-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.annotations.(AnyMetaDef|AnyMetaDefs|TypeDef|TypeDefs) location 0 matches0"}
{"time":"2025-02-27T15:16:24.708425468-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.query.Query.iterate(*) location 2 matches0"}
{"time":"2025-02-27T15:16:24.708494158-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.search.store.ShardIdentifierProviderTemplate location 0 matches0"}
{"time":"2025-02-27T15:16:24.708502342-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.708509932-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.708760037-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.hibernate.engine.jdbc.connections.spi>, type<MultiTenantConnectionProvider> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<MultiTenantConnectionProvider>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.engine.jdbc.connections.spi>, type<MultiTenantConnectionProvider>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.engine.jdbc.connections.spi.multitenantconnectionprovider(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider(...), exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.708916507-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.hibernate.sql>, type<ANSICaseFragment> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ANSICaseFragment>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.sql>, type<ANSICaseFragment>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.sql.ansicasefragment(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.sql.ANSICaseFragment(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.sql>, type<ANSIJoinFragment> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ANSIJoinFragment>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.sql>, type<ANSIJoinFragment>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.sql.ansijoinfragment(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.sql.ANSIJoinFragment(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.sql>, type<CacheJoinFragment> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<CacheJoinFragment>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.sql>, type<CacheJoinFragment>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.sql.cachejoinfragment(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.sql.CacheJoinFragment(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.sql>, type<CaseFragment> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<CaseFragment>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.sql>, type<CaseFragment>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.sql.casefragment(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.sql.CaseFragment(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.sql>, type<ConditionFragment> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ConditionFragment>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.sql>, type<ConditionFragment>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.sql.conditionfragment(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.sql.ConditionFragment(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.sql>, type<DecodeCaseFragment> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<DecodeCaseFragment>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.sql>, type<DecodeCaseFragment>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.sql.decodecasefragment(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.sql.DecodeCaseFragment(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.sql>, type<DerbyCaseFragment> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<DerbyCaseFragment>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.sql>, type<DerbyCaseFragment>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.sql.derbycasefragment(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.sql.DerbyCaseFragment(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.sql>, type<DisjunctionFragment> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<DisjunctionFragment>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.sql>, type<DisjunctionFragment>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.sql.disjunctionfragment(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.sql.DisjunctionFragment(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.sql>, type<HSQLCaseFragment> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<HSQLCaseFragment>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.sql>, type<HSQLCaseFragment>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.sql.hsqlcasefragment(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.sql.HSQLCaseFragment(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.sql>, type<InsertSelect> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<InsertSelect>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.sql>, type<InsertSelect>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.sql.insertselect(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.sql.InsertSelect(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.sql>, type<JoinFragment> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<JoinFragment>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.sql>, type<JoinFragment>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.sql.joinfragment(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.sql.JoinFragment(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.sql>, type<JoinType> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<JoinType>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.sql>, type<JoinType>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.sql.jointype(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.sql.JoinType(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.sql>, type<MckoiCaseFragment> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<MckoiCaseFragment>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.sql>, type<MckoiCaseFragment>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.sql.mckoicasefragment(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.sql.MckoiCaseFragment(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.sql>, type<OracleJoinFragment> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<OracleJoinFragment>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.sql>, type<OracleJoinFragment>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.sql.oraclejoinfragment(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.sql.OracleJoinFragment(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.sql>, type<QueryJoinFragment> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<QueryJoinFragment>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.sql>, type<QueryJoinFragment>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.sql.queryjoinfragment(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.sql.QueryJoinFragment(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.sql>, type<QuerySelect> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<QuerySelect>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.sql>, type<QuerySelect>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.sql.queryselect(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.sql.QuerySelect(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.sql>, type<Select> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Select>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.sql>, type<Select>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.sql.select(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.sql.Select(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.sql>, type<SelectExpression> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<SelectExpression>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.sql>, type<SelectExpression>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.sql.selectexpression(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.sql.SelectExpression(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.sql>, type<SelectFragment> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<SelectFragment>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.sql>, type<SelectFragment>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.sql.selectfragment(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.sql.SelectFragment(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.sql>, type<SelectValues> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<SelectValues>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.sql>, type<SelectValues>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.sql.selectvalues(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.sql.SelectValues(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.sql>, type<Sybase11JoinFragment> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Sybase11JoinFragment>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.sql>, type<Sybase11JoinFragment>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.sql.sybase11joinfragment(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.sql.Sybase11JoinFragment(...), exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.709204117-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider location 0 matches0"}
{"time":"2025-02-27T15:16:24.70927433-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.709283469-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.709381207-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.hibernate>, type<MultiTenancyStrategy> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<MultiTenancyStrategy>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate>, type<MultiTenancyStrategy>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.multitenancystrategy(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.MultiTenancyStrategy(...), exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.709693975-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.MultiTenancyStrategy location 0 matches0"}
{"time":"2025-02-27T15:16:24.709886223-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.709948024-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.710159729-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.710292098-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.710464064-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.710521789-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.710534554-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.710540378-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.710557893-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.710565086-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.71057031-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.710590943-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.710656413-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: MethodReferencePattern: javax.servlet.servletcontext.getservlets(*), pattern match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE"}
{"time":"2025-02-27T15:16:24.710748736-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: MethodReferencePattern: javax.servlet.servletcontext.getservlet(*), pattern match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE"}
{"time":"2025-02-27T15:16:24.710786999-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: SuperInterfaceReferencePattern: <HttpSessionContext>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.710829461-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: SuperInterfaceReferencePattern: <SingleThreadModel>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.710839838-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<javax.servlet.http>, type<HttpUtils> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<HttpUtils>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax.servlet.http>, type<HttpUtils>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: javax.servlet.http.httputils(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: javax.servlet.http.HttpUtils(...), exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.710850474-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.servlet.http.HttpSessionContext location 5 matches0"}
{"time":"2025-02-27T15:16:24.710867462-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.servlet.SingleThreadModel location 5 matches0"}
{"time":"2025-02-27T15:16:24.710894241-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<javax>, type<activation*> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<activation*>, pattern match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax>, type<activation*>, pattern match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<javax>, type<annotation*> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<annotation*>, pattern match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax>, type<annotation*>, pattern match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<javax>, type<batch*> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<batch*>, pattern match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax>, type<batch*>, pattern match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<javax>, type<decorator*> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<decorator*>, pattern match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax>, type<decorator*>, pattern match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<javax>, type<ejb*> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ejb*>, pattern match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax>, type<ejb*>, pattern match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<javax>, type<el*> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<el*>, pattern match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax>, type<el*>, pattern match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<javax>, type<enterprise*> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<enterprise*>, pattern match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax>, type<enterprise*>, pattern match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<javax>, type<faces*> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<faces*>, pattern match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax>, type<faces*>, pattern match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<javax>, type<inject*> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<inject*>, pattern match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax>, type<inject*>, pattern match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<javax>, type<interceptor*> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<interceptor*>, pattern match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax>, type<interceptor*>, pattern match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<javax>, type<jms*> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<jms*>, pattern match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax>, type<jms*>, pattern match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<javax>, type<json*> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<json*>, pattern match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax>, type<json*>, pattern match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<javax>, type<jws*> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<jws*>, pattern match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax>, type<jws*>, pattern match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<javax>, type<mail*> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<mail*>, pattern match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax>, type<mail*>, pattern match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<javax>, type<persistence*> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<persistence*>, pattern match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax>, type<persistence*>, pattern match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<javax>, type<resource*> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<resource*>, pattern match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax>, type<resource*>, pattern match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<javax>, type<security*> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<security*>, pattern match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax>, type<security*>, pattern match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<javax>, type<servlet*> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<servlet*>, pattern match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax>, type<servlet*>, pattern match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<javax>, type<transaction*> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<transaction*>, pattern match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax>, type<transaction*>, pattern match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<javax>, type<validation*> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<validation*>, pattern match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax>, type<validation*>, pattern match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<javax>, type<websocket*> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<websocket*>, pattern match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax>, type<websocket*>, pattern match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<javax>, type<ws*> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ws*>, pattern match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax>, type<ws*>, pattern match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<javax>, type<xml*> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<xml*>, pattern match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax>, type<xml*>, pattern match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.71099154-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.(activation|annotation|batch|decorator|ejb|el|enterprise|faces|inject|interceptor|jms|json|jws|mail|persistence|resource|security|servlet|transaction|validation|websocket|ws|xml)* location 8 matches0"}
{"time":"2025-02-27T15:16:24.711073643-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.711152048-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.711223657-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: MethodReferencePattern: javax.servlet.http.httpsession.getsessioncontext(*), pattern match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE"}
{"time":"2025-02-27T15:16:24.711238988-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.711247818-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.711274772-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.711297447-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.711392429-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.servlet.http.HttpUtils location 0 matches0"}
{"time":"2025-02-27T15:16:24.711427129-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.servlet.ServletContext.getServlet(*) location 2 matches0"}
{"time":"2025-02-27T15:16:24.711443049-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.servlet.ServletContext.getServlets(*) location 2 matches0"}
{"time":"2025-02-27T15:16:24.711454917-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: MethodReferencePattern: javax.servlet.servletcontext.getservletnames(*), pattern match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE"}
{"time":"2025-02-27T15:16:24.711486041-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.servlet.http.HttpSession.getSessionContext(*) location 2 matches0"}
{"time":"2025-02-27T15:16:24.711501778-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.711511481-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: MethodReferencePattern: javax.servlet.servletcontext.log(*java.lang.exception, *java.lang.string), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: javax.servlet.ServletContext.log(*java.lang.Exception, *java.lang.String), exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.711524052-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.711555016-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: MethodReferencePattern: javax.servlet.servletrequest.getrealpath(*), pattern match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE"}
{"time":"2025-02-27T15:16:24.711624678-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.711661361-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.711672933-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.servlet.ServletContext.getServletNames(*) location 2 matches0"}
{"time":"2025-02-27T15:16:24.711682558-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.711691639-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.711703482-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.servlet.ServletContext.log(java.lang.Exception, java.lang.String) location 0 matches0"}
{"time":"2025-02-27T15:16:24.71171306-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.servlet.ServletRequest.getRealPath(*) location 2 matches0"}
{"time":"2025-02-27T15:16:24.711804988-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.71185965-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.711907632-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: ConstructorCombinedPattern: javax.servlet.UnavailableException(), pattern match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.711936705-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: MethodReferencePattern: javax.servlet.unavailableexception.getservlet(*), pattern match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE"}
{"time":"2025-02-27T15:16:24.711978871-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.711992194-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.712020277-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.712032685-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.712038346-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.servlet.UnavailableException(javax.servlet.Servlet* location 3 matches0"}
{"time":"2025-02-27T15:16:24.712045854-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<javax.servlet.ServletRequestWrapper.getRealPath(java.lang>, type<String)> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<String)>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax.servlet.ServletRequestWrapper.getRealPath(java.lang>, type<String)>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: javax.servlet.servletrequestwrapper.getrealpath(*java.lang.string), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: javax.servlet.ServletRequestWrapper.getRealPath(*java.lang.String), exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.712065332-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: ConstructorCombinedPattern: javax.servlet.UnavailableException(int, *javax.servlet.Servlet, *java.lang.String), exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.712075177-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.71208452-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.servlet.UnavailableException(int, javax.servlet.Servlet, java.lang.String) location 3 matches0"}
{"time":"2025-02-27T15:16:24.712091577-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.712121832-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.712134896-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: MethodReferencePattern: javax.servlet.http.httpservletrequestwrapper.isrequestedsessionidfromurl(*), pattern match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE"}
{"time":"2025-02-27T15:16:24.712223714-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.712290545-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.7123216-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.712385793-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: MethodReferencePattern: javax.servlet.http.httpservletrequest.isrequestedsessionidfromurl(*), pattern match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE"}
{"time":"2025-02-27T15:16:24.712518488-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<javax.servlet.http.HttpServletResponse.encodeUrl(java.lang>, type<String)> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<String)>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax.servlet.http.HttpServletResponse.encodeUrl(java.lang>, type<String)>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: javax.servlet.http.httpservletresponse.encodeurl(*java.lang.string), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: javax.servlet.http.HttpServletResponse.encodeUrl(*java.lang.String), exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.712599394-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<javax.servlet.http.HttpServletResponse.encodeRedirectUrl(java.lang>, type<String)> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<String)>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax.servlet.http.HttpServletResponse.encodeRedirectUrl(java.lang>, type<String)>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: javax.servlet.http.httpservletresponse.encoderedirecturl(*java.lang.string), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: javax.servlet.http.HttpServletResponse.encodeRedirectUrl(*java.lang.String), exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.712699548-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.servlet.ServletRequestWrapper.getRealPath(java.lang.String) location 0 matches0"}
{"time":"2025-02-27T15:16:24.712833753-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.servlet.UnavailableException.getServlet(*) location 2 matches0"}
{"time":"2025-02-27T15:16:24.712922223-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.712936494-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.712947153-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.71298104-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: MethodReferencePattern: javax.servlet.http.httpservletresponse.setstatus(int, *java.lang.string), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: javax.servlet.http.HttpServletResponse.setStatus(int, *java.lang.String), exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.713072066-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.713179202-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<javax.servlet.http.HttpServletResponseWrapper.encodeUrl(java.lang>, type<String)> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<String)>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax.servlet.http.HttpServletResponseWrapper.encodeUrl(java.lang>, type<String)>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: javax.servlet.http.httpservletresponsewrapper.encodeurl(*java.lang.string), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: javax.servlet.http.HttpServletResponseWrapper.encodeUrl(*java.lang.String), exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.71336633-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.servlet.http.HttpServletResponse.encodeRedirectUrl(java.lang.String) location 0 matches0"}
{"time":"2025-02-27T15:16:24.713440526-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.servlet.http.HttpServletResponseWrapper.encodeUrl(java.lang.String) location 0 matches0"}
{"time":"2025-02-27T15:16:24.713535711-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.servlet.http.HttpServletRequest.isRequestedSessionIdFromUrl(*) location 2 matches0"}
{"time":"2025-02-27T15:16:24.713612214-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.servlet.http.HttpServletResponse.setStatus(int, java.lang.String) location 0 matches0"}
{"time":"2025-02-27T15:16:24.713670798-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.servlet.http.HttpServletResponse.encodeUrl(java.lang.String) location 0 matches0"}
{"time":"2025-02-27T15:16:24.713700895-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.713709417-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.713840436-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: MethodReferencePattern: javax.servlet.http.httpsession.getvalue(*), pattern match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE"}
{"time":"2025-02-27T15:16:24.713895938-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.713912739-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.713918971-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.71393263-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.713955111-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.713984927-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.714022001-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: MethodReferencePattern: javax.servlet.http.httpsession.getvaluenames(*), pattern match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE"}
{"time":"2025-02-27T15:16:24.714038756-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.714046108-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.714066262-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.servlet.http.HttpSession.getValue(*) location 2 matches0"}
{"time":"2025-02-27T15:16:24.714076103-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: MethodReferencePattern: javax.servlet.http.httpsession.putvalue(*), pattern match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE"}
{"time":"2025-02-27T15:16:24.714131921-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.servlet.http.HttpServletRequestWrapper.isRequestedSessionIdFromUrl(*) location 2 matches0"}
{"time":"2025-02-27T15:16:24.714168674-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<javax.servlet.http.HttpServletResponseWrapper.encodeRedirectUrl(java.lang>, type<String)> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<String)>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax.servlet.http.HttpServletResponseWrapper.encodeRedirectUrl(java.lang>, type<String)>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: javax.servlet.http.httpservletresponsewrapper.encoderedirecturl(*java.lang.string), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: javax.servlet.http.HttpServletResponseWrapper.encodeRedirectUrl(*java.lang.String), exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.714179254-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.servlet.http.HttpSession.getValueNames(*) location 2 matches0"}
{"time":"2025-02-27T15:16:24.714314655-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.714354606-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.714379251-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<javax.ejb>, type<Stateless> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Stateless>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax.ejb>, type<Stateless>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.714417422-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.ejb.Stateless location 4 matches0"}
{"time":"2025-02-27T15:16:24.714485967-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.servlet.http.HttpSession.putValue(*) location 2 matches0"}
{"time":"2025-02-27T15:16:24.714522108-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.714561449-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.714602276-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: MethodReferencePattern: javax.servlet.http.httpservletresponsewrapper.setstatus(int, *java.lang.string), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: javax.servlet.http.HttpServletResponseWrapper.setStatus(int, *java.lang.String), exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.714615001-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.714629805-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.714686426-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: MethodReferencePattern: javax.servlet.http.httpsession.removevalue(*), pattern match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE"}
{"time":"2025-02-27T15:16:24.714722304-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<javax.ejb>, type<Stateful> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Stateful>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax.ejb>, type<Stateful>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.714738347-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.714753057-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.71478847-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.71481254-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.714827416-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.ejb.Stateful location 4 matches0"}
{"time":"2025-02-27T15:16:24.714840847-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<javax>, type<ejb*> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ejb*>, pattern match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax>, type<ejb*>, pattern match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.714903203-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<jakarta.ejb>, type<Stateless> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Stateless>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<jakarta.ejb>, type<Stateless>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.714922817-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.ejb* location 4 matches0"}
{"time":"2025-02-27T15:16:24.714937864-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for jakarta.ejb.Stateless location 4 matches0"}
{"time":"2025-02-27T15:16:24.714977768-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.715020507-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.715046332-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.715059148-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.715069882-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<jakarta>, type<ejb*> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ejb*>, pattern match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<jakarta>, type<ejb*>, pattern match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.715088111-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.715093559-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.715136034-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<javax.enterprise.inject>, type<Produces> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Produces>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax.enterprise.inject>, type<Produces>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.715148257-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.enterprise.inject.Produces location 8 matches0"}
{"time":"2025-02-27T15:16:24.715174598-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<jakarta.ejb>, type<Stateful> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Stateful>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<jakarta.ejb>, type<Stateful>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.715190557-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for jakarta.ejb* location 4 matches0"}
{"time":"2025-02-27T15:16:24.715230673-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.servlet.http.HttpServletResponseWrapper.setStatus(int, java.lang.String) location 0 matches0"}
{"time":"2025-02-27T15:16:24.715275309-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for jakarta.ejb.Stateful location 4 matches0"}
{"time":"2025-02-27T15:16:24.715332913-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.715348681-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.715375217-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<javax.ejb>, type<Remote> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Remote>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax.ejb>, type<Remote>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.715397117-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.71543625-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.715493296-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.servlet.http.HttpServletResponseWrapper.encodeRedirectUrl(java.lang.String) location 0 matches0"}
{"time":"2025-02-27T15:16:24.715506609-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.servlet.http.HttpSession.removeValue(*) location 2 matches0"}
{"time":"2025-02-27T15:16:24.715518443-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.715527126-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.715541653-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<javax.enterprise.inject>, type<Produces> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Produces>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax.enterprise.inject>, type<Produces>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.715565265-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<jakarta.enterprise.inject>, type<Produces> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Produces>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<jakarta.enterprise.inject>, type<Produces>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.715571748-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.ejb.Remote location 4 matches0"}
{"time":"2025-02-27T15:16:24.715581873-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.715590808-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for jakarta.enterprise.inject.Produces location 4 matches0"}
{"time":"2025-02-27T15:16:24.715646778-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.715655741-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.enterprise.inject.Produces location 4 matches0"}
{"time":"2025-02-27T15:16:24.715696255-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.715711203-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.715717117-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.715752024-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.715874948-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<javax.persistence>, type<EntityManager> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<EntityManager>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax.persistence>, type<EntityManager>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.715940016-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<jakarta.ejb>, type<Stateless> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Stateless>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<jakarta.ejb>, type<Stateless>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.715953904-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.715961655-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for jakarta.ejb.Stateless location 4 matches0"}
{"time":"2025-02-27T15:16:24.71597119-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<jakarta.ejb>, type<Remote> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Remote>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<jakarta.ejb>, type<Remote>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.715983133-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.persistence.EntityManager location 8 matches0"}
{"time":"2025-02-27T15:16:24.715992837-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for jakarta.ejb.Remote location 4 matches0"}
{"time":"2025-02-27T15:16:24.716071524-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.716086439-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.716110049-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<javax.ejb>, type<MessageDriven> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<MessageDriven>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax.ejb>, type<MessageDriven>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.716151302-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.ejb.MessageDriven location 4 matches0"}
{"time":"2025-02-27T15:16:24.716192717-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.716238146-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.716276932-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<jakarta.ws.rs>, type<ApplicationPath> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ApplicationPath>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<jakarta.ws.rs>, type<ApplicationPath>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.716500782-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.71655701-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.716607861-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.716652171-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for jakarta.ws.rs.ApplicationPath location 4 matches0"}
{"time":"2025-02-27T15:16:24.71667894-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.716691756-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.716700015-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.716710764-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.71680102-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.71681472-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.716835204-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: SuperInterfaceReferencePattern: <Application>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.716850102-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for jakarta.ws.rs.core.Application location 1 matches0"}
{"time":"2025-02-27T15:16:24.716869178-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.716883493-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.716900968-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: PackageDeclarationPattern: <javax.jms*>, pattern match, case insensitive, generic full match, fine grain: none | PackageReferencePattern: <javax.jms*>, pattern match, case insensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.716910242-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.sql.(ANSICaseFragment|ANSIJoinFragment|CacheJoinFragment|CaseFragment|ConditionFragment|DecodeCaseFragment|DerbyCaseFragment|DisjunctionFragment|HSQLCaseFragment|InsertSelect|JoinFragment|JoinType|MckoiCaseFragment|OracleJoinFragment|QueryJoinFragment|QuerySelect|Select|SelectExpression|SelectFragment|SelectValues|Sybase11JoinFragment) location 0 matches0"}
{"time":"2025-02-27T15:16:24.716921972-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.jms* location 11 matches0"}
{"time":"2025-02-27T15:16:24.716939472-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.716980988-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.717039071-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: PackageDeclarationPattern: <jakarta.jms*>, pattern match, case insensitive, generic full match, fine grain: none | PackageReferencePattern: <jakarta.jms*>, pattern match, case insensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.717082468-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for jakarta.jms* location 11 matches0"}
{"time":"2025-02-27T15:16:24.718173354-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.hibernate.loader>, type<AbstractEntityJoinWalker> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<AbstractEntityJoinWalker>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader>, type<AbstractEntityJoinWalker>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.abstractentityjoinwalker(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.AbstractEntityJoinWalker(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader>, type<BasicLoader> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<BasicLoader>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader>, type<BasicLoader>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.basicloader(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.BasicLoader(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader>, type<CollectionAliases> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<CollectionAliases>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader>, type<CollectionAliases>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.collectionaliases(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.CollectionAliases(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader>, type<ColumnEntityAliases> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ColumnEntityAliases>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader>, type<ColumnEntityAliases>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.columnentityaliases(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.ColumnEntityAliases(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader>, type<DefaultEntityAliases> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<DefaultEntityAliases>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader>, type<DefaultEntityAliases>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.defaultentityaliases(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.DefaultEntityAliases(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader>, type<EntityAliases> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<EntityAliases>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader>, type<EntityAliases>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.entityaliases(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.EntityAliases(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader>, type<GeneratedCollectionAliases> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<GeneratedCollectionAliases>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader>, type<GeneratedCollectionAliases>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.generatedcollectionaliases(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.GeneratedCollectionAliases(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader>, type<JoinWalker> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<JoinWalker>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader>, type<JoinWalker>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.joinwalker(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.JoinWalker(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader>, type<Loader> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Loader>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader>, type<Loader>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.loader(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.Loader(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader>, type<OuterJoinLoader> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<OuterJoinLoader>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader>, type<OuterJoinLoader>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.outerjoinloader(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.OuterJoinLoader(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader>, type<OuterJoinableAssociation> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<OuterJoinableAssociation>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader>, type<OuterJoinableAssociation>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.outerjoinableassociation(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.OuterJoinableAssociation(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.collection>, type<BasicCollectionJoinWalker> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<BasicCollectionJoinWalker>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.collection>, type<BasicCollectionJoinWalker>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.collection.basiccollectionjoinwalker(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.collection.BasicCollectionJoinWalker(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.collection>, type<BasicCollectionLoader> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<BasicCollectionLoader>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.collection>, type<BasicCollectionLoader>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.collection.basiccollectionloader(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.collection.BasicCollectionLoader(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.collection>, type<BatchingCollectionInitializer> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<BatchingCollectionInitializer>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.collection>, type<BatchingCollectionInitializer>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.collection.batchingcollectioninitializer(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.collection.BatchingCollectionInitializer(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.collection>, type<BatchingCollectionInitializerBuilder> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<BatchingCollectionInitializerBuilder>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.collection>, type<BatchingCollectionInitializerBuilder>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.collection.batchingcollectioninitializerbuilder(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.collection.BatchingCollectionInitializerBuilder(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.collection>, type<CollectionInitializer> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<CollectionInitializer>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.collection>, type<CollectionInitializer>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.collection.collectioninitializer(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.collection.CollectionInitializer(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.collection>, type<CollectionJoinWalker> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<CollectionJoinWalker>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.collection>, type<CollectionJoinWalker>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.collection.collectionjoinwalker(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.collection.CollectionJoinWalker(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.collection>, type<CollectionLoader> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<CollectionLoader>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.collection>, type<CollectionLoader>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.collection.collectionloader(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.collection.CollectionLoader(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.collection>, type<DynamicBatchingCollectionInitializerBuilder> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<DynamicBatchingCollectionInitializerBuilder>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.collection>, type<DynamicBatchingCollectionInitializerBuilder>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.collection.dynamicbatchingcollectioninitializerbuilder(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.collection.DynamicBatchingCollectionInitializerBuilder(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.collection>, type<LegacyBatchingCollectionInitializerBuilder> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<LegacyBatchingCollectionInitializerBuilder>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.collection>, type<LegacyBatchingCollectionInitializerBuilder>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.collection.legacybatchingcollectioninitializerbuilder(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.collection.LegacyBatchingCollectionInitializerBuilder(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.collection>, type<OneToManyJoinWalker> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<OneToManyJoinWalker>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.collection>, type<OneToManyJoinWalker>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.collection.onetomanyjoinwalker(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.collection.OneToManyJoinWalker(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.collection>, type<OneToManyLoader> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<OneToManyLoader>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.collection>, type<OneToManyLoader>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.collection.onetomanyloader(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.collection.OneToManyLoader(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.collection>, type<PaddedBatchingCollectionInitializerBuilder> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<PaddedBatchingCollectionInitializerBuilder>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.collection>, type<PaddedBatchingCollectionInitializerBuilder>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.collection.paddedbatchingcollectioninitializerbuilder(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.collection.PaddedBatchingCollectionInitializerBuilder(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.collection>, type<SubselectCollectionLoader> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<SubselectCollectionLoader>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.collection>, type<SubselectCollectionLoader>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.collection.subselectcollectionloader(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.collection.SubselectCollectionLoader(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.collection>, type<SubselectOneToManyLoader> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<SubselectOneToManyLoader>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.collection>, type<SubselectOneToManyLoader>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.collection.subselectonetomanyloader(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.collection.SubselectOneToManyLoader(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.collection.plan>, type<AbstractBatchingCollectionInitializerBuilder> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<AbstractBatchingCollectionInitializerBuilder>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.collection.plan>, type<AbstractBatchingCollectionInitializerBuilder>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.collection.plan.abstractbatchingcollectioninitializerbuilder(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.collection.plan.AbstractBatchingCollectionInitializerBuilder(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.collection.plan>, type<AbstractLoadPlanBasedCollectionInitializer> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<AbstractLoadPlanBasedCollectionInitializer>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.collection.plan>, type<AbstractLoadPlanBasedCollectionInitializer>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.collection.plan.abstractloadplanbasedcollectioninitializer(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.collection.plan>, type<BatchingCollectionInitializer> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<BatchingCollectionInitializer>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.collection.plan>, type<BatchingCollectionInitializer>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.collection.plan.batchingcollectioninitializer(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.collection.plan.BatchingCollectionInitializer(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.collection.plan>, type<CollectionLoader> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<CollectionLoader>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.collection.plan>, type<CollectionLoader>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.collection.plan.collectionloader(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.collection.plan.CollectionLoader(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.collection.plan>, type<LegacyBatchingCollectionInitializerBuilder> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<LegacyBatchingCollectionInitializerBuilder>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.collection.plan>, type<LegacyBatchingCollectionInitializerBuilder>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.collection.plan.legacybatchingcollectioninitializerbuilder(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.collection.plan.LegacyBatchingCollectionInitializerBuilder(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.criteria>, type<ComponentCollectionCriteriaInfoProvider> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ComponentCollectionCriteriaInfoProvider>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.criteria>, type<ComponentCollectionCriteriaInfoProvider>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.criteria.componentcollectioncriteriainfoprovider(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.criteria.ComponentCollectionCriteriaInfoProvider(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.criteria>, type<CriteriaInfoProvider> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<CriteriaInfoProvider>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.criteria>, type<CriteriaInfoProvider>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.criteria.criteriainfoprovider(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.criteria.CriteriaInfoProvider(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.criteria>, type<CriteriaJoinWalker> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<CriteriaJoinWalker>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.criteria>, type<CriteriaJoinWalker>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.criteria.criteriajoinwalker(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.criteria.CriteriaJoinWalker(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.criteria>, type<CriteriaLoader> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<CriteriaLoader>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.criteria>, type<CriteriaLoader>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.criteria.criterialoader(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.criteria.CriteriaLoader(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.criteria>, type<CriteriaQueryTranslator> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<CriteriaQueryTranslator>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.criteria>, type<CriteriaQueryTranslator>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.criteria.criteriaquerytranslator(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.criteria.CriteriaQueryTranslator(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.criteria>, type<EntityCriteriaInfoProvider> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<EntityCriteriaInfoProvider>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.criteria>, type<EntityCriteriaInfoProvider>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.criteria.entitycriteriainfoprovider(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.criteria.EntityCriteriaInfoProvider(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.criteria>, type<ScalarCollectionCriteriaInfoProvider> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ScalarCollectionCriteriaInfoProvider>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.criteria>, type<ScalarCollectionCriteriaInfoProvider>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.criteria.scalarcollectioncriteriainfoprovider(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.criteria.ScalarCollectionCriteriaInfoProvider(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.custom>, type<CollectionFetchReturn> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<CollectionFetchReturn>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.custom>, type<CollectionFetchReturn>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.custom.collectionfetchreturn(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.custom.CollectionFetchReturn(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.custom>, type<CollectionReturn> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<CollectionReturn>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.custom>, type<CollectionReturn>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.custom.collectionreturn(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.custom.CollectionReturn(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.custom>, type<ColumnCollectionAliases> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ColumnCollectionAliases>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.custom>, type<ColumnCollectionAliases>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.custom.columncollectionaliases(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.custom.ColumnCollectionAliases(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.custom>, type<ConstructorResultColumnProcessor> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ConstructorResultColumnProcessor>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.custom>, type<ConstructorResultColumnProcessor>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.custom.constructorresultcolumnprocessor(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.custom.ConstructorResultColumnProcessor(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.custom>, type<ConstructorReturn> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ConstructorReturn>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.custom>, type<ConstructorReturn>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.custom.constructorreturn(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.custom.ConstructorReturn(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.custom>, type<CustomLoader> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<CustomLoader>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.custom>, type<CustomLoader>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.custom.customloader(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.custom.CustomLoader(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.custom>, type<CustomQuery> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<CustomQuery>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.custom>, type<CustomQuery>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.custom.customquery(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.custom.CustomQuery(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.custom>, type<EntityFetchReturn> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<EntityFetchReturn>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.custom>, type<EntityFetchReturn>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.custom.entityfetchreturn(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.custom.EntityFetchReturn(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.custom>, type<FetchReturn> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<FetchReturn>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.custom>, type<FetchReturn>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.custom.fetchreturn(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.custom.FetchReturn(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.custom>, type<JdbcResultMetadata> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<JdbcResultMetadata>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.custom>, type<JdbcResultMetadata>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.custom.jdbcresultmetadata(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.custom.JdbcResultMetadata(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.custom>, type<NonScalarResultColumnProcessor> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<NonScalarResultColumnProcessor>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.custom>, type<NonScalarResultColumnProcessor>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.custom.nonscalarresultcolumnprocessor(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.custom.NonScalarResultColumnProcessor(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.custom>, type<NonScalarReturn> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<NonScalarReturn>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.custom>, type<NonScalarReturn>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.custom.nonscalarreturn(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.custom.NonScalarReturn(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.custom>, type<NonUniqueDiscoveredSqlAliasException> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<NonUniqueDiscoveredSqlAliasException>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.custom>, type<NonUniqueDiscoveredSqlAliasException>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.custom.nonuniquediscoveredsqlaliasexception(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.custom.NonUniqueDiscoveredSqlAliasException(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.custom>, type<ResultColumnProcessor> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ResultColumnProcessor>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.custom>, type<ResultColumnProcessor>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.custom.resultcolumnprocessor(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.custom.ResultColumnProcessor(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.custom>, type<ResultRowProcessor> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ResultRowProcessor>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.custom>, type<ResultRowProcessor>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.custom.resultrowprocessor(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.custom.ResultRowProcessor(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.custom>, type<Return> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Return>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.custom>, type<Return>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.custom.return(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.custom.Return(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.custom>, type<RootReturn> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<RootReturn>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.custom>, type<RootReturn>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.custom.rootreturn(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.custom.RootReturn(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.custom>, type<ScalarResultColumnProcessor> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ScalarResultColumnProcessor>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.custom>, type<ScalarResultColumnProcessor>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.custom.scalarresultcolumnprocessor(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.custom.ScalarResultColumnProcessor(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.custom>, type<ScalarReturn> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ScalarReturn>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.custom>, type<ScalarReturn>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.custom.scalarreturn(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.custom.ScalarReturn(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.custom.sql>, type<NamedParamBinder> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<NamedParamBinder>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.custom.sql>, type<NamedParamBinder>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.custom.sql.namedparambinder(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.custom.sql.NamedParamBinder(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.custom.sql>, type<PositionalParamBinder> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<PositionalParamBinder>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.custom.sql>, type<PositionalParamBinder>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.custom.sql.positionalparambinder(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.custom.sql.PositionalParamBinder(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.custom.sql>, type<SQLCustomQuery> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<SQLCustomQuery>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.custom.sql>, type<SQLCustomQuery>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.custom.sql.sqlcustomquery(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.custom.sql.SQLCustomQuery(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.custom.sql>, type<SQLQueryParser> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<SQLQueryParser>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.custom.sql>, type<SQLQueryParser>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.custom.sql.sqlqueryparser(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.custom.sql.SQLQueryParser(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.custom.sql>, type<SQLQueryReturnProcessor> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<SQLQueryReturnProcessor>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.custom.sql>, type<SQLQueryReturnProcessor>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.custom.sql.sqlqueryreturnprocessor(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.custom.sql.SQLQueryReturnProcessor(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.entity>, type<AbstractEntityLoader> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<AbstractEntityLoader>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.entity>, type<AbstractEntityLoader>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.entity.abstractentityloader(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.entity.AbstractEntityLoader(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.entity>, type<BatchingEntityLoaderBuilder> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<BatchingEntityLoaderBuilder>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.entity>, type<BatchingEntityLoaderBuilder>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.entity.batchingentityloaderbuilder(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.entity.BatchingEntityLoaderBuilder(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.entity>, type<CacheEntityLoaderHelper> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<CacheEntityLoaderHelper>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.entity>, type<CacheEntityLoaderHelper>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.entity.cacheentityloaderhelper(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.entity.CacheEntityLoaderHelper(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.entity>, type<CascadeEntityJoinWalker> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<CascadeEntityJoinWalker>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.entity>, type<CascadeEntityJoinWalker>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.entity.cascadeentityjoinwalker(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.entity.CascadeEntityJoinWalker(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.entity>, type<CascadeEntityLoader> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<CascadeEntityLoader>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.entity>, type<CascadeEntityLoader>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.entity.cascadeentityloader(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.entity.CascadeEntityLoader(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.entity>, type<CollectionElementLoader> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<CollectionElementLoader>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.entity>, type<CollectionElementLoader>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.entity.collectionelementloader(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.entity.CollectionElementLoader(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.entity>, type<EntityJoinWalker> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<EntityJoinWalker>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.entity>, type<EntityJoinWalker>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.entity.entityjoinwalker(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.entity.EntityJoinWalker(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.entity>, type<EntityLoader> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<EntityLoader>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.entity>, type<EntityLoader>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.entity.entityloader(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.entity.EntityLoader(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.entity>, type<NaturalIdEntityJoinWalker> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<NaturalIdEntityJoinWalker>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.entity>, type<NaturalIdEntityJoinWalker>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.entity.naturalidentityjoinwalker(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.entity.NaturalIdEntityJoinWalker(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.entity>, type<NaturalIdType> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<NaturalIdType>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.entity>, type<NaturalIdType>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.entity.naturalidtype(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.entity.NaturalIdType(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.entity>, type<UniqueEntityLoader> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<UniqueEntityLoader>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.entity>, type<UniqueEntityLoader>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.entity.uniqueentityloader(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.entity.UniqueEntityLoader(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.entity.plan>, type<AbstractBatchingEntityLoaderBuilder> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<AbstractBatchingEntityLoaderBuilder>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.entity.plan>, type<AbstractBatchingEntityLoaderBuilder>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.entity.plan.abstractbatchingentityloaderbuilder(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.entity.plan.AbstractBatchingEntityLoaderBuilder(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.entity.plan>, type<AbstractLoadPlanBasedEntityLoader> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<AbstractLoadPlanBasedEntityLoader>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.entity.plan>, type<AbstractLoadPlanBasedEntityLoader>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.entity.plan.abstractloadplanbasedentityloader(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.entity.plan>, type<BatchingEntityLoader> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<BatchingEntityLoader>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.entity.plan>, type<BatchingEntityLoader>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.entity.plan.batchingentityloader(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.entity.plan.BatchingEntityLoader(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.entity.plan>, type<DynamicBatchingEntityLoader> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<DynamicBatchingEntityLoader>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.entity.plan>, type<DynamicBatchingEntityLoader>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.entity.plan.dynamicbatchingentityloader(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.entity.plan.DynamicBatchingEntityLoader(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.entity.plan>, type<DynamicBatchingEntityLoaderBuilder> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<DynamicBatchingEntityLoaderBuilder>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.entity.plan>, type<DynamicBatchingEntityLoaderBuilder>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.entity.plan.dynamicbatchingentityloaderbuilder(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.entity.plan.DynamicBatchingEntityLoaderBuilder(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.entity.plan>, type<EntityLoader> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<EntityLoader>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.entity.plan>, type<EntityLoader>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.entity.plan.entityloader(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.entity.plan.EntityLoader(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.entity.plan>, type<LegacyBatchingEntityLoaderBuilder> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<LegacyBatchingEntityLoaderBuilder>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.entity.plan>, type<LegacyBatchingEntityLoaderBuilder>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.entity.plan.legacybatchingentityloaderbuilder(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.entity.plan.LegacyBatchingEntityLoaderBuilder(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.entity.plan>, type<MultiEntityLoadingSupport> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<MultiEntityLoadingSupport>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.entity.plan>, type<MultiEntityLoadingSupport>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.entity.plan.multientityloadingsupport(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.entity.plan.MultiEntityLoadingSupport(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.entity.plan>, type<PaddedBatchingEntityLoader> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<PaddedBatchingEntityLoader>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.entity.plan>, type<PaddedBatchingEntityLoader>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.entity.plan.paddedbatchingentityloader(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.entity.plan.PaddedBatchingEntityLoader(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.entity.plan>, type<PaddedBatchingEntityLoaderBuilder> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<PaddedBatchingEntityLoaderBuilder>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.entity.plan>, type<PaddedBatchingEntityLoaderBuilder>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.entity.plan.paddedbatchingentityloaderbuilder(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.entity.plan.PaddedBatchingEntityLoaderBuilder(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.hql>, type<QueryLoader> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<QueryLoader>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.hql>, type<QueryLoader>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.hql.queryloader(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.hql.QueryLoader(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.build.internal>, type<AbstractEntityGraphVisitationStrategy> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<AbstractEntityGraphVisitationStrategy>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.build.internal>, type<AbstractEntityGraphVisitationStrategy>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.build.internal.abstractentitygraphvisitationstrategy(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.build.internal.AbstractEntityGraphVisitationStrategy(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.build.internal>, type<AbstractLoadPlanBuildingAssociationVisitationStrategy> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<AbstractLoadPlanBuildingAssociationVisitationStrategy>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.build.internal>, type<AbstractLoadPlanBuildingAssociationVisitationStrategy>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.build.internal.abstractloadplanbuildingassociationvisitationstrategy(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.build.internal>, type<CascadeStyleLoadPlanBuildingAssociationVisitationStrategy> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<CascadeStyleLoadPlanBuildingAssociationVisitationStrategy>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.build.internal>, type<CascadeStyleLoadPlanBuildingAssociationVisitationStrategy>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.build.internal.cascadestyleloadplanbuildingassociationvisitationstrategy(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.build.internal.CascadeStyleLoadPlanBuildingAssociationVisitationStrategy(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.build.internal>, type<FetchGraphLoadPlanBuildingStrategy> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<FetchGraphLoadPlanBuildingStrategy>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.build.internal>, type<FetchGraphLoadPlanBuildingStrategy>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.build.internal.fetchgraphloadplanbuildingstrategy(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.build.internal.FetchGraphLoadPlanBuildingStrategy(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.build.internal>, type<FetchStyleLoadPlanBuildingAssociationVisitationStrategy> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<FetchStyleLoadPlanBuildingAssociationVisitationStrategy>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.build.internal>, type<FetchStyleLoadPlanBuildingAssociationVisitationStrategy>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.build.internal.fetchstyleloadplanbuildingassociationvisitationstrategy(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.build.internal>, type<LoadGraphLoadPlanBuildingStrategy> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<LoadGraphLoadPlanBuildingStrategy>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.build.internal>, type<LoadGraphLoadPlanBuildingStrategy>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.build.internal.loadgraphloadplanbuildingstrategy(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.build.internal.LoadGraphLoadPlanBuildingStrategy(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.build.internal>, type<LoadPlanImpl> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<LoadPlanImpl>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.build.internal>, type<LoadPlanImpl>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.build.internal.loadplanimpl(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.build.internal.LoadPlanImpl(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.build.internal.returns>, type<AbstractAnyReference> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<AbstractAnyReference>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.build.internal.returns>, type<AbstractAnyReference>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.build.internal.returns.abstractanyreference(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.build.internal.returns.AbstractAnyReference(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.build.internal.returns>, type<AbstractCollectionReference> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<AbstractCollectionReference>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.build.internal.returns>, type<AbstractCollectionReference>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.build.internal.returns.abstractcollectionreference(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.build.internal.returns.AbstractCollectionReference(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.build.internal.returns>, type<AbstractCompositeEntityIdentifierDescription> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<AbstractCompositeEntityIdentifierDescription>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.build.internal.returns>, type<AbstractCompositeEntityIdentifierDescription>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.build.internal.returns.abstractcompositeentityidentifierdescription(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.build.internal.returns.AbstractCompositeEntityIdentifierDescription(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.build.internal.returns>, type<AbstractCompositeFetch> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<AbstractCompositeFetch>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.build.internal.returns>, type<AbstractCompositeFetch>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.build.internal.returns.abstractcompositefetch(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.build.internal.returns.AbstractCompositeFetch(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.build.internal.returns>, type<AbstractCompositeReference> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<AbstractCompositeReference>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.build.internal.returns>, type<AbstractCompositeReference>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.build.internal.returns.abstractcompositereference(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.build.internal.returns.AbstractCompositeReference(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.build.internal.returns>, type<AbstractEntityReference> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<AbstractEntityReference>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.build.internal.returns>, type<AbstractEntityReference>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.build.internal.returns.abstractentityreference(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.build.internal.returns.AbstractEntityReference(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.build.internal.returns>, type<AbstractExpandingFetchSource> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<AbstractExpandingFetchSource>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.build.internal.returns>, type<AbstractExpandingFetchSource>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.build.internal.returns.abstractexpandingfetchsource(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.build.internal.returns.AbstractExpandingFetchSource(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.build.internal.returns>, type<AnyAttributeFetchImpl> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<AnyAttributeFetchImpl>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.build.internal.returns>, type<AnyAttributeFetchImpl>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.build.internal.returns.anyattributefetchimpl(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.build.internal.returns.AnyAttributeFetchImpl(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.build.internal.returns>, type<BidirectionalEntityReferenceImpl> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<BidirectionalEntityReferenceImpl>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.build.internal.returns>, type<BidirectionalEntityReferenceImpl>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.build.internal.returns.bidirectionalentityreferenceimpl(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.build.internal.returns.BidirectionalEntityReferenceImpl(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.build.internal.returns>, type<CollectionAttributeFetchImpl> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<CollectionAttributeFetchImpl>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.build.internal.returns>, type<CollectionAttributeFetchImpl>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.build.internal.returns.collectionattributefetchimpl(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.build.internal.returns.CollectionAttributeFetchImpl(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.build.internal.returns>, type<CollectionFetchableElementAnyGraph> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<CollectionFetchableElementAnyGraph>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.build.internal.returns>, type<CollectionFetchableElementAnyGraph>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.build.internal.returns.collectionfetchableelementanygraph(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementAnyGraph(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.build.internal.returns>, type<CollectionFetchableElementCompositeGraph> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<CollectionFetchableElementCompositeGraph>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.build.internal.returns>, type<CollectionFetchableElementCompositeGraph>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.build.internal.returns.collectionfetchableelementcompositegraph(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementCompositeGraph(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.build.internal.returns>, type<CollectionFetchableElementEntityGraph> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<CollectionFetchableElementEntityGraph>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.build.internal.returns>, type<CollectionFetchableElementEntityGraph>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.build.internal.returns.collectionfetchableelemententitygraph(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.build.internal.returns>, type<CollectionFetchableIndexAnyGraph> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<CollectionFetchableIndexAnyGraph>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.build.internal.returns>, type<CollectionFetchableIndexAnyGraph>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.build.internal.returns.collectionfetchableindexanygraph(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.build.internal.returns.CollectionFetchableIndexAnyGraph(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.build.internal.returns>, type<CollectionFetchableIndexCompositeGraph> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<CollectionFetchableIndexCompositeGraph>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.build.internal.returns>, type<CollectionFetchableIndexCompositeGraph>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.build.internal.returns.collectionfetchableindexcompositegraph(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.build.internal.returns.CollectionFetchableIndexCompositeGraph(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.build.internal.returns>, type<CollectionFetchableIndexEntityGraph> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<CollectionFetchableIndexEntityGraph>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.build.internal.returns>, type<CollectionFetchableIndexEntityGraph>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.build.internal.returns.collectionfetchableindexentitygraph(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.build.internal.returns.CollectionFetchableIndexEntityGraph(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.build.internal.returns>, type<CollectionReturnImpl> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<CollectionReturnImpl>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.build.internal.returns>, type<CollectionReturnImpl>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.build.internal.returns.collectionreturnimpl(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.build.internal.returns>, type<CompositeAttributeFetchImpl> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<CompositeAttributeFetchImpl>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.build.internal.returns>, type<CompositeAttributeFetchImpl>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.build.internal.returns.compositeattributefetchimpl(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.build.internal.returns.CompositeAttributeFetchImpl(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.build.internal.returns>, type<EncapsulatedEntityIdentifierDescription> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<EncapsulatedEntityIdentifierDescription>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.build.internal.returns>, type<EncapsulatedEntityIdentifierDescription>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.build.internal.returns.encapsulatedentityidentifierdescription(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.build.internal.returns.EncapsulatedEntityIdentifierDescription(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.build.internal.returns>, type<EntityAttributeFetchImpl> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<EntityAttributeFetchImpl>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.build.internal.returns>, type<EntityAttributeFetchImpl>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.build.internal.returns.entityattributefetchimpl(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.build.internal.returns>, type<EntityReturnImpl> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<EntityReturnImpl>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.build.internal.returns>, type<EntityReturnImpl>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.build.internal.returns.entityreturnimpl(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.build.internal.returns>, type<NestedCompositeAttributeFetchImpl> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<NestedCompositeAttributeFetchImpl>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.build.internal.returns>, type<NestedCompositeAttributeFetchImpl>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.build.internal.returns.nestedcompositeattributefetchimpl(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.build.internal.returns.NestedCompositeAttributeFetchImpl(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.build.internal.returns>, type<NonEncapsulatedEntityIdentifierDescription> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<NonEncapsulatedEntityIdentifierDescription>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.build.internal.returns>, type<NonEncapsulatedEntityIdentifierDescription>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.build.internal.returns.nonencapsulatedentityidentifierdescription(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.build.internal.returns.NonEncapsulatedEntityIdentifierDescription(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.build.internal.returns>, type<ScalarReturnImpl> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ScalarReturnImpl>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.build.internal.returns>, type<ScalarReturnImpl>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.build.internal.returns.scalarreturnimpl(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.build.internal.returns.ScalarReturnImpl(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.build.internal.returns>, type<SimpleEntityIdentifierDescriptionImpl> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<SimpleEntityIdentifierDescriptionImpl>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.build.internal.returns>, type<SimpleEntityIdentifierDescriptionImpl>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.build.internal.returns.simpleentityidentifierdescriptionimpl(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.build.internal.returns.SimpleEntityIdentifierDescriptionImpl(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.build.internal.spaces>, type<AbstractExpandingSourceQuerySpace> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<AbstractExpandingSourceQuerySpace>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.build.internal.spaces>, type<AbstractExpandingSourceQuerySpace>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.build.internal.spaces.abstractexpandingsourcequeryspace(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.build.internal.spaces.AbstractExpandingSourceQuerySpace(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.build.internal.spaces>, type<AbstractQuerySpace> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<AbstractQuerySpace>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.build.internal.spaces>, type<AbstractQuerySpace>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.build.internal.spaces.abstractqueryspace(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.build.internal.spaces.AbstractQuerySpace(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.build.internal.spaces>, type<CollectionQuerySpaceImpl> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<CollectionQuerySpaceImpl>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.build.internal.spaces>, type<CollectionQuerySpaceImpl>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.build.internal.spaces.collectionqueryspaceimpl(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.build.internal.spaces>, type<CompositePropertyMapping> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<CompositePropertyMapping>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.build.internal.spaces>, type<CompositePropertyMapping>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.build.internal.spaces.compositepropertymapping(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.build.internal.spaces.CompositePropertyMapping(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.build.internal.spaces>, type<CompositeQuerySpaceImpl> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<CompositeQuerySpaceImpl>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.build.internal.spaces>, type<CompositeQuerySpaceImpl>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.build.internal.spaces.compositequeryspaceimpl(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.build.internal.spaces>, type<EntityQuerySpaceImpl> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<EntityQuerySpaceImpl>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.build.internal.spaces>, type<EntityQuerySpaceImpl>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.build.internal.spaces.entityqueryspaceimpl(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.build.internal.spaces>, type<JoinHelper> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<JoinHelper>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.build.internal.spaces>, type<JoinHelper>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.build.internal.spaces.joinhelper(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.build.internal.spaces.JoinHelper(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.build.internal.spaces>, type<JoinImpl> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<JoinImpl>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.build.internal.spaces>, type<JoinImpl>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.build.internal.spaces.joinimpl(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.build.internal.spaces.JoinImpl(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.build.internal.spaces>, type<QuerySpaceHelper> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<QuerySpaceHelper>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.build.internal.spaces>, type<QuerySpaceHelper>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.build.internal.spaces.queryspacehelper(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.build.internal.spaces.QuerySpaceHelper(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.build.internal.spaces>, type<QuerySpacesImpl> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<QuerySpacesImpl>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.build.internal.spaces>, type<QuerySpacesImpl>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.build.internal.spaces.queryspacesimpl(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.build.spi>, type<ExpandingCollectionQuerySpace> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ExpandingCollectionQuerySpace>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.build.spi>, type<ExpandingCollectionQuerySpace>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.build.spi.expandingcollectionqueryspace(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.build.spi.ExpandingCollectionQuerySpace(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.build.spi>, type<ExpandingCompositeQuerySpace> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ExpandingCompositeQuerySpace>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.build.spi>, type<ExpandingCompositeQuerySpace>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.build.spi.expandingcompositequeryspace(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.build.spi.ExpandingCompositeQuerySpace(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.build.spi>, type<ExpandingEntityIdentifierDescription> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ExpandingEntityIdentifierDescription>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.build.spi>, type<ExpandingEntityIdentifierDescription>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.build.spi.expandingentityidentifierdescription(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.build.spi.ExpandingEntityIdentifierDescription(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.build.spi>, type<ExpandingEntityQuerySpace> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ExpandingEntityQuerySpace>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.build.spi>, type<ExpandingEntityQuerySpace>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.build.spi.expandingentityqueryspace(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.build.spi.ExpandingEntityQuerySpace(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.build.spi>, type<ExpandingFetchSource> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ExpandingFetchSource>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.build.spi>, type<ExpandingFetchSource>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.build.spi.expandingfetchsource(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.build.spi.ExpandingFetchSource(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.build.spi>, type<ExpandingQuerySpace> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ExpandingQuerySpace>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.build.spi>, type<ExpandingQuerySpace>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.build.spi.expandingqueryspace(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.build.spi.ExpandingQuerySpace(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.build.spi>, type<ExpandingQuerySpaces> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ExpandingQuerySpaces>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.build.spi>, type<ExpandingQuerySpaces>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.build.spi.expandingqueryspaces(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.build.spi.ExpandingQuerySpaces(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.build.spi>, type<LoadPlanBuildingAssociationVisitationStrategy> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<LoadPlanBuildingAssociationVisitationStrategy>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.build.spi>, type<LoadPlanBuildingAssociationVisitationStrategy>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.build.spi.loadplanbuildingassociationvisitationstrategy(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.build.spi.LoadPlanBuildingAssociationVisitationStrategy(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.build.spi>, type<LoadPlanBuildingContext> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<LoadPlanBuildingContext>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.build.spi>, type<LoadPlanBuildingContext>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.build.spi.loadplanbuildingcontext(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.build.spi.LoadPlanBuildingContext(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.build.spi>, type<LoadPlanTreePrinter> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<LoadPlanTreePrinter>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.build.spi>, type<LoadPlanTreePrinter>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.build.spi.loadplantreeprinter(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.build.spi>, type<MetamodelDrivenLoadPlanBuilder> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<MetamodelDrivenLoadPlanBuilder>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.build.spi>, type<MetamodelDrivenLoadPlanBuilder>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.build.spi.metamodeldrivenloadplanbuilder(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.build.spi.MetamodelDrivenLoadPlanBuilder(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.build.spi>, type<QuerySpaceTreePrinter> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<QuerySpaceTreePrinter>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.build.spi>, type<QuerySpaceTreePrinter>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.build.spi.queryspacetreeprinter(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.build.spi.QuerySpaceTreePrinter(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.build.spi>, type<ReturnGraphTreePrinter> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ReturnGraphTreePrinter>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.build.spi>, type<ReturnGraphTreePrinter>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.build.spi.returngraphtreeprinter(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.build.spi.ReturnGraphTreePrinter(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.build.spi>, type<TreePrinterHelper> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<TreePrinterHelper>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.build.spi>, type<TreePrinterHelper>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.build.spi.treeprinterhelper(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.build.spi.TreePrinterHelper(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.exec.internal>, type<AbstractCollectionLoadQueryDetails> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<AbstractCollectionLoadQueryDetails>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.exec.internal>, type<AbstractCollectionLoadQueryDetails>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.exec.internal.abstractcollectionloadquerydetails(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.exec.internal.AbstractCollectionLoadQueryDetails(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.exec.internal>, type<AbstractLoadPlanBasedLoader> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<AbstractLoadPlanBasedLoader>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.exec.internal>, type<AbstractLoadPlanBasedLoader>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.exec.internal.abstractloadplanbasedloader(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.exec.internal>, type<AbstractLoadQueryDetails> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<AbstractLoadQueryDetails>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.exec.internal>, type<AbstractLoadQueryDetails>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.exec.internal.abstractloadquerydetails(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.exec.internal.AbstractLoadQueryDetails(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.exec.internal>, type<AliasResolutionContextImpl> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<AliasResolutionContextImpl>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.exec.internal>, type<AliasResolutionContextImpl>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.exec.internal.aliasresolutioncontextimpl(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.exec.internal.AliasResolutionContextImpl(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.exec.internal>, type<BasicCollectionLoadQueryDetails> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<BasicCollectionLoadQueryDetails>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.exec.internal>, type<BasicCollectionLoadQueryDetails>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.exec.internal.basiccollectionloadquerydetails(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.exec.internal.BasicCollectionLoadQueryDetails(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.exec.internal>, type<BatchingLoadQueryDetailsFactory> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<BatchingLoadQueryDetailsFactory>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.exec.internal>, type<BatchingLoadQueryDetailsFactory>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.exec.internal.batchingloadquerydetailsfactory(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.exec.internal.BatchingLoadQueryDetailsFactory(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.exec.internal>, type<CollectionReferenceAliasesImpl> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<CollectionReferenceAliasesImpl>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.exec.internal>, type<CollectionReferenceAliasesImpl>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.exec.internal.collectionreferencealiasesimpl(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.exec.internal.CollectionReferenceAliasesImpl(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.exec.internal>, type<EntityLoadQueryDetails> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<EntityLoadQueryDetails>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.exec.internal>, type<EntityLoadQueryDetails>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.exec.internal.entityloadquerydetails(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.exec.internal.EntityLoadQueryDetails(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.exec.internal>, type<EntityReferenceAliasesImpl> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<EntityReferenceAliasesImpl>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.exec.internal>, type<EntityReferenceAliasesImpl>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.exec.internal.entityreferencealiasesimpl(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.exec.internal.EntityReferenceAliasesImpl(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.exec.internal>, type<FetchStats> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<FetchStats>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.exec.internal>, type<FetchStats>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.exec.internal.fetchstats(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.exec.internal.FetchStats(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.exec.internal>, type<LoadQueryJoinAndFetchProcessor> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<LoadQueryJoinAndFetchProcessor>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.exec.internal>, type<LoadQueryJoinAndFetchProcessor>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.exec.internal.loadqueryjoinandfetchprocessor(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.exec.internal>, type<OneToManyLoadQueryDetails> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<OneToManyLoadQueryDetails>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.exec.internal>, type<OneToManyLoadQueryDetails>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.exec.internal.onetomanyloadquerydetails(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.exec.internal.OneToManyLoadQueryDetails(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.exec.internal>, type<RootHelper> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<RootHelper>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.exec.internal>, type<RootHelper>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.exec.internal.roothelper(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.exec.internal.RootHelper(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.exec.process.internal>, type<AbstractRowReader> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<AbstractRowReader>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.exec.process.internal>, type<AbstractRowReader>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.exec.process.internal.abstractrowreader(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.exec.process.internal.AbstractRowReader(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.exec.process.internal>, type<CollectionReferenceInitializerImpl> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<CollectionReferenceInitializerImpl>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.exec.process.internal>, type<CollectionReferenceInitializerImpl>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.exec.process.internal.collectionreferenceinitializerimpl(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.exec.process.internal.CollectionReferenceInitializerImpl(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.exec.process.internal>, type<CollectionReturnReader> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<CollectionReturnReader>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.exec.process.internal>, type<CollectionReturnReader>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.exec.process.internal.collectionreturnreader(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.exec.process.internal.CollectionReturnReader(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.exec.process.internal>, type<EntityReferenceInitializerImpl> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<EntityReferenceInitializerImpl>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.exec.process.internal>, type<EntityReferenceInitializerImpl>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.exec.process.internal.entityreferenceinitializerimpl(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.exec.process.internal>, type<EntityReturnReader> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<EntityReturnReader>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.exec.process.internal>, type<EntityReturnReader>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.exec.process.internal.entityreturnreader(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.exec.process.internal.EntityReturnReader(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.exec.process.internal>, type<HydratedEntityRegistration> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<HydratedEntityRegistration>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.exec.process.internal>, type<HydratedEntityRegistration>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.exec.process.internal.hydratedentityregistration(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.exec.process.internal.HydratedEntityRegistration(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.exec.process.internal>, type<ResultSetProcessingContextImpl> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ResultSetProcessingContextImpl>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.exec.process.internal>, type<ResultSetProcessingContextImpl>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.exec.process.internal.resultsetprocessingcontextimpl(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.exec.process.internal.ResultSetProcessingContextImpl(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.exec.process.internal>, type<ResultSetProcessorHelper> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ResultSetProcessorHelper>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.exec.process.internal>, type<ResultSetProcessorHelper>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.exec.process.internal.resultsetprocessorhelper(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorHelper(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.exec.process.internal>, type<ResultSetProcessorImpl> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ResultSetProcessorImpl>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.exec.process.internal>, type<ResultSetProcessorImpl>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.exec.process.internal.resultsetprocessorimpl(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.exec.process.spi>, type<CollectionReferenceInitializer> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<CollectionReferenceInitializer>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.exec.process.spi>, type<CollectionReferenceInitializer>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.exec.process.spi.collectionreferenceinitializer(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.exec.process.spi.CollectionReferenceInitializer(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.exec.process.spi>, type<EntityReferenceInitializer> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<EntityReferenceInitializer>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.exec.process.spi>, type<EntityReferenceInitializer>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.exec.process.spi.entityreferenceinitializer(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.exec.process.spi.EntityReferenceInitializer(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.exec.process.spi>, type<ReaderCollector> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ReaderCollector>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.exec.process.spi>, type<ReaderCollector>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.exec.process.spi.readercollector(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.exec.process.spi.ReaderCollector(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.exec.process.spi>, type<ResultSetProcessingContext> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ResultSetProcessingContext>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.exec.process.spi>, type<ResultSetProcessingContext>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.exec.process.spi.resultsetprocessingcontext(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.exec.process.spi.ResultSetProcessingContext(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.exec.process.spi>, type<ResultSetProcessor> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ResultSetProcessor>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.exec.process.spi>, type<ResultSetProcessor>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.exec.process.spi.resultsetprocessor(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.exec.process.spi.ResultSetProcessor(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.exec.process.spi>, type<ResultSetProcessorResolver> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ResultSetProcessorResolver>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.exec.process.spi>, type<ResultSetProcessorResolver>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.exec.process.spi.resultsetprocessorresolver(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.exec.process.spi.ResultSetProcessorResolver(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.exec.process.spi>, type<ReturnReader> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ReturnReader>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.exec.process.spi>, type<ReturnReader>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.exec.process.spi.returnreader(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.exec.process.spi.ReturnReader(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.exec.process.spi>, type<RowReader> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<RowReader>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.exec.process.spi>, type<RowReader>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.exec.process.spi.rowreader(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.exec.process.spi.RowReader(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.exec.process.spi>, type<ScrollableResultSetProcessor> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ScrollableResultSetProcessor>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.exec.process.spi>, type<ScrollableResultSetProcessor>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.exec.process.spi.scrollableresultsetprocessor(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.exec.process.spi.ScrollableResultSetProcessor(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.exec.query.internal>, type<QueryBuildingParametersImpl> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<QueryBuildingParametersImpl>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.exec.query.internal>, type<QueryBuildingParametersImpl>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.exec.query.internal.querybuildingparametersimpl(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.exec.query.internal.QueryBuildingParametersImpl(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.exec.query.internal>, type<SelectStatementBuilder> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<SelectStatementBuilder>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.exec.query.internal>, type<SelectStatementBuilder>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.exec.query.internal.selectstatementbuilder(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.exec.query.internal.SelectStatementBuilder(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.exec.query.spi>, type<NamedParameterContext> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<NamedParameterContext>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.exec.query.spi>, type<NamedParameterContext>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.exec.query.spi.namedparametercontext(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.exec.query.spi.NamedParameterContext(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.exec.query.spi>, type<QueryBuildingParameters> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<QueryBuildingParameters>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.exec.query.spi>, type<QueryBuildingParameters>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.exec.query.spi.querybuildingparameters(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.exec.query.spi.QueryBuildingParameters(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.exec.spi>, type<AliasResolutionContext> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<AliasResolutionContext>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.exec.spi>, type<AliasResolutionContext>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.exec.spi.aliasresolutioncontext(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.exec.spi.AliasResolutionContext(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.exec.spi>, type<CollectionReferenceAliases> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<CollectionReferenceAliases>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.exec.spi>, type<CollectionReferenceAliases>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.exec.spi.collectionreferencealiases(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.exec.spi.CollectionReferenceAliases(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.exec.spi>, type<EntityReferenceAliases> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<EntityReferenceAliases>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.exec.spi>, type<EntityReferenceAliases>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.exec.spi.entityreferencealiases(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.exec.spi.EntityReferenceAliases(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.exec.spi>, type<LoadQueryDetails> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<LoadQueryDetails>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.exec.spi>, type<LoadQueryDetails>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.exec.spi.loadquerydetails(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.exec.spi.LoadQueryDetails(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.exec.spi>, type<LockModeResolver> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<LockModeResolver>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.exec.spi>, type<LockModeResolver>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.exec.spi.lockmoderesolver(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.exec.spi.LockModeResolver(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.spi>, type<AnyAttributeFetch> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<AnyAttributeFetch>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.spi>, type<AnyAttributeFetch>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.spi.anyattributefetch(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.spi.AnyAttributeFetch(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.spi>, type<AttributeFetch> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<AttributeFetch>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.spi>, type<AttributeFetch>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.spi.attributefetch(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.spi.AttributeFetch(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.spi>, type<BidirectionalEntityReference> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<BidirectionalEntityReference>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.spi>, type<BidirectionalEntityReference>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.spi.bidirectionalentityreference(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.spi.BidirectionalEntityReference(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.spi>, type<CollectionAttributeFetch> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<CollectionAttributeFetch>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.spi>, type<CollectionAttributeFetch>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.spi.collectionattributefetch(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.spi.CollectionAttributeFetch(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.spi>, type<CollectionFetchableElement> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<CollectionFetchableElement>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.spi>, type<CollectionFetchableElement>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.spi.collectionfetchableelement(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.spi.CollectionFetchableElement(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.spi>, type<CollectionFetchableIndex> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<CollectionFetchableIndex>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.spi>, type<CollectionFetchableIndex>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.spi.collectionfetchableindex(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.spi.CollectionFetchableIndex(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.spi>, type<CollectionQuerySpace> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<CollectionQuerySpace>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.spi>, type<CollectionQuerySpace>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.spi.collectionqueryspace(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.spi.CollectionQuerySpace(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.spi>, type<CollectionReference> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<CollectionReference>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.spi>, type<CollectionReference>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.spi.collectionreference(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.spi.CollectionReference(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.spi>, type<CollectionReturn> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<CollectionReturn>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.spi>, type<CollectionReturn>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.spi.collectionreturn(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.spi.CollectionReturn(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.spi>, type<CompositeAttributeFetch> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<CompositeAttributeFetch>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.spi>, type<CompositeAttributeFetch>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.spi.compositeattributefetch(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.spi.CompositeAttributeFetch(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.spi>, type<CompositeFetch> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<CompositeFetch>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.spi>, type<CompositeFetch>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.spi.compositefetch(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.spi.CompositeFetch(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.spi>, type<CompositeQuerySpace> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<CompositeQuerySpace>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.spi>, type<CompositeQuerySpace>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.spi.compositequeryspace(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.spi.CompositeQuerySpace(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.spi>, type<EntityFetch> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<EntityFetch>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.spi>, type<EntityFetch>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.spi.entityfetch(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.spi.EntityFetch(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.spi>, type<EntityIdentifierDescription> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<EntityIdentifierDescription>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.spi>, type<EntityIdentifierDescription>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.spi.entityidentifierdescription(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.spi.EntityIdentifierDescription(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.spi>, type<EntityQuerySpace> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<EntityQuerySpace>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.spi>, type<EntityQuerySpace>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.spi.entityqueryspace(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.spi.EntityQuerySpace(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.spi>, type<EntityReference> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<EntityReference>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.spi>, type<EntityReference>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.spi.entityreference(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.spi.EntityReference(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.spi>, type<EntityReturn> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<EntityReturn>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.spi>, type<EntityReturn>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.spi.entityreturn(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.spi.EntityReturn(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.spi>, type<Fetch> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Fetch>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.spi>, type<Fetch>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.spi.fetch(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.spi.Fetch(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.spi>, type<FetchSource> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<FetchSource>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.spi>, type<FetchSource>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.spi.fetchsource(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.spi.FetchSource(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.spi>, type<Join> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Join>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.spi>, type<Join>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.spi.join(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.spi.Join(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.spi>, type<JoinDefinedByMetadata> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<JoinDefinedByMetadata>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.spi>, type<JoinDefinedByMetadata>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.spi.joindefinedbymetadata(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.spi.JoinDefinedByMetadata(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.spi>, type<LoadPlan> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<LoadPlan>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.spi>, type<LoadPlan>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.spi.loadplan(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.spi.LoadPlan(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.spi>, type<QuerySpace> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<QuerySpace>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.spi>, type<QuerySpace>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.spi.queryspace(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.spi.QuerySpace(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.spi>, type<QuerySpaceUidNotRegisteredException> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<QuerySpaceUidNotRegisteredException>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.spi>, type<QuerySpaceUidNotRegisteredException>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.spi.queryspaceuidnotregisteredexception(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.spi.QuerySpaceUidNotRegisteredException(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.spi>, type<QuerySpaces> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<QuerySpaces>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.spi>, type<QuerySpaces>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.spi.queryspaces(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.spi.QuerySpaces(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.spi>, type<Return> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Return>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.spi>, type<Return>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.spi.return(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.spi.Return(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.plan.spi>, type<ScalarReturn> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ScalarReturn>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.plan.spi>, type<ScalarReturn>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.plan.spi.scalarreturn(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.plan.spi.ScalarReturn(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<org.hibernate.loader.spi>, type<AfterLoadAction> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<AfterLoadAction>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.loader.spi>, type<AfterLoadAction>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.loader.spi.afterloadaction(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.loader.spi.AfterLoadAction(...), exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.718608445-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.718653045-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.718670602-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: SuperInterfaceReferencePattern: <BeanFactoryPostProcessor>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.718693512-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.718702028-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.springframework.beans.factory.config.BeanFactoryPostProcessor location 5 matches0"}
{"time":"2025-02-27T15:16:24.718707521-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.718764801-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.718828031-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.718894059-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<javax.jms>, type<Queue> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Queue>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax.jms>, type<Queue>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: javax.jms.queue(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: javax.jms.Queue(...), exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.71898856-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.springframework.boot.autoconfigure>, type<SpringBootApplication> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<SpringBootApplication>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.springframework.boot.autoconfigure>, type<SpringBootApplication>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.719042542-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<javax.ejb>, type<ActivationConfigProperty> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ActivationConfigProperty>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax.ejb>, type<ActivationConfigProperty>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.719057346-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.springframework.boot.autoconfigure.SpringBootApplication location 4 matches0"}
{"time":"2025-02-27T15:16:24.719085689-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<javax.ws.rs>, type<ApplicationPath> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ApplicationPath>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax.ws.rs>, type<ApplicationPath>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.719105572-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<javax.jms>, type<Topic> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Topic>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax.jms>, type<Topic>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: javax.jms.topic(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: javax.jms.Topic(...), exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.719125012-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.ws.rs.ApplicationPath location 4 matches0"}
{"time":"2025-02-27T15:16:24.719134051-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<jakarta.ejb>, type<MessageDriven> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<MessageDriven>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<jakarta.ejb>, type<MessageDriven>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.719147545-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.jms.Queue location 0 matches0"}
{"time":"2025-02-27T15:16:24.71917212-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.719186674-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.719242975-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.719265554-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.ejb.ActivationConfigProperty location 4 matches0"}
{"time":"2025-02-27T15:16:24.719277518-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.719291701-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.719315059-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.springframework.integration.dsl>, type<IntegrationFlow> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<IntegrationFlow>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.springframework.integration.dsl>, type<IntegrationFlow>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.719347034-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for jakarta.ejb.MessageDriven location 4 matches0"}
{"time":"2025-02-27T15:16:24.719381434-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: SuperInterfaceReferencePattern: <Application>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.719406769-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.springframework.integration.dsl.IntegrationFlow location 8 matches0"}
{"time":"2025-02-27T15:16:24.719444302-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.ws.rs.core.Application location 1 matches0"}
{"time":"2025-02-27T15:16:24.719474982-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.719486951-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.719567599-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<jakarta.jms>, type<Queue> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Queue>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<jakarta.jms>, type<Queue>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: jakarta.jms.queue(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: jakarta.jms.Queue(...), exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.719631148-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.jms.Topic location 0 matches0"}
{"time":"2025-02-27T15:16:24.719640236-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for jakarta.jms.Queue location 0 matches0"}
{"time":"2025-02-27T15:16:24.719648078-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.719653503-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.719660923-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.71967982-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<jakarta.ejb>, type<ActivationConfigProperty> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ActivationConfigProperty>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<jakarta.ejb>, type<ActivationConfigProperty>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.719691132-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for jakarta.ejb.ActivationConfigProperty location 4 matches0"}
{"time":"2025-02-27T15:16:24.719711426-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.71972103-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.719778711-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<jakarta.jms>, type<Topic> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Topic>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<jakarta.jms>, type<Topic>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: jakarta.jms.topic(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: jakarta.jms.Topic(...), exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.719798226-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: SuperInterfaceReferencePattern: <BeanPostProcessor>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.7198042-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.719812116-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.719825836-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.springframework>, type<jmx*> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<jmx*>, pattern match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.springframework>, type<jmx*>, pattern match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.719836752-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.springframework.jmx* location 4 matches0"}
{"time":"2025-02-27T15:16:24.71984864-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.719856024-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.springframework.beans.factory.config.BeanPostProcessor location 5 matches0"}
{"time":"2025-02-27T15:16:24.719861491-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.719876983-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.springframework.scheduling.annotation>, type<Scheduled> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Scheduled>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.springframework.scheduling.annotation>, type<Scheduled>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.719882419-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.springframework.scheduling.annotation.Scheduled location 4 matches0"}
{"time":"2025-02-27T15:16:24.719902506-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for jakarta.jms.Topic location 0 matches0"}
{"time":"2025-02-27T15:16:24.719913504-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.719920628-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.719929817-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.719967136-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.720035663-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.720071213-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.720093382-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.springframework.web.servlet.mvc>, type<Controller> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Controller>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.springframework.web.servlet.mvc>, type<Controller>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.720102032-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.springframework.web.servlet.mvc.Controller location 4 matches0"}
{"time":"2025-02-27T15:16:24.720130206-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: MethodDeclarationPattern: getfirst(...), exact match, case insensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.720138418-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: SuperInterfaceReferencePattern: <DestructionAwareBeanPostProcessor>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.720143937-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.springframework.beans.factory.config.DestructionAwareBeanPostProcessor location 5 matches0"}
{"time":"2025-02-27T15:16:24.720158295-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.720163546-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.720221642-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: SuperInterfaceReferencePattern: <InstantiationAwareBeanPostProcessor>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.720241107-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessor location 5 matches0"}
{"time":"2025-02-27T15:16:24.720263196-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.72027187-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.720302227-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: SuperInterfaceReferencePattern: <SmartInstantiationAwareBeanPostProcessor>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.72031314-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.springframework.beans.factory.config.SmartInstantiationAwareBeanPostProcessor location 5 matches0"}
{"time":"2025-02-27T15:16:24.720414738-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 2 search matches for getFirst location 13 matches2"}
{"time":"2025-02-27T15:16:24.720480666-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.720495432-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.720518532-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: SuperInterfaceReferencePattern: <List>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.720529928-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for List location 5 matches0"}
{"time":"2025-02-27T15:16:24.720540773-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.cfg.(AbstractPropertyHolder|AccessType|AnnotatedClassType|AnnotationBinder|AttributeConversionInfo|AttributeConverterDefinition|BaselineSessionEventsListenerBuilder|BinderHelper|CannotForceNonNullableException|ClassPropertyHolder|CollectionPropertyHolder|ColumnsBuilder|ComponentPropertyHolder|EJB3DTDEntityResolver|Ejb3Column|Ejb3DiscriminatorColumn|Ejb3JoinColumn|ExternalSessionFactoryConfig|IndexColumn|InheritanceState|JPAIndexHolder|NotYetImplementedException|ObjectNameSource|PropertyContainer|PropertyData|PropertyHolder|PropertyHolderBuilder|PropertyInferredData|PropertyPreloadedData|Settings|ToOneBinder|UniqueConstraintHolder|WrappedInferredData|annotations.ArrayBinder|annotations.BagBinder|annotations.CollectionBinder|annotations.CustomizableColumns|annotations.EntityBinder|annotations.HCANNHelper|annotations.IdBagBinder|annotations.ListBinder|annotations.MapBinder|annotations.MapKeyColumnDelegator|annotations.MapKeyJoinColumnDelegator|annotations.NamedEntityGraphDefinition|annotations.NamedProcedureCallDefinition|annotations.Nullability|annotations.PrimitiveArrayBinder|annotations.PropertyBinder|annotations.QueryBinder|annotations.QueryHintDefinition|annotations.SetBinder|annotations.SimpleValueBinder|annotations.TableBinder|annotations.reflection.AttributeConverterDefinitionCollector|annotations.reflection.ClassLoaderAccessLazyImpl|annotations.reflection.PersistentAttributeFilter|annotations.reflection.internal.JPAXMLOverriddenAnnotationReader|annotations.reflection.internal.JPAXMLOverriddenMetadataProvider|annotations.reflection.internal.PropertyMappingElementCollector|annotations.reflection.internal.XMLContext|annotations.reflection.package-info|beanvalidation.ActivationContext|beanvalidation.BeanValidationEventListener|beanvalidation.BeanValidationIntegrator|beanvalidation.DuplicationStrategyImpl|beanvalidation.GroupsPerOperation|beanvalidation.HibernateTraversableResolver|beanvalidation.IntegrationException|beanvalidation.TypeSafeActivator|beanvalidation.ValidationMode) location 0 matches0"}
{"time":"2025-02-27T15:16:24.720573529-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.720582046-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.720627824-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.hibernate.search.engine.backend.document.model.dsl.spi>, type<IndexSchemaObjectFieldNodeBuilder> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<IndexSchemaObjectFieldNodeBuilder>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.hibernate.search.engine.backend.document.model.dsl.spi>, type<IndexSchemaObjectFieldNodeBuilder>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: org.hibernate.search.engine.backend.document.model.dsl.spi.indexschemaobjectfieldnodebuilder(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: org.hibernate.search.engine.backend.document.model.dsl.spi.IndexSchemaObjectFieldNodeBuilder(...), exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.720644906-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.search.engine.backend.document.model.dsl.spi.IndexSchemaObjectFieldNodeBuilder location 0 matches0"}
{"time":"2025-02-27T15:16:24.720673533-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.hibernate.loader.(AbstractEntityJoinWalker|BasicLoader|CollectionAliases|ColumnEntityAliases|DefaultEntityAliases|EntityAliases|GeneratedCollectionAliases|JoinWalker|Loader|OuterJoinLoader|OuterJoinableAssociation|collection.BasicCollectionJoinWalker|collection.BasicCollectionLoader|collection.BatchingCollectionInitializer|collection.BatchingCollectionInitializerBuilder|collection.CollectionInitializer|collection.CollectionJoinWalker|collection.CollectionLoader|collection.DynamicBatchingCollectionInitializerBuilder|collection.LegacyBatchingCollectionInitializerBuilder|collection.OneToManyJoinWalker|collection.OneToManyLoader|collection.PaddedBatchingCollectionInitializerBuilder|collection.SubselectCollectionLoader|collection.SubselectOneToManyLoader|collection.plan.AbstractBatchingCollectionInitializerBuilder|collection.plan.AbstractLoadPlanBasedCollectionInitializer|collection.plan.BatchingCollectionInitializer|collection.plan.CollectionLoader|collection.plan.LegacyBatchingCollectionInitializerBuilder|criteria.ComponentCollectionCriteriaInfoProvider|criteria.CriteriaInfoProvider|criteria.CriteriaJoinWalker|criteria.CriteriaLoader|criteria.CriteriaQueryTranslator|criteria.EntityCriteriaInfoProvider|criteria.ScalarCollectionCriteriaInfoProvider|custom.CollectionFetchReturn|custom.CollectionReturn|custom.ColumnCollectionAliases|custom.ConstructorResultColumnProcessor|custom.ConstructorReturn|custom.CustomLoader|custom.CustomQuery|custom.EntityFetchReturn|custom.FetchReturn|custom.JdbcResultMetadata|custom.NonScalarResultColumnProcessor|custom.NonScalarReturn|custom.NonUniqueDiscoveredSqlAliasException|custom.ResultColumnProcessor|custom.ResultRowProcessor|custom.Return|custom.RootReturn|custom.ScalarResultColumnProcessor|custom.ScalarReturn|custom.sql.NamedParamBinder|custom.sql.PositionalParamBinder|custom.sql.SQLCustomQuery|custom.sql.SQLQueryParser|custom.sql.SQLQueryReturnProcessor|entity.AbstractEntityLoader|entity.BatchingEntityLoaderBuilder|entity.CacheEntityLoaderHelper|entity.CascadeEntityJoinWalker|entity.CascadeEntityLoader|entity.CollectionElementLoader|entity.EntityJoinWalker|entity.EntityLoader|entity.NaturalIdEntityJoinWalker|entity.NaturalIdType|entity.UniqueEntityLoader|entity.plan.AbstractBatchingEntityLoaderBuilder|entity.plan.AbstractLoadPlanBasedEntityLoader|entity.plan.BatchingEntityLoader|entity.plan.DynamicBatchingEntityLoader|entity.plan.DynamicBatchingEntityLoaderBuilder|entity.plan.EntityLoader|entity.plan.LegacyBatchingEntityLoaderBuilder|entity.plan.MultiEntityLoadingSupport|entity.plan.PaddedBatchingEntityLoader|entity.plan.PaddedBatchingEntityLoaderBuilder|hql.QueryLoader|plan.build.internal.AbstractEntityGraphVisitationStrategy|plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy|plan.build.internal.CascadeStyleLoadPlanBuildingAssociationVisitationStrategy|plan.build.internal.FetchGraphLoadPlanBuildingStrategy|plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy|plan.build.internal.LoadGraphLoadPlanBuildingStrategy|plan.build.internal.LoadPlanImpl|plan.build.internal.returns.AbstractAnyReference|plan.build.internal.returns.AbstractCollectionReference|plan.build.internal.returns.AbstractCompositeEntityIdentifierDescription|plan.build.internal.returns.AbstractCompositeFetch|plan.build.internal.returns.AbstractCompositeReference|plan.build.internal.returns.AbstractEntityReference|plan.build.internal.returns.AbstractExpandingFetchSource|plan.build.internal.returns.AnyAttributeFetchImpl|plan.build.internal.returns.BidirectionalEntityReferenceImpl|plan.build.internal.returns.CollectionAttributeFetchImpl|plan.build.internal.returns.CollectionFetchableElementAnyGraph|plan.build.internal.returns.CollectionFetchableElementCompositeGraph|plan.build.internal.returns.CollectionFetchableElementEntityGraph|plan.build.internal.returns.CollectionFetchableIndexAnyGraph|plan.build.internal.returns.CollectionFetchableIndexCompositeGraph|plan.build.internal.returns.CollectionFetchableIndexEntityGraph|plan.build.internal.returns.CollectionReturnImpl|plan.build.internal.returns.CompositeAttributeFetchImpl|plan.build.internal.returns.EncapsulatedEntityIdentifierDescription|plan.build.internal.returns.EntityAttributeFetchImpl|plan.build.internal.returns.EntityReturnImpl|plan.build.internal.returns.NestedCompositeAttributeFetchImpl|plan.build.internal.returns.NonEncapsulatedEntityIdentifierDescription|plan.build.internal.returns.ScalarReturnImpl|plan.build.internal.returns.SimpleEntityIdentifierDescriptionImpl|plan.build.internal.spaces.AbstractExpandingSourceQuerySpace|plan.build.internal.spaces.AbstractQuerySpace|plan.build.internal.spaces.CollectionQuerySpaceImpl|plan.build.internal.spaces.CompositePropertyMapping|plan.build.internal.spaces.CompositeQuerySpaceImpl|plan.build.internal.spaces.EntityQuerySpaceImpl|plan.build.internal.spaces.JoinHelper|plan.build.internal.spaces.JoinImpl|plan.build.internal.spaces.QuerySpaceHelper|plan.build.internal.spaces.QuerySpacesImpl|plan.build.spi.ExpandingCollectionQuerySpace|plan.build.spi.ExpandingCompositeQuerySpace|plan.build.spi.ExpandingEntityIdentifierDescription|plan.build.spi.ExpandingEntityQuerySpace|plan.build.spi.ExpandingFetchSource|plan.build.spi.ExpandingQuerySpace|plan.build.spi.ExpandingQuerySpaces|plan.build.spi.LoadPlanBuildingAssociationVisitationStrategy|plan.build.spi.LoadPlanBuildingContext|plan.build.spi.LoadPlanTreePrinter|plan.build.spi.MetamodelDrivenLoadPlanBuilder|plan.build.spi.QuerySpaceTreePrinter|plan.build.spi.ReturnGraphTreePrinter|plan.build.spi.TreePrinterHelper|plan.exec.internal.AbstractCollectionLoadQueryDetails|plan.exec.internal.AbstractLoadPlanBasedLoader|plan.exec.internal.AbstractLoadQueryDetails|plan.exec.internal.AliasResolutionContextImpl|plan.exec.internal.BasicCollectionLoadQueryDetails|plan.exec.internal.BatchingLoadQueryDetailsFactory|plan.exec.internal.CollectionReferenceAliasesImpl|plan.exec.internal.EntityLoadQueryDetails|plan.exec.internal.EntityReferenceAliasesImpl|plan.exec.internal.FetchStats|plan.exec.internal.LoadQueryJoinAndFetchProcessor|plan.exec.internal.OneToManyLoadQueryDetails|plan.exec.internal.RootHelper|plan.exec.process.internal.AbstractRowReader|plan.exec.process.internal.CollectionReferenceInitializerImpl|plan.exec.process.internal.CollectionReturnReader|plan.exec.process.internal.EntityReferenceInitializerImpl|plan.exec.process.internal.EntityReturnReader|plan.exec.process.internal.HydratedEntityRegistration|plan.exec.process.internal.ResultSetProcessingContextImpl|plan.exec.process.internal.ResultSetProcessorHelper|plan.exec.process.internal.ResultSetProcessorImpl|plan.exec.process.spi.CollectionReferenceInitializer|plan.exec.process.spi.EntityReferenceInitializer|plan.exec.process.spi.ReaderCollector|plan.exec.process.spi.ResultSetProcessingContext|plan.exec.process.spi.ResultSetProcessor|plan.exec.process.spi.ResultSetProcessorResolver|plan.exec.process.spi.ReturnReader|plan.exec.process.spi.RowReader|plan.exec.process.spi.ScrollableResultSetProcessor|plan.exec.query.internal.QueryBuildingParametersImpl|plan.exec.query.internal.SelectStatementBuilder|plan.exec.query.spi.NamedParameterContext|plan.exec.query.spi.QueryBuildingParameters|plan.exec.spi.AliasResolutionContext|plan.exec.spi.CollectionReferenceAliases|plan.exec.spi.EntityReferenceAliases|plan.exec.spi.LoadQueryDetails|plan.exec.spi.LockModeResolver|plan.spi.AnyAttributeFetch|plan.spi.AttributeFetch|plan.spi.BidirectionalEntityReference|plan.spi.CollectionAttributeFetch|plan.spi.CollectionFetchableElement|plan.spi.CollectionFetchableIndex|plan.spi.CollectionQuerySpace|plan.spi.CollectionReference|plan.spi.CollectionReturn|plan.spi.CompositeAttributeFetch|plan.spi.CompositeFetch|plan.spi.CompositeQuerySpace|plan.spi.EntityFetch|plan.spi.EntityIdentifierDescription|plan.spi.EntityQuerySpace|plan.spi.EntityReference|plan.spi.EntityReturn|plan.spi.Fetch|plan.spi.FetchSource|plan.spi.Join|plan.spi.JoinDefinedByMetadata|plan.spi.LoadPlan|plan.spi.QuerySpace|plan.spi.QuerySpaceUidNotRegisteredException|plan.spi.QuerySpaces|plan.spi.Return|plan.spi.ScalarReturn|spi.AfterLoadAction) location 0 matches0"}
{"time":"2025-02-27T15:16:24.720714522-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.720726322-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.720749612-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: MethodDeclarationPattern: getfirst(...), exact match, case insensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.7208509-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 2 search matches for getFirst location 13 matches2"}
{"time":"2025-02-27T15:16:24.720920752-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.720931372-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.72094498-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: SuperInterfaceReferencePattern: <List>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.720952363-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for List location 5 matches0"}
{"time":"2025-02-27T15:16:24.721064699-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.721117899-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.721139603-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<javax.annotation>, type<security*> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<security*>, pattern match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax.annotation>, type<security*>, pattern match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.721153767-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.annotation.security* location 4 matches0"}
{"time":"2025-02-27T15:16:24.721165337-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.721172735-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.721186243-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: PackageDeclarationPattern: <javax.enterprise.inject*>, pattern match, case insensitive, generic full match, fine grain: none | PackageReferencePattern: <javax.enterprise.inject*>, pattern match, case insensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.721191568-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.enterprise.inject* location 11 matches0"}
{"time":"2025-02-27T15:16:24.721222398-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.7212309-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.721244974-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: PackageDeclarationPattern: <javax.inject*>, pattern match, case insensitive, generic full match, fine grain: none | PackageReferencePattern: <javax.inject*>, pattern match, case insensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.721254226-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.inject* location 11 matches0"}
{"time":"2025-02-27T15:16:24.721270488-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.721278177-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.721294728-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: PackageDeclarationPattern: <jakarta.enterprise.inject*>, pattern match, case insensitive, generic full match, fine grain: none | PackageReferencePattern: <jakarta.enterprise.inject*>, pattern match, case insensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.721303345-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for jakarta.enterprise.inject* location 11 matches0"}
{"time":"2025-02-27T15:16:24.721323963-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.721337167-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.721360244-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: PackageDeclarationPattern: <jakarta.inject*>, pattern match, case insensitive, generic full match, fine grain: none | PackageReferencePattern: <jakarta.inject*>, pattern match, case insensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.721372248-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for jakarta.inject* location 11 matches0"}
{"time":"2025-02-27T15:16:24.721416712-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.721465878-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.721516236-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: PackageDeclarationPattern: <javax.json*>, pattern match, case insensitive, generic full match, fine grain: none | PackageReferencePattern: <javax.json*>, pattern match, case insensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.721526317-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.json* location 11 matches0"}
{"time":"2025-02-27T15:16:24.721546564-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.721555423-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.72158493-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<javax.security>, type<jacc*> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<jacc*>, pattern match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax.security>, type<jacc*>, pattern match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.721595004-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.security.jacc* location 8 matches0"}
{"time":"2025-02-27T15:16:24.721612494-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.721625458-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.721652083-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<javax.management>, type<j2ee*> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<j2ee*>, pattern match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax.management>, type<j2ee*>, pattern match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.721660554-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.management.j2ee* location 8 matches0"}
{"time":"2025-02-27T15:16:24.72168131-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.721690285-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.721739243-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<javax>, type<jws*> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<jws*>, pattern match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax>, type<jws*>, pattern match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.721773578-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.jws* location 8 matches0"}
{"time":"2025-02-27T15:16:24.721821633-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.721839567-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.721863347-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<javax.annotation>, type<PreDestroy|PostConstruct|Resource|Resources> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<PreDestroy|PostConstruct|Resource|Resources>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax.annotation>, type<PreDestroy|PostConstruct|Resource|Resources>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.721869758-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.annotation.PreDestroy|PostConstruct|Resource|Resources location 8 matches0"}
{"time":"2025-02-27T15:16:24.721883386-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.721888778-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.721915411-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<java|javax.xml>, type<bind*> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<bind*>, pattern match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<java|javax.xml>, type<bind*>, pattern match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.721921979-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for java|javax.xml.bind* location 8 matches0"}
{"time":"2025-02-27T15:16:24.721940137-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.721945497-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.721963767-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<javax.xml>, type<registry*> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<registry*>, pattern match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax.xml>, type<registry*>, pattern match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.721969313-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.xml.registry* location 8 matches0"}
{"time":"2025-02-27T15:16:24.722025956-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.722043051-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.72207082-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<javax.validation>, type<constraints*> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<constraints*>, pattern match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax.validation>, type<constraints*>, pattern match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.722081022-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.validation.constraints* location 8 matches0"}
{"time":"2025-02-27T15:16:24.722099967-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.722107792-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.722134494-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<javax>, type<servlet*> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<servlet*>, pattern match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax>, type<servlet*>, pattern match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.722144083-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.servlet* location 8 matches0"}
{"time":"2025-02-27T15:16:24.722164457-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.722173073-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.722198486-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<javax.json>, type<bind*> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<bind*>, pattern match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax.json>, type<bind*>, pattern match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.722207351-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.json.bind* location 8 matches0"}
{"time":"2025-02-27T15:16:24.722295339-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.722350163-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.722415616-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.springframework.boot.autoconfigure>, type<SpringBootApplication> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<SpringBootApplication>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.springframework.boot.autoconfigure>, type<SpringBootApplication>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.722433032-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.springframework.boot.autoconfigure.SpringBootApplication location 4 matches0"}
{"time":"2025-02-27T15:16:24.722454814-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.722462975-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.722498099-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: SuperInterfaceReferencePattern: <SpringBootServletInitializer>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.722531093-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.springframework.boot.web.servlet.support.SpringBootServletInitializer location 1 matches0"}
{"time":"2025-02-27T15:16:24.722555266-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.72256423-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.722594062-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.jboss.ejb3.annotation>, type<Clustered> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Clustered>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.jboss.ejb3.annotation>, type<Clustered>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.722603442-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.jboss.ejb3.annotation.Clustered location 4 matches0"}
{"time":"2025-02-27T15:16:24.722624064-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.722632235-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.722659303-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.jboss.ejb3.annotation>, type<Clustered> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Clustered>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.jboss.ejb3.annotation>, type<Clustered>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.722673681-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.jboss.ejb3.annotation.Clustered location 8 matches0"}
{"time":"2025-02-27T15:16:24.722694148-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.722702181-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.722750242-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.springframework.boot.context.properties>, type<ConfigurationProperties> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ConfigurationProperties>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.springframework.boot.context.properties>, type<ConfigurationProperties>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.722762011-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.springframework.boot.context.properties.ConfigurationProperties location 4 matches0"}
{"time":"2025-02-27T15:16:24.722788235-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.722797019-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.723113312-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<javax.ejb>, type<Schedule> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Schedule>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax.ejb>, type<Schedule>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: javax.ejb.schedule(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: javax.ejb.Schedule(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<javax.ejb>, type<ScheduleExpression> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ScheduleExpression>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax.ejb>, type<ScheduleExpression>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: javax.ejb.scheduleexpression(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: javax.ejb.ScheduleExpression(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<javax.ejb>, type<Schedules> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Schedules>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax.ejb>, type<Schedules>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: javax.ejb.schedules(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: javax.ejb.Schedules(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<javax.ejb>, type<TimedObject> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<TimedObject>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax.ejb>, type<TimedObject>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: javax.ejb.timedobject(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: javax.ejb.TimedObject(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<javax.ejb>, type<Timeout> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Timeout>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax.ejb>, type<Timeout>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: javax.ejb.timeout(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: javax.ejb.Timeout(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<javax.ejb>, type<Timer> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Timer>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax.ejb>, type<Timer>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: javax.ejb.timer(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: javax.ejb.Timer(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<javax.ejb>, type<TimerConfig> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<TimerConfig>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax.ejb>, type<TimerConfig>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: javax.ejb.timerconfig(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: javax.ejb.TimerConfig(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<javax.ejb>, type<TimerHandle> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<TimerHandle>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax.ejb>, type<TimerHandle>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: javax.ejb.timerhandle(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: javax.ejb.TimerHandle(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<javax.ejb>, type<TimerService> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<TimerService>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax.ejb>, type<TimerService>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: javax.ejb.timerservice(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: javax.ejb.TimerService(...), exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.723179913-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.ejb.(Schedule|ScheduleExpression|Schedules|TimedObject|Timeout|Timer|TimerConfig|TimerHandle|TimerService) location 0 matches0"}
{"time":"2025-02-27T15:16:24.723197363-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.723203298-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.72322111-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.springframework.scheduling.annotation>, type<Scheduled> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Scheduled>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.springframework.scheduling.annotation>, type<Scheduled>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.723229815-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.springframework.scheduling.annotation.Scheduled location 4 matches0"}
{"time":"2025-02-27T15:16:24.72324308-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.723248568-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.723294393-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.springframework.integration.dsl>, type<IntegrationFlow> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<IntegrationFlow>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.springframework.integration.dsl>, type<IntegrationFlow>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.723326792-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.springframework.integration.dsl.IntegrationFlow location 8 matches0"}
{"time":"2025-02-27T15:16:24.723343864-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.723349839-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.723470157-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<java.lang>, type<Thread> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Thread>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<java.lang>, type<Thread>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: java.lang.thread(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: java.lang.Thread(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<java.lang>, type<ThreadDeath> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ThreadDeath>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<java.lang>, type<ThreadDeath>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: java.lang.threaddeath(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: java.lang.ThreadDeath(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<java.lang>, type<ThreadGroup> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ThreadGroup>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<java.lang>, type<ThreadGroup>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: java.lang.threadgroup(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: java.lang.ThreadGroup(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<java.lang>, type<ThreadLocal> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ThreadLocal>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<java.lang>, type<ThreadLocal>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: java.lang.threadlocal(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: java.lang.ThreadLocal(...), exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.723553597-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for java.lang.(Thread|ThreadDeath|ThreadGroup|ThreadLocal) location 0 matches0"}
{"time":"2025-02-27T15:16:24.72362385-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.723693013-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.723824151-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<java.util.concurrent>, type<ExecutorService> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ExecutorService>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<java.util.concurrent>, type<ExecutorService>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: java.util.concurrent.executorservice(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: java.util.concurrent.ExecutorService(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<java.util.concurrent>, type<Executors> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Executors>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<java.util.concurrent>, type<Executors>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: java.util.concurrent.executors(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: java.util.concurrent.Executors(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<java.util.concurrent>, type<Executor> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Executor>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<java.util.concurrent>, type<Executor>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: java.util.concurrent.executor(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: java.util.concurrent.Executor(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<java.util.concurrent>, type<ScheduledExecutorService> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ScheduledExecutorService>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<java.util.concurrent>, type<ScheduledExecutorService>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: java.util.concurrent.scheduledexecutorservice(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: java.util.concurrent.ScheduledExecutorService(...), exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.723875866-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for java.util.concurrent.(ExecutorService|Executors|Executor|ScheduledExecutorService) location 0 matches0"}
{"time":"2025-02-27T15:16:24.723895278-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.723903228-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.723921188-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.springframework.web.servlet.mvc>, type<Controller> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Controller>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.springframework.web.servlet.mvc>, type<Controller>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.723930222-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.springframework.web.servlet.mvc.Controller location 4 matches0"}
{"time":"2025-02-27T15:16:24.723953155-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.723963418-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.723979884-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.springframework>, type<jmx*> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<jmx*>, pattern match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.springframework>, type<jmx*>, pattern match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.723987201-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.springframework.jmx* location 4 matches0"}
{"time":"2025-02-27T15:16:24.723998574-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.724005505-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.724021869-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<javax.websocket.server>, type<ServerEndpoint> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ServerEndpoint>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax.websocket.server>, type<ServerEndpoint>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.724029822-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.websocket.server.ServerEndpoint location 4 matches0"}
{"time":"2025-02-27T15:16:24.724041464-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.724052722-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.724087947-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: SuperInterfaceReferencePattern: <Applet>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.724098302-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for java.applet.Applet location 1 matches0"}
{"time":"2025-02-27T15:16:24.724113353-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.724120911-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.724137127-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<javax.annotation.sql>, type<DataSourceDefinition> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<DataSourceDefinition>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax.annotation.sql>, type<DataSourceDefinition>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.724144898-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.annotation.sql.DataSourceDefinition location 4 matches0"}
{"time":"2025-02-27T15:16:24.724156051-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.724163254-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.724202525-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<javax.annotation.sql>, type<DataSourceDefinition> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<DataSourceDefinition>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax.annotation.sql>, type<DataSourceDefinition>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.72421951-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.annotation.sql.DataSourceDefinition location 4 matches0"}
{"time":"2025-02-27T15:16:24.72423582-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.724243206-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.724259171-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<javax.persistence>, type<Entity> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Entity>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax.persistence>, type<Entity>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.724266731-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.persistence.Entity location 4 matches0"}
{"time":"2025-02-27T15:16:24.72427813-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.724285211-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.724330098-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<javax.persistence>, type<Table> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Table>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax.persistence>, type<Table>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.724370477-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.persistence.Table location 4 matches0"}
{"time":"2025-02-27T15:16:24.724410018-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.724425816-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.724491437-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<javax.persistence>, type<NamedQuery> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<NamedQuery>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax.persistence>, type<NamedQuery>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.724515987-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.persistence.NamedQuery location 4 matches0"}
{"time":"2025-02-27T15:16:24.724539588-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.724552078-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.724569689-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<javax.persistence>, type<NamedQueries> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<NamedQueries>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax.persistence>, type<NamedQueries>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.724577406-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.persistence.NamedQueries location 4 matches0"}
{"time":"2025-02-27T15:16:24.724589002-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.724596011-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.724611478-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<javax.persistence>, type<DiscriminatorValue> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<DiscriminatorValue>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax.persistence>, type<DiscriminatorValue>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.724618925-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.persistence.DiscriminatorValue location 4 matches0"}
{"time":"2025-02-27T15:16:24.724630666-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.724637654-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.724678529-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<jakarta.persistence>, type<Entity> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Entity>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<jakarta.persistence>, type<Entity>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.724698271-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for jakarta.persistence.Entity location 4 matches0"}
{"time":"2025-02-27T15:16:24.724710354-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.724718153-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.724733857-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<jakarta.persistence>, type<Table> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Table>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<jakarta.persistence>, type<Table>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.724741575-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for jakarta.persistence.Table location 4 matches0"}
{"time":"2025-02-27T15:16:24.724752745-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.724777618-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.724798955-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<jakarta.persistence>, type<NamedQuery> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<NamedQuery>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<jakarta.persistence>, type<NamedQuery>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.724807277-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for jakarta.persistence.NamedQuery location 4 matches0"}
{"time":"2025-02-27T15:16:24.724819793-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.724826948-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.724844071-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<jakarta.persistence>, type<NamedQueries> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<NamedQueries>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<jakarta.persistence>, type<NamedQueries>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.724852794-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for jakarta.persistence.NamedQueries location 4 matches0"}
{"time":"2025-02-27T15:16:24.724864369-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.724896078-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.724966697-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<jakarta.persistence>, type<DiscriminatorValue> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<DiscriminatorValue>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<jakarta.persistence>, type<DiscriminatorValue>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.725002121-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for jakarta.persistence.DiscriminatorValue location 4 matches0"}
{"time":"2025-02-27T15:16:24.725046435-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.72505707-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.725074464-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<javax.ws.rs>, type<Path> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Path>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax.ws.rs>, type<Path>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.725081855-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.ws.rs.Path location 4 matches0"}
{"time":"2025-02-27T15:16:24.725096602-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.725103889-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.725119748-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<jakarta.ws.rs>, type<Path> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Path>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<jakarta.ws.rs>, type<Path>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.725127144-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for jakarta.ws.rs.Path location 4 matches0"}
{"time":"2025-02-27T15:16:24.725157137-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.725166834-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.725189464-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: MethodReferencePattern: java.lang.system.load*(...), pattern match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | MethodReferencePattern: java.lang.system.loadlibrary*(...), pattern match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | MethodReferencePattern: java.lang.system.maplibraryname*(...), pattern match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE"}
{"time":"2025-02-27T15:16:24.725197676-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for java.lang.System.(load|loadLibrary|mapLibraryName)* location 2 matches0"}
{"time":"2025-02-27T15:16:24.725209365-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.725261928-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.725282777-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: MethodReferencePattern: java.lang.runtime.load(*), pattern match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE"}
{"time":"2025-02-27T15:16:24.725290504-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for java.lang.Runtime.load(*) location 2 matches0"}
{"time":"2025-02-27T15:16:24.725304196-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.725309464-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.72532683-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: MethodReferencePattern: java.lang.runtime.loadlibrary(*), pattern match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE"}
{"time":"2025-02-27T15:16:24.725332442-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for java.lang.Runtime.loadLibrary(*) location 2 matches0"}
{"time":"2025-02-27T15:16:24.725345641-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.725350807-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.72537719-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: ConstructorCombinedPattern: com.sun.jna*(...), pattern match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.725391837-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for com.sun.jna* location 3 matches0"}
{"time":"2025-02-27T15:16:24.725407894-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.725413463-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.72543118-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<com.sun>, type<jna*> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<jna*>, pattern match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<com.sun>, type<jna*>, pattern match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.725436931-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for com.sun.jna* location 8 matches0"}
{"time":"2025-02-27T15:16:24.72545238-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.72545784-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.725475858-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: SuperInterfaceReferencePattern: <jna*>, pattern match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.725487268-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for com.sun.jna* location 1 matches0"}
{"time":"2025-02-27T15:16:24.725500577-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.725505584-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.725562447-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: MethodReferencePattern: com.sun.jna(*), pattern match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE"}
{"time":"2025-02-27T15:16:24.725576181-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for com.sun.jna(*) location 2 matches0"}
{"time":"2025-02-27T15:16:24.725590373-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.725595703-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.725613197-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeReferencePattern: qualification<com.sun>, type<jna*>, pattern match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.725618549-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for com.sun.jna* location 9 matches0"}
{"time":"2025-02-27T15:16:24.725651327-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.725680648-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.725703091-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: PackageDeclarationPattern: <javax.mail*>, pattern match, case insensitive, generic full match, fine grain: none | PackageReferencePattern: <javax.mail*>, pattern match, case insensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.725715467-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.mail* location 11 matches0"}
{"time":"2025-02-27T15:16:24.725733419-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.725744016-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.725782116-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: PackageDeclarationPattern: <com.sun.mail*>, pattern match, case insensitive, generic full match, fine grain: none | PackageReferencePattern: <com.sun.mail*>, pattern match, case insensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.725810627-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for com.sun.mail* location 11 matches0"}
{"time":"2025-02-27T15:16:24.725850673-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.725882319-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.725943348-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: PackageDeclarationPattern: <org.simplejavamail*>, pattern match, case insensitive, generic full match, fine grain: none | PackageReferencePattern: <org.simplejavamail*>, pattern match, case insensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.725967668-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.simplejavamail* location 11 matches0"}
{"time":"2025-02-27T15:16:24.725988443-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.726001561-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.72602631-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: PackageDeclarationPattern: <org.apache.commons.mail*>, pattern match, case insensitive, generic full match, fine grain: none | PackageReferencePattern: <org.apache.commons.mail*>, pattern match, case insensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.726036915-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.apache.commons.mail* location 11 matches0"}
{"time":"2025-02-27T15:16:24.726057827-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.726067361-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.72609553-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: ConstructorCombinedPattern: javax.resource*(...), pattern match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.726105267-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.resource* location 3 matches0"}
{"time":"2025-02-27T15:16:24.726126723-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.726136449-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.726168606-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<javax>, type<resource*> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<resource*>, pattern match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax>, type<resource*>, pattern match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.726201675-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.resource* location 8 matches0"}
{"time":"2025-02-27T15:16:24.726225325-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.726236213-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.726269137-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: SuperInterfaceReferencePattern: <resource*>, pattern match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.726309378-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.resource* location 1 matches0"}
{"time":"2025-02-27T15:16:24.726359497-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.726373722-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.726392107-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: MethodReferencePattern: javax.resource*(...), pattern match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE"}
{"time":"2025-02-27T15:16:24.726397616-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.resource* location 2 matches0"}
{"time":"2025-02-27T15:16:24.726410976-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.726416489-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.72646246-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeReferencePattern: qualification<javax>, type<resource*>, pattern match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.726482024-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.resource* location 9 matches0"}
{"time":"2025-02-27T15:16:24.726497472-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.726503117-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.726526813-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: MethodDeclarationPattern: getfirst(...), exact match, case insensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.726577646-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 1 search matches for getFirst location 13 matches1"}
{"time":"2025-02-27T15:16:24.726594094-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.726601626-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.726626341-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: SuperInterfaceReferencePattern: <List>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.726671603-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 1 search matches for List location 5 matches1"}
{"time":"2025-02-27T15:16:24.72669385-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.726700298-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.72672549-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: MethodDeclarationPattern: getfirst(...), exact match, case insensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.726830719-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 1 search matches for getFirst location 13 matches1"}
{"time":"2025-02-27T15:16:24.726855843-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:24.726865035-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [] warnings: []"}
{"time":"2025-02-27T15:16:24.726889989-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: SuperInterfaceReferencePattern: <List>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:24.726966812-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 1 search matches for List location 5 matches1"}
{"time":"2025-02-27T15:16:25.913893546-06:00","level":"INFO","msg":"using rulesets","discoverRulesets":9,"violationRulesets":24}
{"time":"2025-02-27T15:16:25.914659745-06:00","level":"INFO","msg":"Starting Server"}
{"time":"2025-02-27T15:16:48.551968266-06:00","level":"INFO","msg":"Have selectors","selectors":[{}]}
{"time":"2025-02-27T15:16:48.552034567-06:00","level":"DEBUG+2","msg":"Using exclusion scope","scope":"ExcludedPathsScope"}
{"time":"2025-02-27T15:16:48.552045982-06:00","level":"INFO","msg":"using scopes","scope":"ExcludedPathsScope"}
{"time":"2025-02-27T15:16:48.552049483-06:00","level":"INFO","msg":"added scopes to condition context","scopes":{},"conditionContext":{"Tags":{},"Template":{"konveyor.io/path-scope":{"Filepaths":null,"Extras":null,"ExcludedPaths":["/home/dpeterson/kai-demo/my-app/.vscode"]}},"RuleID":""}}
{"time":"2025-02-27T15:16:48.552099226-06:00","level":"INFO","msg":"inject span info","carrier":{}}
{"time":"2025-02-27T15:16:48.630616886-06:00","level":"INFO","msg":"info rule not matched","rule":"discover-license"}
{"time":"2025-02-27T15:16:48.631085837-06:00","level":"INFO","msg":"info rule not matched","rule":"discover-properties-file"}
{"time":"2025-02-27T15:16:48.63139942-06:00","level":"INFO","msg":"info rule not matched","rule":"discover-manifest-file"}
{"time":"2025-02-27T15:16:48.631726134-06:00","level":"ERROR","msg":"unable to get code location"}
{"time":"2025-02-27T15:16:48.631783435-06:00","level":"ERROR","msg":"unable to get code location"}
{"time":"2025-02-27T15:16:48.631796569-06:00","level":"ERROR","msg":"unable to get code location"}
{"time":"2025-02-27T15:16:48.63202595-06:00","level":"ERROR","msg":"unable to get code location"}
{"time":"2025-02-27T15:16:48.633334984-06:00","level":"INFO","msg":"info rule not matched","rule":"windup-discover-spring-configuration"}
{"time":"2025-02-27T15:16:48.635121071-06:00","level":"INFO","msg":"info rule not matched","rule":"windup-discover-jpa-configuration"}
{"time":"2025-02-27T15:16:48.635595816-06:00","level":"INFO","msg":"info rule not matched","rule":"windup-discover-web-configuration"}
{"time":"2025-02-27T15:16:48.635678597-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-web-01000"}
{"time":"2025-02-27T15:16:48.635749698-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-web-01100"}
{"time":"2025-02-27T15:16:48.635804377-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-web-01200"}
{"time":"2025-02-27T15:16:48.635871068-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-web-01300"}
{"time":"2025-02-27T15:16:48.635951221-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-web-01400"}
{"time":"2025-02-27T15:16:48.636038657-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-web-01500"}
{"time":"2025-02-27T15:16:48.636107959-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-web-01600"}
{"time":"2025-02-27T15:16:48.636173684-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-web-01700"}
{"time":"2025-02-27T15:16:48.636254068-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-web-01800"}
{"time":"2025-02-27T15:16:48.636334987-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-web-01900"}
{"time":"2025-02-27T15:16:48.636403298-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-web-02000"}
{"time":"2025-02-27T15:16:48.636465126-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-web-02100"}
{"time":"2025-02-27T15:16:48.636502774-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-web-02200"}
{"time":"2025-02-27T15:16:48.636560168-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-web-02300"}
{"time":"2025-02-27T15:16:48.636615541-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-web-02400"}
{"time":"2025-02-27T15:16:48.63665212-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-test-frameworks-00010"}
{"time":"2025-02-27T15:16:48.636687598-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-test-frameworks-00020"}
{"time":"2025-02-27T15:16:48.636734816-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-test-frameworks-00030"}
{"time":"2025-02-27T15:16:48.636771144-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-test-frameworks-00040"}
{"time":"2025-02-27T15:16:48.636819062-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-test-frameworks-00050"}
{"time":"2025-02-27T15:16:48.636855546-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-test-frameworks-00060"}
{"time":"2025-02-27T15:16:48.636887156-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-test-frameworks-00070"}
{"time":"2025-02-27T15:16:48.636922485-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-test-frameworks-00080"}
{"time":"2025-02-27T15:16:48.636954532-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-test-frameworks-00090"}
{"time":"2025-02-27T15:16:48.636993273-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-test-frameworks-00100"}
{"time":"2025-02-27T15:16:48.63702741-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-test-frameworks-00110"}
{"time":"2025-02-27T15:16:48.637061822-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-test-frameworks-00120"}
{"time":"2025-02-27T15:16:48.637096481-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-test-frameworks-00130"}
{"time":"2025-02-27T15:16:48.637129348-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-test-frameworks-00140"}
{"time":"2025-02-27T15:16:48.637161444-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-test-frameworks-00150"}
{"time":"2025-02-27T15:16:48.637193364-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-test-frameworks-00160"}
{"time":"2025-02-27T15:16:48.637227755-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-test-frameworks-00170"}
{"time":"2025-02-27T15:16:48.637273031-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-test-frameworks-00180"}
{"time":"2025-02-27T15:16:48.637307144-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-test-frameworks-00190"}
{"time":"2025-02-27T15:16:48.637340939-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-test-frameworks-00200"}
{"time":"2025-02-27T15:16:48.637372934-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-test-frameworks-00210"}
{"time":"2025-02-27T15:16:48.637405301-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-test-frameworks-00220"}
{"time":"2025-02-27T15:16:48.637436855-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-test-frameworks-00230"}
{"time":"2025-02-27T15:16:48.637475402-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-test-frameworks-00240"}
{"time":"2025-02-27T15:16:48.637507947-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-test-frameworks-00250"}
{"time":"2025-02-27T15:16:48.637541269-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-test-frameworks-00260"}
{"time":"2025-02-27T15:16:48.637593421-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-test-frameworks-00270"}
{"time":"2025-02-27T15:16:48.637666437-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-test-frameworks-00280"}
{"time":"2025-02-27T15:16:48.637726441-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-test-frameworks-00290"}
{"time":"2025-02-27T15:16:48.637786715-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-test-frameworks-00300"}
{"time":"2025-02-27T15:16:48.637856186-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-test-frameworks-00310"}
{"time":"2025-02-27T15:16:48.637911758-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-test-frameworks-00320"}
{"time":"2025-02-27T15:16:48.637982938-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-test-frameworks-00330"}
{"time":"2025-02-27T15:16:48.638050824-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-test-frameworks-00340"}
{"time":"2025-02-27T15:16:48.63812367-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-test-frameworks-00350"}
{"time":"2025-02-27T15:16:48.638191651-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-test-frameworks-00360"}
{"time":"2025-02-27T15:16:48.638263856-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-test-frameworks-00370"}
{"time":"2025-02-27T15:16:48.646985777-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:48.647938562-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [Marker [on: /my-app, id: 1, type: org.eclipse.jdt.core.problem, attributes: [categoryId: 10, message: The project was not built due to \"release 21 is not found in the system\". Fix the problem, then try refreshing this project and building it since it may be inconsistent, severity: 2, sourceId: JDT], created: 2/27/25, 3:16 PM]] warnings: []"}
{"time":"2025-02-27T15:16:48.652359166-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<javax.annotation>, type<security*> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<security*>, pattern match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax.annotation>, type<security*>, pattern match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:48.677582793-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.annotation.security* location 4 matches0"}
{"time":"2025-02-27T15:16:48.678143783-06:00","level":"INFO","msg":"Symbols retrieved","provider":"java","symbols":0,"cap":"referenced","conditionInfo":{"Referenced":{"Pattern":"javax.annotation.security*","Location":"ANNOTATION","annotated":{"pattern":""},"Filepaths":null}}}
{"time":"2025-02-27T15:16:48.67918933-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-security-01000"}
{"time":"2025-02-27T15:16:48.679415779-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-security-01100"}
{"time":"2025-02-27T15:16:48.679564338-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-security-01200"}
{"time":"2025-02-27T15:16:48.679695144-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-security-01300"}
{"time":"2025-02-27T15:16:48.679831276-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-security-01400"}
{"time":"2025-02-27T15:16:48.679959596-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-security-01500"}
{"time":"2025-02-27T15:16:48.680092641-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-security-01600"}
{"time":"2025-02-27T15:16:48.680203304-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-security-01700"}
{"time":"2025-02-27T15:16:48.680316674-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-security-01800"}
{"time":"2025-02-27T15:16:48.680444713-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-security-01900"}
{"time":"2025-02-27T15:16:48.680567467-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-security-02000"}
{"time":"2025-02-27T15:16:48.68066994-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-security-02100"}
{"time":"2025-02-27T15:16:48.680772834-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-security-02200"}
{"time":"2025-02-27T15:16:48.680888142-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-security-02300"}
{"time":"2025-02-27T15:16:48.680989713-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-security-02400"}
{"time":"2025-02-27T15:16:48.68111064-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-security-02500"}
{"time":"2025-02-27T15:16:48.681220997-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-security-02600"}
{"time":"2025-02-27T15:16:48.681337061-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-security-02700"}
{"time":"2025-02-27T15:16:48.681458704-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-security-02800"}
{"time":"2025-02-27T15:16:48.681594262-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-security-02900"}
{"time":"2025-02-27T15:16:48.681742618-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-security-03000"}
{"time":"2025-02-27T15:16:48.681882321-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-security-03100"}
{"time":"2025-02-27T15:16:48.682014211-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-security-03200"}
{"time":"2025-02-27T15:16:48.682129725-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-security-03300"}
{"time":"2025-02-27T15:16:48.682261512-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-security-03400"}
{"time":"2025-02-27T15:16:48.682394451-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-security-03500"}
{"time":"2025-02-27T15:16:48.68252032-06:00","level":"INFO","msg":"info rule not matched","rule":"observability-technology-usage-0100"}
{"time":"2025-02-27T15:16:48.682644204-06:00","level":"INFO","msg":"info rule not matched","rule":"observability-technology-usage-0200"}
{"time":"2025-02-27T15:16:48.682971952-06:00","level":"ERROR","msg":"unable to get code location"}
{"time":"2025-02-27T15:16:48.683132185-06:00","level":"INFO","msg":"info rule not matched","rule":"non-xml-technology-usage-05000"}
{"time":"2025-02-27T15:16:48.683263089-06:00","level":"INFO","msg":"info rule not matched","rule":"non-xml-technology-usage-06000"}
{"time":"2025-02-27T15:16:48.683412452-06:00","level":"INFO","msg":"info rule not matched","rule":"non-xml-technology-usage-12000"}
{"time":"2025-02-27T15:16:48.683542292-06:00","level":"INFO","msg":"info rule not matched","rule":"non-xml-technology-usage-13000"}
{"time":"2025-02-27T15:16:48.683676051-06:00","level":"INFO","msg":"info rule not matched","rule":"non-xml-technology-usage-14000"}
{"time":"2025-02-27T15:16:48.683834821-06:00","level":"INFO","msg":"info rule not matched","rule":"non-xml-technology-usage-17000"}
{"time":"2025-02-27T15:16:48.683975529-06:00","level":"INFO","msg":"info rule not matched","rule":"non-xml-technology-usage-18000"}
{"time":"2025-02-27T15:16:48.684092361-06:00","level":"INFO","msg":"info rule not matched","rule":"non-xml-technology-usage-19000"}
{"time":"2025-02-27T15:16:48.68420919-06:00","level":"INFO","msg":"info rule not matched","rule":"non-xml-technology-usage-20000"}
{"time":"2025-02-27T15:16:48.684370951-06:00","level":"INFO","msg":"info rule not matched","rule":"non-xml-technology-usage-21000"}
{"time":"2025-02-27T15:16:48.684501349-06:00","level":"INFO","msg":"info rule not matched","rule":"non-xml-technology-usage-22000"}
{"time":"2025-02-27T15:16:48.684641346-06:00","level":"INFO","msg":"info rule not matched","rule":"non-xml-technology-usage-23000"}
{"time":"2025-02-27T15:16:48.684781665-06:00","level":"INFO","msg":"info rule not matched","rule":"non-xml-technology-usage-24000"}
{"time":"2025-02-27T15:16:48.684917374-06:00","level":"INFO","msg":"info rule not matched","rule":"non-xml-technology-usage-25000"}
{"time":"2025-02-27T15:16:48.685040318-06:00","level":"INFO","msg":"info rule not matched","rule":"non-xml-technology-usage-26000"}
{"time":"2025-02-27T15:16:48.685161001-06:00","level":"INFO","msg":"info rule not matched","rule":"non-xml-technology-usage-27000"}
{"time":"2025-02-27T15:16:48.685289778-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-mvc-01000"}
{"time":"2025-02-27T15:16:48.685407727-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-mvc-01100"}
{"time":"2025-02-27T15:16:48.685536304-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-mvc-01200"}
{"time":"2025-02-27T15:16:48.685653834-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-mvc-01300"}
{"time":"2025-02-27T15:16:48.68577647-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-mvc-01400"}
{"time":"2025-02-27T15:16:48.685899643-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-mvc-01500"}
{"time":"2025-02-27T15:16:48.686031854-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-mvc-01600"}
{"time":"2025-02-27T15:16:48.686179021-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-mvc-01700"}
{"time":"2025-02-27T15:16:48.686318834-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-mvc-01800"}
{"time":"2025-02-27T15:16:48.686486043-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-mvc-01900"}
{"time":"2025-02-27T15:16:48.68662206-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-mvc-02000"}
{"time":"2025-02-27T15:16:48.686755-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-mvc-02100"}
{"time":"2025-02-27T15:16:48.686885766-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-mvc-02200"}
{"time":"2025-02-27T15:16:48.687015432-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-mvc-02300"}
{"time":"2025-02-27T15:16:48.687146488-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-mvc-02400"}
{"time":"2025-02-27T15:16:48.687277203-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-mvc-02500"}
{"time":"2025-02-27T15:16:48.687410422-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-mvc-02600"}
{"time":"2025-02-27T15:16:48.687539994-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-mvc-02700"}
{"time":"2025-02-27T15:16:48.687672724-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-mvc-02800"}
{"time":"2025-02-27T15:16:48.687802893-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-mvc-02900"}
{"time":"2025-02-27T15:16:48.687987187-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-mvc-03000"}
{"time":"2025-02-27T15:16:48.688135899-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-mvc-03100"}
{"time":"2025-02-27T15:16:48.688267667-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-mvc-03200"}
{"time":"2025-02-27T15:16:48.688395801-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-mvc-03300"}
{"time":"2025-02-27T15:16:48.688552812-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-mvc-03400"}
{"time":"2025-02-27T15:16:48.688731887-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-mvc-03500"}
{"time":"2025-02-27T15:16:48.688877588-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-mvc-03600"}
{"time":"2025-02-27T15:16:48.689007112-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-mvc-03700"}
{"time":"2025-02-27T15:16:48.689141607-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-mvc-03800"}
{"time":"2025-02-27T15:16:48.689285162-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-mvc-03900"}
{"time":"2025-02-27T15:16:48.689418164-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-mvc-04000"}
{"time":"2025-02-27T15:16:48.689548144-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-mvc-04100"}
{"time":"2025-02-27T15:16:48.689671439-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-mvc-0x4200"}
{"time":"2025-02-27T15:16:48.689801137-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-mvc-04300"}
{"time":"2025-02-27T15:16:48.689946307-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-mvc-04400"}
{"time":"2025-02-27T15:16:48.690066185-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-mvc-04500"}
{"time":"2025-02-27T15:16:48.690189074-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-mvc-04600"}
{"time":"2025-02-27T15:16:48.690310887-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-mvc-04700"}
{"time":"2025-02-27T15:16:48.690432985-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-mvc-04800"}
{"time":"2025-02-27T15:16:48.690554928-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-mvc-04900"}
{"time":"2025-02-27T15:16:48.690678491-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-mvc-05000"}
{"time":"2025-02-27T15:16:48.690801686-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-mvc-05100"}
{"time":"2025-02-27T15:16:48.690942849-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-mvc-05200"}
{"time":"2025-02-27T15:16:48.691062501-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-mvc-05300"}
{"time":"2025-02-27T15:16:48.69118864-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-mvc-05400"}
{"time":"2025-02-27T15:16:48.691318346-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-mvc-05500"}
{"time":"2025-02-27T15:16:48.691467336-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-mvc-05600"}
{"time":"2025-02-27T15:16:48.691595228-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-mvc-05700"}
{"time":"2025-02-27T15:16:48.691754576-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-mvc-05800"}
{"time":"2025-02-27T15:16:48.69189542-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-mvc-05900"}
{"time":"2025-02-27T15:16:48.692030562-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-mvc-06000"}
{"time":"2025-02-27T15:16:48.692166989-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-markup-01300"}
{"time":"2025-02-27T15:16:48.69231877-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-logging-00010"}
{"time":"2025-02-27T15:16:48.692473398-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-logging-00020"}
{"time":"2025-02-27T15:16:48.692602561-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-logging-00030"}
{"time":"2025-02-27T15:16:48.69272891-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-logging-00040"}
{"time":"2025-02-27T15:16:48.69284999-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-logging-00050"}
{"time":"2025-02-27T15:16:48.693009419-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-logging-00060"}
{"time":"2025-02-27T15:16:48.69315207-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-logging-00070"}
{"time":"2025-02-27T15:16:48.693285648-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-logging-00080"}
{"time":"2025-02-27T15:16:48.693434593-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-logging-00090"}
{"time":"2025-02-27T15:16:48.693568002-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-logging-000100"}
{"time":"2025-02-27T15:16:48.693712556-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-logging-000110"}
{"time":"2025-02-27T15:16:48.693844237-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-logging-000120"}
{"time":"2025-02-27T15:16:48.694001384-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-logging-000130"}
{"time":"2025-02-27T15:16:48.694135565-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-logging-000140"}
{"time":"2025-02-27T15:16:48.694277869-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-logging-000150"}
{"time":"2025-02-27T15:16:48.694408375-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-logging-000160"}
{"time":"2025-02-27T15:16:48.694550778-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-logging-000170"}
{"time":"2025-02-27T15:16:48.694681144-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-logging-000180"}
{"time":"2025-02-27T15:16:48.694816719-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-logging-000190"}
{"time":"2025-02-27T15:16:48.694971941-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-logging-000200"}
{"time":"2025-02-27T15:16:48.695103525-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-logging-000210"}
{"time":"2025-02-27T15:16:48.695234143-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-logging-000220"}
{"time":"2025-02-27T15:16:48.695384914-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-logging-000230"}
{"time":"2025-02-27T15:16:48.695526581-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-logging-000240"}
{"time":"2025-02-27T15:16:48.695668321-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-logging-000250"}
{"time":"2025-02-27T15:16:48.695804738-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-logging-000260"}
{"time":"2025-02-27T15:16:48.695950645-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-logging-000270"}
{"time":"2025-02-27T15:16:48.696092979-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-logging-000280"}
{"time":"2025-02-27T15:16:48.696226952-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-logging-000290"}
{"time":"2025-02-27T15:16:48.696362181-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-jta-00020"}
{"time":"2025-02-27T15:16:48.696534274-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-jta-00030"}
{"time":"2025-02-27T15:16:48.696669935-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-jta-00040"}
{"time":"2025-02-27T15:16:48.696828909-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-jta-00050"}
{"time":"2025-02-27T15:16:48.696975213-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-jta-00060"}
{"time":"2025-02-27T15:16:48.697088384-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-jta-00070"}
{"time":"2025-02-27T15:16:48.697194253-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-jta-00080"}
{"time":"2025-02-27T15:16:48.697285699-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-jta-00090"}
{"time":"2025-02-27T15:16:48.697372508-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-jta-00100"}
{"time":"2025-02-27T15:16:48.697464058-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-jta-00110"}
{"time":"2025-02-27T15:16:48.697567891-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-jta-00120"}
{"time":"2025-02-27T15:16:48.697667962-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-jta-00130"}
{"time":"2025-02-27T15:16:48.697751234-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-jta-00140"}
{"time":"2025-02-27T15:16:48.69783516-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-jta-00150"}
{"time":"2025-02-27T15:16:48.69792886-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-jta-00160"}
{"time":"2025-02-27T15:16:48.698047694-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-jta-00170"}
{"time":"2025-02-27T15:16:48.698098368-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-jta-00180"}
{"time":"2025-02-27T15:16:48.698177306-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-jta-00190"}
{"time":"2025-02-27T15:16:48.698253583-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-jta-00200"}
{"time":"2025-02-27T15:16:48.698333-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-jta-00210"}
{"time":"2025-02-27T15:16:48.698415744-06:00","level":"INFO","msg":"info rule not matched","rule":"javase-technology-usage-01000"}
{"time":"2025-02-27T15:16:48.698772312-06:00","level":"INFO","msg":"info rule not matched","rule":"javaee-technology-usage-00010"}
{"time":"2025-02-27T15:16:48.699843366-06:00","level":"INFO","msg":"info rule not matched","rule":"javaee-technology-usage-00011"}
{"time":"2025-02-27T15:16:48.700009127-06:00","level":"INFO","msg":"info rule not matched","rule":"javaee-technology-usage-00012"}
{"time":"2025-02-27T15:16:48.700137472-06:00","level":"INFO","msg":"info rule not matched","rule":"javaee-technology-usage-00013"}
{"time":"2025-02-27T15:16:48.702572125-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:48.703367943-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [Marker [on: /my-app, id: 1, type: org.eclipse.jdt.core.problem, attributes: [categoryId: 10, message: The project was not built due to \"release 21 is not found in the system\". Fix the problem, then try refreshing this project and building it since it may be inconsistent, severity: 2, sourceId: JDT], created: 2/27/25, 3:16 PM]] warnings: []"}
{"time":"2025-02-27T15:16:48.703979104-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: PackageDeclarationPattern: <javax.enterprise.inject*>, pattern match, case insensitive, generic full match, fine grain: none | PackageReferencePattern: <javax.enterprise.inject*>, pattern match, case insensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:48.751638908-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.enterprise.inject* location 11 matches0"}
{"time":"2025-02-27T15:16:48.752195049-06:00","level":"INFO","msg":"Symbols retrieved","provider":"java","symbols":0,"cap":"referenced","conditionInfo":{"Referenced":{"Pattern":"javax.enterprise.inject*","Location":"PACKAGE","annotated":{"pattern":""},"Filepaths":null}}}
{"time":"2025-02-27T15:16:48.754339425-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:48.755061917-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [Marker [on: /my-app, id: 1, type: org.eclipse.jdt.core.problem, attributes: [categoryId: 10, message: The project was not built due to \"release 21 is not found in the system\". Fix the problem, then try refreshing this project and building it since it may be inconsistent, severity: 2, sourceId: JDT], created: 2/27/25, 3:16 PM]] warnings: []"}
{"time":"2025-02-27T15:16:48.7557522-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: PackageDeclarationPattern: <javax.inject*>, pattern match, case insensitive, generic full match, fine grain: none | PackageReferencePattern: <javax.inject*>, pattern match, case insensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:48.757340008-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.inject* location 11 matches0"}
{"time":"2025-02-27T15:16:48.757607547-06:00","level":"INFO","msg":"Symbols retrieved","provider":"java","symbols":0,"cap":"referenced","conditionInfo":{"Referenced":{"Pattern":"javax.inject*","Location":"PACKAGE","annotated":{"pattern":""},"Filepaths":null}}}
{"time":"2025-02-27T15:16:48.757687422-06:00","level":"INFO","msg":"info rule not matched","rule":"javaee-technology-usage-00020-javax"}
{"time":"2025-02-27T15:16:48.759379395-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:48.759999302-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [Marker [on: /my-app, id: 1, type: org.eclipse.jdt.core.problem, attributes: [categoryId: 10, message: The project was not built due to \"release 21 is not found in the system\". Fix the problem, then try refreshing this project and building it since it may be inconsistent, severity: 2, sourceId: JDT], created: 2/27/25, 3:16 PM]] warnings: []"}
{"time":"2025-02-27T15:16:48.760679407-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: PackageDeclarationPattern: <jakarta.enterprise.inject*>, pattern match, case insensitive, generic full match, fine grain: none | PackageReferencePattern: <jakarta.enterprise.inject*>, pattern match, case insensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:48.761928292-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for jakarta.enterprise.inject* location 11 matches0"}
{"time":"2025-02-27T15:16:48.762179478-06:00","level":"INFO","msg":"Symbols retrieved","provider":"java","symbols":0,"cap":"referenced","conditionInfo":{"Referenced":{"Pattern":"jakarta.enterprise.inject*","Location":"PACKAGE","annotated":{"pattern":""},"Filepaths":null}}}
{"time":"2025-02-27T15:16:48.764113643-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:48.7649881-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [Marker [on: /my-app, id: 1, type: org.eclipse.jdt.core.problem, attributes: [categoryId: 10, message: The project was not built due to \"release 21 is not found in the system\". Fix the problem, then try refreshing this project and building it since it may be inconsistent, severity: 2, sourceId: JDT], created: 2/27/25, 3:16 PM]] warnings: []"}
{"time":"2025-02-27T15:16:48.765539328-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: PackageDeclarationPattern: <jakarta.inject*>, pattern match, case insensitive, generic full match, fine grain: none | PackageReferencePattern: <jakarta.inject*>, pattern match, case insensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:48.767800034-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for jakarta.inject* location 11 matches0"}
{"time":"2025-02-27T15:16:48.768052227-06:00","level":"INFO","msg":"Symbols retrieved","provider":"java","symbols":0,"cap":"referenced","conditionInfo":{"Referenced":{"Pattern":"jakarta.inject*","Location":"PACKAGE","annotated":{"pattern":""},"Filepaths":null}}}
{"time":"2025-02-27T15:16:48.768141397-06:00","level":"INFO","msg":"info rule not matched","rule":"javaee-technology-usage-00020-jakarta"}
{"time":"2025-02-27T15:16:48.768417882-06:00","level":"INFO","msg":"info rule not matched","rule":"javaee-technology-usage-00021"}
{"time":"2025-02-27T15:16:48.771610894-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:48.772343471-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [Marker [on: /my-app, id: 1, type: org.eclipse.jdt.core.problem, attributes: [categoryId: 10, message: The project was not built due to \"release 21 is not found in the system\". Fix the problem, then try refreshing this project and building it since it may be inconsistent, severity: 2, sourceId: JDT], created: 2/27/25, 3:16 PM]] warnings: []"}
{"time":"2025-02-27T15:16:48.773054737-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: PackageDeclarationPattern: <javax.json*>, pattern match, case insensitive, generic full match, fine grain: none | PackageReferencePattern: <javax.json*>, pattern match, case insensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:48.774509375-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.json* location 11 matches0"}
{"time":"2025-02-27T15:16:48.774726972-06:00","level":"INFO","msg":"Symbols retrieved","provider":"java","symbols":0,"cap":"referenced","conditionInfo":{"Referenced":{"Pattern":"javax.json*","Location":"PACKAGE","annotated":{"pattern":""},"Filepaths":null}}}
{"time":"2025-02-27T15:16:48.774804627-06:00","level":"INFO","msg":"info rule not matched","rule":"javaee-technology-usage-00030"}
{"time":"2025-02-27T15:16:48.775031324-06:00","level":"INFO","msg":"info rule not matched","rule":"javaee-technology-usage-00031"}
{"time":"2025-02-27T15:16:48.777134425-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:48.777837846-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [Marker [on: /my-app, id: 1, type: org.eclipse.jdt.core.problem, attributes: [categoryId: 10, message: The project was not built due to \"release 21 is not found in the system\". Fix the problem, then try refreshing this project and building it since it may be inconsistent, severity: 2, sourceId: JDT], created: 2/27/25, 3:16 PM]] warnings: []"}
{"time":"2025-02-27T15:16:48.778836439-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<javax.security>, type<jacc*> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<jacc*>, pattern match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax.security>, type<jacc*>, pattern match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:48.779801996-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.security.jacc* location 8 matches0"}
{"time":"2025-02-27T15:16:48.780017943-06:00","level":"INFO","msg":"Symbols retrieved","provider":"java","symbols":0,"cap":"referenced","conditionInfo":{"Referenced":{"Pattern":"javax.security.jacc*","Location":"IMPORT","annotated":{"pattern":""},"Filepaths":null}}}
{"time":"2025-02-27T15:16:48.780090322-06:00","level":"INFO","msg":"info rule not matched","rule":"javaee-technology-usage-00040"}
{"time":"2025-02-27T15:16:48.782050579-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:48.782717288-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [Marker [on: /my-app, id: 1, type: org.eclipse.jdt.core.problem, attributes: [categoryId: 10, message: The project was not built due to \"release 21 is not found in the system\". Fix the problem, then try refreshing this project and building it since it may be inconsistent, severity: 2, sourceId: JDT], created: 2/27/25, 3:16 PM]] warnings: []"}
{"time":"2025-02-27T15:16:48.783690706-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<javax.management>, type<j2ee*> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<j2ee*>, pattern match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax.management>, type<j2ee*>, pattern match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:48.784662803-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.management.j2ee* location 8 matches0"}
{"time":"2025-02-27T15:16:48.785070286-06:00","level":"INFO","msg":"Symbols retrieved","provider":"java","symbols":0,"cap":"referenced","conditionInfo":{"Referenced":{"Pattern":"javax.management.j2ee*","Location":"IMPORT","annotated":{"pattern":""},"Filepaths":null}}}
{"time":"2025-02-27T15:16:48.785157266-06:00","level":"INFO","msg":"info rule not matched","rule":"javaee-technology-usage-00050"}
{"time":"2025-02-27T15:16:48.785732984-06:00","level":"INFO","msg":"info rule not matched","rule":"javaee-technology-usage-00060"}
{"time":"2025-02-27T15:16:48.788265951-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:48.78875604-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [Marker [on: /my-app, id: 1, type: org.eclipse.jdt.core.problem, attributes: [categoryId: 10, message: The project was not built due to \"release 21 is not found in the system\". Fix the problem, then try refreshing this project and building it since it may be inconsistent, severity: 2, sourceId: JDT], created: 2/27/25, 3:16 PM]] warnings: []"}
{"time":"2025-02-27T15:16:48.789705889-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<javax>, type<jws*> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<jws*>, pattern match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax>, type<jws*>, pattern match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:48.790538348-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.jws* location 8 matches0"}
{"time":"2025-02-27T15:16:48.790706523-06:00","level":"INFO","msg":"Symbols retrieved","provider":"java","symbols":0,"cap":"referenced","conditionInfo":{"Referenced":{"Pattern":"javax.jws*","Location":"IMPORT","annotated":{"pattern":""},"Filepaths":null}}}
{"time":"2025-02-27T15:16:48.790779586-06:00","level":"INFO","msg":"info rule not matched","rule":"javaee-technology-usage-00070"}
{"time":"2025-02-27T15:16:48.792166485-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:48.792915111-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [Marker [on: /my-app, id: 1, type: org.eclipse.jdt.core.problem, attributes: [categoryId: 10, message: The project was not built due to \"release 21 is not found in the system\". Fix the problem, then try refreshing this project and building it since it may be inconsistent, severity: 2, sourceId: JDT], created: 2/27/25, 3:16 PM]] warnings: []"}
{"time":"2025-02-27T15:16:48.79395914-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<javax.annotation>, type<PreDestroy|PostConstruct|Resource|Resources> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<PreDestroy|PostConstruct|Resource|Resources>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax.annotation>, type<PreDestroy|PostConstruct|Resource|Resources>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:48.794949887-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.annotation.PreDestroy|PostConstruct|Resource|Resources location 8 matches0"}
{"time":"2025-02-27T15:16:48.7950598-06:00","level":"INFO","msg":"Symbols retrieved","provider":"java","symbols":0,"cap":"referenced","conditionInfo":{"Referenced":{"Pattern":"javax.annotation.PreDestroy|PostConstruct|Resource|Resources","Location":"IMPORT","annotated":{"pattern":""},"Filepaths":null}}}
{"time":"2025-02-27T15:16:48.795097004-06:00","level":"INFO","msg":"info rule not matched","rule":"javaee-technology-usage-00080"}
{"time":"2025-02-27T15:16:48.79648971-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:48.7973968-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [Marker [on: /my-app, id: 1, type: org.eclipse.jdt.core.problem, attributes: [categoryId: 10, message: The project was not built due to \"release 21 is not found in the system\". Fix the problem, then try refreshing this project and building it since it may be inconsistent, severity: 2, sourceId: JDT], created: 2/27/25, 3:16 PM]] warnings: []"}
{"time":"2025-02-27T15:16:48.798810303-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<java|javax.xml>, type<bind*> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<bind*>, pattern match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<java|javax.xml>, type<bind*>, pattern match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:48.802930956-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for java|javax.xml.bind* location 8 matches0"}
{"time":"2025-02-27T15:16:48.803165248-06:00","level":"INFO","msg":"Symbols retrieved","provider":"java","symbols":0,"cap":"referenced","conditionInfo":{"Referenced":{"Pattern":"java|javax.xml.bind*","Location":"IMPORT","annotated":{"pattern":""},"Filepaths":null}}}
{"time":"2025-02-27T15:16:48.803304558-06:00","level":"INFO","msg":"info rule not matched","rule":"javaee-technology-usage-00090"}
{"time":"2025-02-27T15:16:48.807180783-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:48.80830763-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [Marker [on: /my-app, id: 1, type: org.eclipse.jdt.core.problem, attributes: [categoryId: 10, message: The project was not built due to \"release 21 is not found in the system\". Fix the problem, then try refreshing this project and building it since it may be inconsistent, severity: 2, sourceId: JDT], created: 2/27/25, 3:16 PM]] warnings: []"}
{"time":"2025-02-27T15:16:48.810366691-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<javax.xml>, type<registry*> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<registry*>, pattern match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax.xml>, type<registry*>, pattern match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:48.811539394-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.xml.registry* location 8 matches0"}
{"time":"2025-02-27T15:16:48.811977756-06:00","level":"INFO","msg":"Symbols retrieved","provider":"java","symbols":0,"cap":"referenced","conditionInfo":{"Referenced":{"Pattern":"javax.xml.registry*","Location":"IMPORT","annotated":{"pattern":""},"Filepaths":null}}}
{"time":"2025-02-27T15:16:48.81206967-06:00","level":"INFO","msg":"info rule not matched","rule":"javaee-technology-usage-00100"}
{"time":"2025-02-27T15:16:48.814065926-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:48.814908012-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [Marker [on: /my-app, id: 1, type: org.eclipse.jdt.core.problem, attributes: [categoryId: 10, message: The project was not built due to \"release 21 is not found in the system\". Fix the problem, then try refreshing this project and building it since it may be inconsistent, severity: 2, sourceId: JDT], created: 2/27/25, 3:16 PM]] warnings: []"}
{"time":"2025-02-27T15:16:48.816205977-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<javax.validation>, type<constraints*> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<constraints*>, pattern match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax.validation>, type<constraints*>, pattern match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:48.817605399-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.validation.constraints* location 8 matches0"}
{"time":"2025-02-27T15:16:48.817779064-06:00","level":"INFO","msg":"Symbols retrieved","provider":"java","symbols":0,"cap":"referenced","conditionInfo":{"Referenced":{"Pattern":"javax.validation.constraints*","Location":"IMPORT","annotated":{"pattern":""},"Filepaths":null}}}
{"time":"2025-02-27T15:16:48.817848031-06:00","level":"INFO","msg":"info rule not matched","rule":"javaee-technology-usage-00110"}
{"time":"2025-02-27T15:16:48.821044027-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:48.821604377-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [Marker [on: /my-app, id: 1, type: org.eclipse.jdt.core.problem, attributes: [categoryId: 10, message: The project was not built due to \"release 21 is not found in the system\". Fix the problem, then try refreshing this project and building it since it may be inconsistent, severity: 2, sourceId: JDT], created: 2/27/25, 3:16 PM]] warnings: []"}
{"time":"2025-02-27T15:16:48.82325895-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<javax>, type<servlet*> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<servlet*>, pattern match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax>, type<servlet*>, pattern match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:48.823955522-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.servlet* location 8 matches0"}
{"time":"2025-02-27T15:16:48.824145514-06:00","level":"INFO","msg":"Symbols retrieved","provider":"java","symbols":0,"cap":"referenced","conditionInfo":{"Referenced":{"Pattern":"javax.servlet*","Location":"IMPORT","annotated":{"pattern":""},"Filepaths":null}}}
{"time":"2025-02-27T15:16:48.824231687-06:00","level":"INFO","msg":"info rule not matched","rule":"javaee-technology-usage-00120"}
{"time":"2025-02-27T15:16:48.82574044-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:48.826617669-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [Marker [on: /my-app, id: 1, type: org.eclipse.jdt.core.problem, attributes: [categoryId: 10, message: The project was not built due to \"release 21 is not found in the system\". Fix the problem, then try refreshing this project and building it since it may be inconsistent, severity: 2, sourceId: JDT], created: 2/27/25, 3:16 PM]] warnings: []"}
{"time":"2025-02-27T15:16:48.827783706-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<javax.json>, type<bind*> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<bind*>, pattern match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax.json>, type<bind*>, pattern match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:48.828870452-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.json.bind* location 8 matches0"}
{"time":"2025-02-27T15:16:48.828985627-06:00","level":"INFO","msg":"Symbols retrieved","provider":"java","symbols":0,"cap":"referenced","conditionInfo":{"Referenced":{"Pattern":"javax.json.bind*","Location":"IMPORT","annotated":{"pattern":""},"Filepaths":null}}}
{"time":"2025-02-27T15:16:48.829055105-06:00","level":"INFO","msg":"info rule not matched","rule":"javaee-technology-usage-00130"}
{"time":"2025-02-27T15:16:48.829245862-06:00","level":"INFO","msg":"info rule not matched","rule":"javaee-technology-usage-00140"}
{"time":"2025-02-27T15:16:48.829434948-06:00","level":"INFO","msg":"info rule not matched","rule":"javaee-technology-usage-00150"}
{"time":"2025-02-27T15:16:48.82955076-06:00","level":"INFO","msg":"info rule not matched","rule":"javaee-technology-usage-00160"}
{"time":"2025-02-27T15:16:48.829710795-06:00","level":"INFO","msg":"info rule not matched","rule":"javaee-technology-usage-00170"}
{"time":"2025-02-27T15:16:48.829832442-06:00","level":"INFO","msg":"info rule not matched","rule":"javaee-technology-usage-00180"}
{"time":"2025-02-27T15:16:48.829954443-06:00","level":"INFO","msg":"info rule not matched","rule":"javaee-technology-usage-00190"}
{"time":"2025-02-27T15:16:48.830060866-06:00","level":"INFO","msg":"info rule not matched","rule":"javaee-technology-usage-00200"}
{"time":"2025-02-27T15:16:48.830169308-06:00","level":"INFO","msg":"info rule not matched","rule":"javaee-technology-usage-00210"}
{"time":"2025-02-27T15:16:48.830260176-06:00","level":"INFO","msg":"info rule not matched","rule":"javaee-technology-usage-00220"}
{"time":"2025-02-27T15:16:48.830379965-06:00","level":"INFO","msg":"info rule not matched","rule":"javaee-technology-usage-00230"}
{"time":"2025-02-27T15:16:48.831150413-06:00","level":"INFO","msg":"info rule not matched","rule":"javaee-technology-usage-00902"}
{"time":"2025-02-27T15:16:48.831892108-06:00","level":"INFO","msg":"info rule not matched","rule":"javaee-technology-usage-00903"}
{"time":"2025-02-27T15:16:48.832516811-06:00","level":"INFO","msg":"info rule not matched","rule":"javaee-technology-usage-00905"}
{"time":"2025-02-27T15:16:48.83319235-06:00","level":"INFO","msg":"info rule not matched","rule":"javaee-technology-usage-00906"}
{"time":"2025-02-27T15:16:48.833932592-06:00","level":"INFO","msg":"info rule not matched","rule":"javaee-technology-usage-00910"}
{"time":"2025-02-27T15:16:48.834739436-06:00","level":"INFO","msg":"info rule not matched","rule":"javaee-technology-usage-00911"}
{"time":"2025-02-27T15:16:48.835431708-06:00","level":"INFO","msg":"info rule not matched","rule":"javaee-technology-usage-00912"}
{"time":"2025-02-27T15:16:48.836069012-06:00","level":"INFO","msg":"info rule not matched","rule":"javaee-technology-usage-00913"}
{"time":"2025-02-27T15:16:48.836708731-06:00","level":"INFO","msg":"info rule not matched","rule":"javaee-technology-usage-00914"}
{"time":"2025-02-27T15:16:48.837321781-06:00","level":"INFO","msg":"info rule not matched","rule":"javaee-technology-usage-00915"}
{"time":"2025-02-27T15:16:48.838198088-06:00","level":"INFO","msg":"info rule not matched","rule":"javaee-technology-usage-00916"}
{"time":"2025-02-27T15:16:48.838853393-06:00","level":"INFO","msg":"info rule not matched","rule":"javaee-technology-usage-00917"}
{"time":"2025-02-27T15:16:48.83949981-06:00","level":"INFO","msg":"info rule not matched","rule":"javaee-technology-usage-00918"}
{"time":"2025-02-27T15:16:48.84011558-06:00","level":"INFO","msg":"info rule not matched","rule":"javaee-technology-usage-00926"}
{"time":"2025-02-27T15:16:48.840786409-06:00","level":"INFO","msg":"info rule not matched","rule":"javaee-technology-usage-00927"}
{"time":"2025-02-27T15:16:48.841415122-06:00","level":"INFO","msg":"info rule not matched","rule":"javaee-technology-usage-00928"}
{"time":"2025-02-27T15:16:48.842024119-06:00","level":"INFO","msg":"info rule not matched","rule":"javaee-technology-usage-00930"}
{"time":"2025-02-27T15:16:48.842662424-06:00","level":"INFO","msg":"info rule not matched","rule":"javaee-technology-usage-00931"}
{"time":"2025-02-27T15:16:48.843506021-06:00","level":"INFO","msg":"info rule not matched","rule":"javaee-technology-usage-00932"}
{"time":"2025-02-27T15:16:48.843698153-06:00","level":"INFO","msg":"info rule not matched","rule":"javaee-technology-usage-00950"}
{"time":"2025-02-27T15:16:48.843863925-06:00","level":"INFO","msg":"info rule not matched","rule":"javaee-technology-usage-00951"}
{"time":"2025-02-27T15:16:48.844013132-06:00","level":"INFO","msg":"info rule not matched","rule":"javaee-technology-usage-00952"}
{"time":"2025-02-27T15:16:48.844122467-06:00","level":"INFO","msg":"info rule not matched","rule":"javaee-technology-usage-00953"}
{"time":"2025-02-27T15:16:48.844233804-06:00","level":"INFO","msg":"info rule not matched","rule":"javaee-technology-usage-00954"}
{"time":"2025-02-27T15:16:48.844374701-06:00","level":"INFO","msg":"info rule not matched","rule":"javaee-technology-usage-00955"}
{"time":"2025-02-27T15:16:48.844509932-06:00","level":"INFO","msg":"info rule not matched","rule":"javaee-technology-usage-00956"}
{"time":"2025-02-27T15:16:48.844631185-06:00","level":"INFO","msg":"info rule not matched","rule":"javaee-technology-usage-00957"}
{"time":"2025-02-27T15:16:48.844820179-06:00","level":"INFO","msg":"info rule not matched","rule":"javaee-technology-usage-00958"}
{"time":"2025-02-27T15:16:48.84652994-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:48.847402935-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [Marker [on: /my-app, id: 1, type: org.eclipse.jdt.core.problem, attributes: [categoryId: 10, message: The project was not built due to \"release 21 is not found in the system\". Fix the problem, then try refreshing this project and building it since it may be inconsistent, severity: 2, sourceId: JDT], created: 2/27/25, 3:16 PM]] warnings: []"}
{"time":"2025-02-27T15:16:48.848289806-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.springframework.boot.autoconfigure>, type<SpringBootApplication> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<SpringBootApplication>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.springframework.boot.autoconfigure>, type<SpringBootApplication>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:48.849136946-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.springframework.boot.autoconfigure.SpringBootApplication location 4 matches0"}
{"time":"2025-02-27T15:16:48.849462727-06:00","level":"INFO","msg":"Symbols retrieved","provider":"java","symbols":0,"cap":"referenced","conditionInfo":{"Referenced":{"Pattern":"org.springframework.boot.autoconfigure.SpringBootApplication","Location":"ANNOTATION","annotated":{"pattern":""},"Filepaths":null}}}
{"time":"2025-02-27T15:16:48.849559475-06:00","level":"INFO","msg":"info rule not matched","rule":"3rd-party-spring-03001"}
{"time":"2025-02-27T15:16:48.851692067-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:48.852302142-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [Marker [on: /my-app, id: 1, type: org.eclipse.jdt.core.problem, attributes: [categoryId: 10, message: The project was not built due to \"release 21 is not found in the system\". Fix the problem, then try refreshing this project and building it since it may be inconsistent, severity: 2, sourceId: JDT], created: 2/27/25, 3:16 PM]] warnings: []"}
{"time":"2025-02-27T15:16:48.853525634-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: SuperInterfaceReferencePattern: <SpringBootServletInitializer>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:48.854178225-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.springframework.boot.web.servlet.support.SpringBootServletInitializer location 1 matches0"}
{"time":"2025-02-27T15:16:48.854317992-06:00","level":"INFO","msg":"Symbols retrieved","provider":"java","symbols":0,"cap":"referenced","conditionInfo":{"Referenced":{"Pattern":"org.springframework.boot.web.servlet.support.SpringBootServletInitializer","Location":"INHERITANCE","annotated":{"pattern":""},"Filepaths":null}}}
{"time":"2025-02-27T15:16:48.855219665-06:00","level":"INFO","msg":"info rule not matched","rule":"3rd-party-spring-03002"}
{"time":"2025-02-27T15:16:48.85560678-06:00","level":"INFO","msg":"info rule not matched","rule":"3rd-party-01000"}
{"time":"2025-02-27T15:16:48.855902516-06:00","level":"INFO","msg":"info rule not matched","rule":"3rd-party-02000"}
{"time":"2025-02-27T15:16:48.85621621-06:00","level":"INFO","msg":"info rule not matched","rule":"3rd-party-03000"}
{"time":"2025-02-27T15:16:48.856509661-06:00","level":"INFO","msg":"info rule not matched","rule":"3rd-party-04000"}
{"time":"2025-02-27T15:16:48.85679137-06:00","level":"INFO","msg":"info rule not matched","rule":"3rd-party-05000"}
{"time":"2025-02-27T15:16:48.857078424-06:00","level":"INFO","msg":"info rule not matched","rule":"3rd-party-06000"}
{"time":"2025-02-27T15:16:48.857373327-06:00","level":"INFO","msg":"info rule not matched","rule":"3rd-party-07000"}
{"time":"2025-02-27T15:16:48.857675078-06:00","level":"INFO","msg":"info rule not matched","rule":"3rd-party-08000"}
{"time":"2025-02-27T15:16:48.857956132-06:00","level":"INFO","msg":"info rule not matched","rule":"3rd-party-09000"}
{"time":"2025-02-27T15:16:48.858232852-06:00","level":"INFO","msg":"info rule not matched","rule":"3rd-party-10000"}
{"time":"2025-02-27T15:16:48.858504407-06:00","level":"INFO","msg":"info rule not matched","rule":"3rd-party-11000"}
{"time":"2025-02-27T15:16:48.858789188-06:00","level":"INFO","msg":"info rule not matched","rule":"3rd-party-12000"}
{"time":"2025-02-27T15:16:48.859062996-06:00","level":"INFO","msg":"info rule not matched","rule":"3rd-party-13000"}
{"time":"2025-02-27T15:16:48.859367344-06:00","level":"INFO","msg":"info rule not matched","rule":"3rd-party-14000"}
{"time":"2025-02-27T15:16:48.859791961-06:00","level":"INFO","msg":"info rule not matched","rule":"3rd-party-15000"}
{"time":"2025-02-27T15:16:48.860293406-06:00","level":"INFO","msg":"info rule not matched","rule":"3rd-party-16000"}
{"time":"2025-02-27T15:16:48.860767341-06:00","level":"INFO","msg":"info rule not matched","rule":"3rd-party-17000"}
{"time":"2025-02-27T15:16:48.861249417-06:00","level":"INFO","msg":"info rule not matched","rule":"3rd-party-18000"}
{"time":"2025-02-27T15:16:48.861593829-06:00","level":"INFO","msg":"info rule not matched","rule":"3rd-party-19000"}
{"time":"2025-02-27T15:16:48.861643435-06:00","level":"DEBUG","msg":"running dependency analysis","provider":"java"}
{"time":"2025-02-27T15:16:52.566751624-06:00","level":"INFO","msg":"info rule not matched","rule":"apm-00000"}
{"time":"2025-02-27T15:16:52.566895206-06:00","level":"DEBUG","msg":"running dependency analysis","provider":"java"}
{"time":"2025-02-27T15:16:52.567254337-06:00","level":"INFO","msg":"info rule not matched","rule":"apm-00001"}
{"time":"2025-02-27T15:16:52.567292752-06:00","level":"DEBUG","msg":"running dependency analysis","provider":"java"}
{"time":"2025-02-27T15:16:52.567588027-06:00","level":"INFO","msg":"info rule not matched","rule":"apm-00002"}
{"time":"2025-02-27T15:16:52.568207324-06:00","level":"INFO","msg":"info rule not matched","rule":"apm-00003"}
{"time":"2025-02-27T15:16:52.568745964-06:00","level":"INFO","msg":"info rule not matched","rule":"clustering-00000"}
{"time":"2025-02-27T15:16:52.570909169-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:52.571241342-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [Marker [on: /my-app, id: 1, type: org.eclipse.jdt.core.problem, attributes: [categoryId: 10, message: The project was not built due to \"release 21 is not found in the system\". Fix the problem, then try refreshing this project and building it since it may be inconsistent, severity: 2, sourceId: JDT], created: 2/27/25, 3:16 PM]] warnings: []"}
{"time":"2025-02-27T15:16:52.571796856-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.jboss.ejb3.annotation>, type<Clustered> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Clustered>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.jboss.ejb3.annotation>, type<Clustered>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:52.572251372-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.jboss.ejb3.annotation.Clustered location 4 matches0"}
{"time":"2025-02-27T15:16:52.572371192-06:00","level":"INFO","msg":"Symbols retrieved","provider":"java","symbols":0,"cap":"referenced","conditionInfo":{"Referenced":{"Pattern":"org.jboss.ejb3.annotation.Clustered","Location":"ANNOTATION","annotated":{"pattern":""},"Filepaths":null}}}
{"time":"2025-02-27T15:16:52.573532632-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:52.57384553-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [Marker [on: /my-app, id: 1, type: org.eclipse.jdt.core.problem, attributes: [categoryId: 10, message: The project was not built due to \"release 21 is not found in the system\". Fix the problem, then try refreshing this project and building it since it may be inconsistent, severity: 2, sourceId: JDT], created: 2/27/25, 3:16 PM]] warnings: []"}
{"time":"2025-02-27T15:16:52.574295572-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.jboss.ejb3.annotation>, type<Clustered> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Clustered>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.jboss.ejb3.annotation>, type<Clustered>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:52.574668422-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.jboss.ejb3.annotation.Clustered location 8 matches0"}
{"time":"2025-02-27T15:16:52.574733319-06:00","level":"INFO","msg":"Symbols retrieved","provider":"java","symbols":0,"cap":"referenced","conditionInfo":{"Referenced":{"Pattern":"org.jboss.ejb3.annotation.Clustered","Location":"IMPORT","annotated":{"pattern":""},"Filepaths":null}}}
{"time":"2025-02-27T15:16:52.575874539-06:00","level":"INFO","msg":"info rule not matched","rule":"clustering-00001"}
{"time":"2025-02-27T15:16:52.575924774-06:00","level":"DEBUG","msg":"running dependency analysis","provider":"java"}
{"time":"2025-02-27T15:16:52.575970323-06:00","level":"DEBUG","msg":"running dependency analysis","provider":"java"}
{"time":"2025-02-27T15:16:52.575984369-06:00","level":"INFO","msg":"info rule not matched","rule":"configuration-management-0100"}
{"time":"2025-02-27T15:16:52.576210212-06:00","level":"INFO","msg":"info rule not matched","rule":"configuration-management-0200"}
{"time":"2025-02-27T15:16:52.580011101-06:00","level":"INFO","msg":"info rule not matched","rule":"configuration-management-0300"}
{"time":"2025-02-27T15:16:52.583306504-06:00","level":"INFO","msg":"info rule not matched","rule":"configuration-management-0400"}
{"time":"2025-02-27T15:16:52.585540965-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:52.586011166-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [Marker [on: /my-app, id: 1, type: org.eclipse.jdt.core.problem, attributes: [categoryId: 10, message: The project was not built due to \"release 21 is not found in the system\". Fix the problem, then try refreshing this project and building it since it may be inconsistent, severity: 2, sourceId: JDT], created: 2/27/25, 3:16 PM]] warnings: []"}
{"time":"2025-02-27T15:16:52.586590051-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.springframework.boot.context.properties>, type<ConfigurationProperties> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ConfigurationProperties>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.springframework.boot.context.properties>, type<ConfigurationProperties>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:52.587110235-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.springframework.boot.context.properties.ConfigurationProperties location 4 matches0"}
{"time":"2025-02-27T15:16:52.587283867-06:00","level":"INFO","msg":"Symbols retrieved","provider":"java","symbols":0,"cap":"referenced","conditionInfo":{"Referenced":{"Pattern":"org.springframework.boot.context.properties.ConfigurationProperties","Location":"ANNOTATION","annotated":{"pattern":""},"Filepaths":null}}}
{"time":"2025-02-27T15:16:52.587332772-06:00","level":"INFO","msg":"info rule not matched","rule":"configuration-management-0500"}
{"time":"2025-02-27T15:16:52.587447425-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-integration-00001"}
{"time":"2025-02-27T15:16:52.587551103-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-integration-00002"}
{"time":"2025-02-27T15:16:52.587636884-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-integration-00003"}
{"time":"2025-02-27T15:16:52.58771841-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-integration-00004"}
{"time":"2025-02-27T15:16:52.587802943-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-integration-00005"}
{"time":"2025-02-27T15:16:52.587888279-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-integration-00006"}
{"time":"2025-02-27T15:16:52.5879833-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-integration-00007"}
{"time":"2025-02-27T15:16:52.588065838-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-integration-00008"}
{"time":"2025-02-27T15:16:52.588144931-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-integration-00009"}
{"time":"2025-02-27T15:16:52.588225945-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-integration-00010"}
{"time":"2025-02-27T15:16:52.588308096-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-integration-00011"}
{"time":"2025-02-27T15:16:52.588389964-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-integration-00012"}
{"time":"2025-02-27T15:16:52.588471811-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-integration-00013"}
{"time":"2025-02-27T15:16:52.588555084-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-integration-00014"}
{"time":"2025-02-27T15:16:52.588637507-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-integration-00015"}
{"time":"2025-02-27T15:16:52.588942071-06:00","level":"INFO","msg":"info rule not matched","rule":"connect-01400"}
{"time":"2025-02-27T15:16:52.589203578-06:00","level":"INFO","msg":"info rule not matched","rule":"connect-01500"}
{"time":"2025-02-27T15:16:52.589465751-06:00","level":"INFO","msg":"info rule not matched","rule":"connect-01600"}
{"time":"2025-02-27T15:16:52.589685156-06:00","level":"INFO","msg":"info rule not matched","rule":"connect-01700"}
{"time":"2025-02-27T15:16:52.590580949-06:00","level":"INFO","msg":"info rule not matched","rule":"connect-01800"}
{"time":"2025-02-27T15:16:52.590959583-06:00","level":"INFO","msg":"info rule not matched","rule":"connect-01900"}
{"time":"2025-02-27T15:16:52.591183463-06:00","level":"INFO","msg":"info rule not matched","rule":"connect-02000"}
{"time":"2025-02-27T15:16:52.591391975-06:00","level":"INFO","msg":"info rule not matched","rule":"connect-02100"}
{"time":"2025-02-27T15:16:52.591610869-06:00","level":"INFO","msg":"info rule not matched","rule":"connect-02200"}
{"time":"2025-02-27T15:16:52.591852087-06:00","level":"INFO","msg":"info rule not matched","rule":"connect-02300"}
{"time":"2025-02-27T15:16:52.59213057-06:00","level":"INFO","msg":"info rule not matched","rule":"connect-02400"}
{"time":"2025-02-27T15:16:52.592734153-06:00","level":"INFO","msg":"info rule not matched","rule":"connect-02500"}
{"time":"2025-02-27T15:16:52.592969171-06:00","level":"INFO","msg":"info rule not matched","rule":"connect-02600"}
{"time":"2025-02-27T15:16:52.59320557-06:00","level":"INFO","msg":"info rule not matched","rule":"connect-02700"}
{"time":"2025-02-27T15:16:52.593452278-06:00","level":"INFO","msg":"info rule not matched","rule":"connect-02800"}
{"time":"2025-02-27T15:16:52.593866071-06:00","level":"INFO","msg":"info rule not matched","rule":"connect-02900"}
{"time":"2025-02-27T15:16:52.594105228-06:00","level":"INFO","msg":"info rule not matched","rule":"database-01400"}
{"time":"2025-02-27T15:16:52.594321664-06:00","level":"INFO","msg":"info rule not matched","rule":"database-01500"}
{"time":"2025-02-27T15:16:52.59454913-06:00","level":"INFO","msg":"info rule not matched","rule":"database-01600"}
{"time":"2025-02-27T15:16:52.594758137-06:00","level":"INFO","msg":"info rule not matched","rule":"database-01700"}
{"time":"2025-02-27T15:16:52.594974111-06:00","level":"INFO","msg":"info rule not matched","rule":"database-01800"}
{"time":"2025-02-27T15:16:52.595330347-06:00","level":"INFO","msg":"info rule not matched","rule":"database-01805"}
{"time":"2025-02-27T15:16:52.595546791-06:00","level":"INFO","msg":"info rule not matched","rule":"database-01900"}
{"time":"2025-02-27T15:16:52.595925315-06:00","level":"INFO","msg":"info rule not matched","rule":"database-02000"}
{"time":"2025-02-27T15:16:52.597533844-06:00","level":"INFO","msg":"info rule not matched","rule":"database-02100"}
{"time":"2025-02-27T15:16:52.597767104-06:00","level":"INFO","msg":"info rule not matched","rule":"database-02200"}
{"time":"2025-02-27T15:16:52.59799451-06:00","level":"INFO","msg":"info rule not matched","rule":"database-02300"}
{"time":"2025-02-27T15:16:52.599084517-06:00","level":"INFO","msg":"info rule not matched","rule":"database-02400"}
{"time":"2025-02-27T15:16:52.599327243-06:00","level":"INFO","msg":"info rule not matched","rule":"database-02500"}
{"time":"2025-02-27T15:16:52.599553353-06:00","level":"INFO","msg":"info rule not matched","rule":"database-02600"}
{"time":"2025-02-27T15:16:52.59979052-06:00","level":"INFO","msg":"info rule not matched","rule":"database-02700"}
{"time":"2025-02-27T15:16:52.600022148-06:00","level":"INFO","msg":"info rule not matched","rule":"database-02800"}
{"time":"2025-02-27T15:16:52.600264332-06:00","level":"INFO","msg":"info rule not matched","rule":"database-02900"}
{"time":"2025-02-27T15:16:52.600312397-06:00","level":"DEBUG","msg":"running dependency analysis","provider":"java"}
{"time":"2025-02-27T15:16:52.600362173-06:00","level":"DEBUG","msg":"running dependency analysis","provider":"java"}
{"time":"2025-02-27T15:16:52.6004067-06:00","level":"DEBUG","msg":"running dependency analysis","provider":"java"}
{"time":"2025-02-27T15:16:52.600423089-06:00","level":"INFO","msg":"info rule not matched","rule":"database-03000"}
{"time":"2025-02-27T15:16:52.600636146-06:00","level":"INFO","msg":"info rule not matched","rule":"database-03100"}
{"time":"2025-02-27T15:16:52.602798841-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:52.603385496-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [Marker [on: /my-app, id: 1, type: org.eclipse.jdt.core.problem, attributes: [categoryId: 10, message: The project was not built due to \"release 21 is not found in the system\". Fix the problem, then try refreshing this project and building it since it may be inconsistent, severity: 2, sourceId: JDT], created: 2/27/25, 3:16 PM]] warnings: []"}
{"time":"2025-02-27T15:16:52.612803257-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<javax.ejb>, type<Schedule> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Schedule>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax.ejb>, type<Schedule>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: javax.ejb.schedule(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: javax.ejb.Schedule(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<javax.ejb>, type<ScheduleExpression> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ScheduleExpression>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax.ejb>, type<ScheduleExpression>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: javax.ejb.scheduleexpression(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: javax.ejb.ScheduleExpression(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<javax.ejb>, type<Schedules> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Schedules>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax.ejb>, type<Schedules>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: javax.ejb.schedules(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: javax.ejb.Schedules(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<javax.ejb>, type<TimedObject> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<TimedObject>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax.ejb>, type<TimedObject>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: javax.ejb.timedobject(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: javax.ejb.TimedObject(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<javax.ejb>, type<Timeout> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Timeout>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax.ejb>, type<Timeout>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: javax.ejb.timeout(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: javax.ejb.Timeout(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<javax.ejb>, type<Timer> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Timer>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax.ejb>, type<Timer>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: javax.ejb.timer(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: javax.ejb.Timer(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<javax.ejb>, type<TimerConfig> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<TimerConfig>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax.ejb>, type<TimerConfig>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: javax.ejb.timerconfig(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: javax.ejb.TimerConfig(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<javax.ejb>, type<TimerHandle> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<TimerHandle>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax.ejb>, type<TimerHandle>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: javax.ejb.timerhandle(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: javax.ejb.TimerHandle(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<javax.ejb>, type<TimerService> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<TimerService>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax.ejb>, type<TimerService>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: javax.ejb.timerservice(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: javax.ejb.TimerService(...), exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:52.687812566-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.ejb.(Schedule|ScheduleExpression|Schedules|TimedObject|Timeout|Timer|TimerConfig|TimerHandle|TimerService) location 0 matches0"}
{"time":"2025-02-27T15:16:52.687849128-06:00","level":"INFO","msg":"Symbols retrieved","provider":"java","symbols":0,"cap":"referenced","conditionInfo":{"Referenced":{"Pattern":"javax.ejb.(Schedule|ScheduleExpression|Schedules|TimedObject|Timeout|Timer|TimerConfig|TimerHandle|TimerService)","Location":"","annotated":{"pattern":""},"Filepaths":null}}}
{"time":"2025-02-27T15:16:52.688019478-06:00","level":"INFO","msg":"info rule not matched","rule":"ejb-01000"}
{"time":"2025-02-27T15:16:52.688876904-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-cache-libraries-01000"}
{"time":"2025-02-27T15:16:52.689450677-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-cache-libraries-02000"}
{"time":"2025-02-27T15:16:52.689903509-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-cache-libraries-03000"}
{"time":"2025-02-27T15:16:52.690349241-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-cache-libraries-04000"}
{"time":"2025-02-27T15:16:52.69082134-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-cache-libraries-05000"}
{"time":"2025-02-27T15:16:52.69128099-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-cache-libraries-06000"}
{"time":"2025-02-27T15:16:52.691718983-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-cache-libraries-07000"}
{"time":"2025-02-27T15:16:52.692129631-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-cache-libraries-08000"}
{"time":"2025-02-27T15:16:52.692599487-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-cache-libraries-09000"}
{"time":"2025-02-27T15:16:52.69305114-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-cache-libraries-10000"}
{"time":"2025-02-27T15:16:52.693496739-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-cache-libraries-11000"}
{"time":"2025-02-27T15:16:52.693833204-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-cache-libraries-12000"}
{"time":"2025-02-27T15:16:52.694091617-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-cache-libraries-13000"}
{"time":"2025-02-27T15:16:52.694332866-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-cache-libraries-14000"}
{"time":"2025-02-27T15:16:52.694372251-06:00","level":"DEBUG","msg":"running dependency analysis","provider":"java"}
{"time":"2025-02-27T15:16:52.694410635-06:00","level":"DEBUG","msg":"running dependency analysis","provider":"java"}
{"time":"2025-02-27T15:16:52.694426815-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-cache-libraries-15000"}
{"time":"2025-02-27T15:16:52.694632328-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-cache-libraries-16000"}
{"time":"2025-02-27T15:16:52.694855278-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-01000"}
{"time":"2025-02-27T15:16:52.695071907-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-01010"}
{"time":"2025-02-27T15:16:52.695349094-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-01100"}
{"time":"2025-02-27T15:16:52.695592667-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-01200"}
{"time":"2025-02-27T15:16:52.695830007-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-01300"}
{"time":"2025-02-27T15:16:52.696067032-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-01400"}
{"time":"2025-02-27T15:16:52.696301668-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-01500"}
{"time":"2025-02-27T15:16:52.696513204-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-01600"}
{"time":"2025-02-27T15:16:52.696741183-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-01700"}
{"time":"2025-02-27T15:16:52.696964619-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-02000"}
{"time":"2025-02-27T15:16:52.697200402-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-02200"}
{"time":"2025-02-27T15:16:52.697451275-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-02300"}
{"time":"2025-02-27T15:16:52.697677326-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-02400"}
{"time":"2025-02-27T15:16:52.697907066-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-03000"}
{"time":"2025-02-27T15:16:52.698142022-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-03100"}
{"time":"2025-02-27T15:16:52.698365045-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-03200"}
{"time":"2025-02-27T15:16:52.698597577-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-03300"}
{"time":"2025-02-27T15:16:52.698842313-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-03400"}
{"time":"2025-02-27T15:16:52.699069864-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-04700"}
{"time":"2025-02-27T15:16:52.69937068-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-05000"}
{"time":"2025-02-27T15:16:52.699617155-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-05100"}
{"time":"2025-02-27T15:16:52.700067437-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-05300"}
{"time":"2025-02-27T15:16:52.700378653-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-05400"}
{"time":"2025-02-27T15:16:52.700633188-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-05500"}
{"time":"2025-02-27T15:16:52.700891595-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-05600"}
{"time":"2025-02-27T15:16:52.701223843-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-05700"}
{"time":"2025-02-27T15:16:52.701472103-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-05800"}
{"time":"2025-02-27T15:16:52.701690524-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-05900"}
{"time":"2025-02-27T15:16:52.701918222-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-06000"}
{"time":"2025-02-27T15:16:52.702151373-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-06100"}
{"time":"2025-02-27T15:16:52.702358756-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-06200"}
{"time":"2025-02-27T15:16:52.702568716-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-06300"}
{"time":"2025-02-27T15:16:52.702777248-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-06400"}
{"time":"2025-02-27T15:16:52.702992113-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-06500"}
{"time":"2025-02-27T15:16:52.7032307-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-06600"}
{"time":"2025-02-27T15:16:52.703465105-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-06700"}
{"time":"2025-02-27T15:16:52.703679079-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-06800"}
{"time":"2025-02-27T15:16:52.703907067-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-06900"}
{"time":"2025-02-27T15:16:52.704159653-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-07000"}
{"time":"2025-02-27T15:16:52.704378183-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-07100"}
{"time":"2025-02-27T15:16:52.704601893-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-07200"}
{"time":"2025-02-27T15:16:52.704833024-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-07300"}
{"time":"2025-02-27T15:16:52.705059277-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-07400"}
{"time":"2025-02-27T15:16:52.705286371-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-07500"}
{"time":"2025-02-27T15:16:52.705520799-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-07600"}
{"time":"2025-02-27T15:16:52.705732981-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-07700"}
{"time":"2025-02-27T15:16:52.705945796-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-07800"}
{"time":"2025-02-27T15:16:52.706157266-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-07900"}
{"time":"2025-02-27T15:16:52.706372836-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-08000"}
{"time":"2025-02-27T15:16:52.706593076-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-08100"}
{"time":"2025-02-27T15:16:52.706630289-06:00","level":"DEBUG","msg":"running dependency analysis","provider":"java"}
{"time":"2025-02-27T15:16:52.706667356-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-08200"}
{"time":"2025-02-27T15:16:52.706672089-06:00","level":"DEBUG","msg":"running dependency analysis","provider":"java"}
{"time":"2025-02-27T15:16:52.706692252-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-08300"}
{"time":"2025-02-27T15:16:52.706698241-06:00","level":"DEBUG","msg":"running dependency analysis","provider":"java"}
{"time":"2025-02-27T15:16:52.706711992-06:00","level":"DEBUG","msg":"running dependency analysis","provider":"java"}
{"time":"2025-02-27T15:16:52.706726106-06:00","level":"DEBUG","msg":"running dependency analysis","provider":"java"}
{"time":"2025-02-27T15:16:52.70673921-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-08400"}
{"time":"2025-02-27T15:16:52.706742794-06:00","level":"DEBUG","msg":"running dependency analysis","provider":"java"}
{"time":"2025-02-27T15:16:52.706755844-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-08500"}
{"time":"2025-02-27T15:16:52.71044208-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-08600"}
{"time":"2025-02-27T15:16:52.712495224-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:52.712870304-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [Marker [on: /my-app, id: 1, type: org.eclipse.jdt.core.problem, attributes: [categoryId: 10, message: The project was not built due to \"release 21 is not found in the system\". Fix the problem, then try refreshing this project and building it since it may be inconsistent, severity: 2, sourceId: JDT], created: 2/27/25, 3:16 PM]] warnings: []"}
{"time":"2025-02-27T15:16:52.713708799-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.springframework.scheduling.annotation>, type<Scheduled> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Scheduled>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.springframework.scheduling.annotation>, type<Scheduled>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:52.714252984-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.springframework.scheduling.annotation.Scheduled location 4 matches0"}
{"time":"2025-02-27T15:16:52.714356593-06:00","level":"INFO","msg":"Symbols retrieved","provider":"java","symbols":0,"cap":"referenced","conditionInfo":{"Referenced":{"Pattern":"org.springframework.scheduling.annotation.Scheduled","Location":"ANNOTATION","annotated":{"pattern":""},"Filepaths":null}}}
{"time":"2025-02-27T15:16:52.714407205-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-08700"}
{"time":"2025-02-27T15:16:52.714426631-06:00","level":"DEBUG","msg":"running dependency analysis","provider":"java"}
{"time":"2025-02-27T15:16:52.714468243-06:00","level":"DEBUG","msg":"running dependency analysis","provider":"java"}
{"time":"2025-02-27T15:16:52.714486942-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-08800"}
{"time":"2025-02-27T15:16:52.714792363-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-08900"}
{"time":"2025-02-27T15:16:52.715055294-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-09100"}
{"time":"2025-02-27T15:16:52.715283783-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-09000"}
{"time":"2025-02-27T15:16:52.715517963-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-09300"}
{"time":"2025-02-27T15:16:52.715750314-06:00","level":"INFO","msg":"info rule not matched","rule":"integration-00001"}
{"time":"2025-02-27T15:16:52.71597667-06:00","level":"INFO","msg":"info rule not matched","rule":"integration-00002"}
{"time":"2025-02-27T15:16:52.716204006-06:00","level":"INFO","msg":"info rule not matched","rule":"integration-00003"}
{"time":"2025-02-27T15:16:52.716433053-06:00","level":"INFO","msg":"info rule not matched","rule":"integration-00004"}
{"time":"2025-02-27T15:16:52.716661369-06:00","level":"INFO","msg":"info rule not matched","rule":"integration-00005"}
{"time":"2025-02-27T15:16:52.716891292-06:00","level":"INFO","msg":"info rule not matched","rule":"integration-00006"}
{"time":"2025-02-27T15:16:52.717131276-06:00","level":"INFO","msg":"info rule not matched","rule":"integration-00007"}
{"time":"2025-02-27T15:16:52.717374971-06:00","level":"INFO","msg":"info rule not matched","rule":"integration-00008"}
{"time":"2025-02-27T15:16:52.717626069-06:00","level":"INFO","msg":"info rule not matched","rule":"integration-00009"}
{"time":"2025-02-27T15:16:52.717882495-06:00","level":"INFO","msg":"info rule not matched","rule":"integration-00010"}
{"time":"2025-02-27T15:16:52.718170439-06:00","level":"INFO","msg":"info rule not matched","rule":"integration-00011"}
{"time":"2025-02-27T15:16:52.718438341-06:00","level":"INFO","msg":"info rule not matched","rule":"integration-00012"}
{"time":"2025-02-27T15:16:52.71869859-06:00","level":"INFO","msg":"info rule not matched","rule":"integration-00013"}
{"time":"2025-02-27T15:16:52.718945414-06:00","level":"INFO","msg":"info rule not matched","rule":"integration-00014"}
{"time":"2025-02-27T15:16:52.719173621-06:00","level":"INFO","msg":"info rule not matched","rule":"integration-00015"}
{"time":"2025-02-27T15:16:52.719778867-06:00","level":"INFO","msg":"info rule not matched","rule":"integration-00016"}
{"time":"2025-02-27T15:16:52.721506294-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:52.721847103-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [Marker [on: /my-app, id: 1, type: org.eclipse.jdt.core.problem, attributes: [categoryId: 10, message: The project was not built due to \"release 21 is not found in the system\". Fix the problem, then try refreshing this project and building it since it may be inconsistent, severity: 2, sourceId: JDT], created: 2/27/25, 3:16 PM]] warnings: []"}
{"time":"2025-02-27T15:16:52.722485291-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.springframework.integration.dsl>, type<IntegrationFlow> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<IntegrationFlow>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.springframework.integration.dsl>, type<IntegrationFlow>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:52.722929157-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.springframework.integration.dsl.IntegrationFlow location 8 matches0"}
{"time":"2025-02-27T15:16:52.723110459-06:00","level":"INFO","msg":"Symbols retrieved","provider":"java","symbols":0,"cap":"referenced","conditionInfo":{"Referenced":{"Pattern":"org.springframework.integration.dsl.IntegrationFlow","Location":"IMPORT","annotated":{"pattern":""},"Filepaths":null}}}
{"time":"2025-02-27T15:16:52.723157374-06:00","level":"INFO","msg":"info rule not matched","rule":"integration-00017"}
{"time":"2025-02-27T15:16:52.723448638-06:00","level":"INFO","msg":"info rule not matched","rule":"database-01400"}
{"time":"2025-02-27T15:16:52.724300363-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:52.72466749-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [Marker [on: /my-app, id: 1, type: org.eclipse.jdt.core.problem, attributes: [categoryId: 10, message: The project was not built due to \"release 21 is not found in the system\". Fix the problem, then try refreshing this project and building it since it may be inconsistent, severity: 2, sourceId: JDT], created: 2/27/25, 3:16 PM]] warnings: []"}
{"time":"2025-02-27T15:16:52.728270739-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<java.lang>, type<Thread> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Thread>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<java.lang>, type<Thread>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: java.lang.thread(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: java.lang.Thread(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<java.lang>, type<ThreadDeath> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ThreadDeath>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<java.lang>, type<ThreadDeath>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: java.lang.threaddeath(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: java.lang.ThreadDeath(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<java.lang>, type<ThreadGroup> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ThreadGroup>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<java.lang>, type<ThreadGroup>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: java.lang.threadgroup(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: java.lang.ThreadGroup(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<java.lang>, type<ThreadLocal> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ThreadLocal>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<java.lang>, type<ThreadLocal>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: java.lang.threadlocal(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: java.lang.ThreadLocal(...), exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:52.750218522-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for java.lang.(Thread|ThreadDeath|ThreadGroup|ThreadLocal) location 0 matches0"}
{"time":"2025-02-27T15:16:52.750695666-06:00","level":"INFO","msg":"Symbols retrieved","provider":"java","symbols":0,"cap":"referenced","conditionInfo":{"Referenced":{"Pattern":"java.lang.(Thread|ThreadDeath|ThreadGroup|ThreadLocal)","Location":"","annotated":{"pattern":""},"Filepaths":null}}}
{"time":"2025-02-27T15:16:52.75078655-06:00","level":"INFO","msg":"info rule not matched","rule":"javase-01000"}
{"time":"2025-02-27T15:16:52.752556738-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:52.753005861-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [Marker [on: /my-app, id: 1, type: org.eclipse.jdt.core.problem, attributes: [categoryId: 10, message: The project was not built due to \"release 21 is not found in the system\". Fix the problem, then try refreshing this project and building it since it may be inconsistent, severity: 2, sourceId: JDT], created: 2/27/25, 3:16 PM]] warnings: []"}
{"time":"2025-02-27T15:16:52.755712197-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<java.util.concurrent>, type<ExecutorService> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ExecutorService>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<java.util.concurrent>, type<ExecutorService>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: java.util.concurrent.executorservice(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: java.util.concurrent.ExecutorService(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<java.util.concurrent>, type<Executors> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Executors>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<java.util.concurrent>, type<Executors>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: java.util.concurrent.executors(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: java.util.concurrent.Executors(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<java.util.concurrent>, type<Executor> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Executor>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<java.util.concurrent>, type<Executor>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: java.util.concurrent.executor(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: java.util.concurrent.Executor(...), exact match, case sensitive, generic full match, fine grain: none | TypeDeclarationPattern: qualification<java.util.concurrent>, type<ScheduledExecutorService> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ScheduledExecutorService>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<java.util.concurrent>, type<ScheduledExecutorService>, exact match, case sensitive, generic full match, fine grain: none | MethodReferencePattern: java.util.concurrent.scheduledexecutorservice(...), exact match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | ConstructorCombinedPattern: java.util.concurrent.ScheduledExecutorService(...), exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:52.808000265-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for java.util.concurrent.(ExecutorService|Executors|Executor|ScheduledExecutorService) location 0 matches0"}
{"time":"2025-02-27T15:16:52.808146479-06:00","level":"INFO","msg":"Symbols retrieved","provider":"java","symbols":0,"cap":"referenced","conditionInfo":{"Referenced":{"Pattern":"java.util.concurrent.(ExecutorService|Executors|Executor|ScheduledExecutorService)","Location":"","annotated":{"pattern":""},"Filepaths":null}}}
{"time":"2025-02-27T15:16:52.808214389-06:00","level":"INFO","msg":"info rule not matched","rule":"javase-01100"}
{"time":"2025-02-27T15:16:52.808678743-06:00","level":"INFO","msg":"info rule not matched","rule":"jta-00020"}
{"time":"2025-02-27T15:16:52.808955961-06:00","level":"INFO","msg":"info rule not matched","rule":"jta-00030"}
{"time":"2025-02-27T15:16:52.809248349-06:00","level":"INFO","msg":"info rule not matched","rule":"jta-00040"}
{"time":"2025-02-27T15:16:52.809487716-06:00","level":"INFO","msg":"info rule not matched","rule":"jta-00050"}
{"time":"2025-02-27T15:16:52.809745685-06:00","level":"INFO","msg":"info rule not matched","rule":"jta-00060"}
{"time":"2025-02-27T15:16:52.809987616-06:00","level":"INFO","msg":"info rule not matched","rule":"jta-00070"}
{"time":"2025-02-27T15:16:52.810227714-06:00","level":"INFO","msg":"info rule not matched","rule":"jta-00080"}
{"time":"2025-02-27T15:16:52.810463526-06:00","level":"INFO","msg":"info rule not matched","rule":"jta-00090"}
{"time":"2025-02-27T15:16:52.810705993-06:00","level":"INFO","msg":"info rule not matched","rule":"jta-00100"}
{"time":"2025-02-27T15:16:52.810936041-06:00","level":"INFO","msg":"info rule not matched","rule":"jta-00110"}
{"time":"2025-02-27T15:16:52.81119963-06:00","level":"INFO","msg":"info rule not matched","rule":"jta-00120"}
{"time":"2025-02-27T15:16:52.811481548-06:00","level":"INFO","msg":"info rule not matched","rule":"jta-00130"}
{"time":"2025-02-27T15:16:52.811754306-06:00","level":"INFO","msg":"info rule not matched","rule":"jta-00140"}
{"time":"2025-02-27T15:16:52.811992293-06:00","level":"INFO","msg":"info rule not matched","rule":"jta-00150"}
{"time":"2025-02-27T15:16:52.812440425-06:00","level":"INFO","msg":"info rule not matched","rule":"jta-00160"}
{"time":"2025-02-27T15:16:52.814128648-06:00","level":"INFO","msg":"info rule not matched","rule":"jta-00170"}
{"time":"2025-02-27T15:16:52.814793646-06:00","level":"INFO","msg":"info rule not matched","rule":"jta-00180"}
{"time":"2025-02-27T15:16:52.815454828-06:00","level":"INFO","msg":"info rule not matched","rule":"jta-00190"}
{"time":"2025-02-27T15:16:52.816124401-06:00","level":"INFO","msg":"info rule not matched","rule":"jta-00200"}
{"time":"2025-02-27T15:16:52.816573905-06:00","level":"INFO","msg":"info rule not matched","rule":"jta-00210"}
{"time":"2025-02-27T15:16:52.816860284-06:00","level":"INFO","msg":"info rule not matched","rule":"logging-usage-00010"}
{"time":"2025-02-27T15:16:52.817142316-06:00","level":"INFO","msg":"info rule not matched","rule":"logging-usage-00020"}
{"time":"2025-02-27T15:16:52.817427241-06:00","level":"INFO","msg":"info rule not matched","rule":"logging-usage-00030"}
{"time":"2025-02-27T15:16:52.817716627-06:00","level":"INFO","msg":"info rule not matched","rule":"logging-usage-00040"}
{"time":"2025-02-27T15:16:52.817988629-06:00","level":"INFO","msg":"info rule not matched","rule":"logging-usage-00050"}
{"time":"2025-02-27T15:16:52.8182939-06:00","level":"INFO","msg":"info rule not matched","rule":"logging-usage-00080"}
{"time":"2025-02-27T15:16:52.818581699-06:00","level":"INFO","msg":"info rule not matched","rule":"logging-usage-00090"}
{"time":"2025-02-27T15:16:52.819038966-06:00","level":"INFO","msg":"info rule not matched","rule":"logging-usage-00100"}
{"time":"2025-02-27T15:16:52.819356929-06:00","level":"INFO","msg":"info rule not matched","rule":"logging-usage-00110"}
{"time":"2025-02-27T15:16:52.819643575-06:00","level":"INFO","msg":"info rule not matched","rule":"logging-usage-00120"}
{"time":"2025-02-27T15:16:52.819910248-06:00","level":"INFO","msg":"info rule not matched","rule":"logging-usage-00130"}
{"time":"2025-02-27T15:16:52.820159417-06:00","level":"INFO","msg":"info rule not matched","rule":"logging-usage-00140"}
{"time":"2025-02-27T15:16:52.820438044-06:00","level":"INFO","msg":"info rule not matched","rule":"logging-usage-00150"}
{"time":"2025-02-27T15:16:52.820672506-06:00","level":"INFO","msg":"info rule not matched","rule":"logging-usage-00160"}
{"time":"2025-02-27T15:16:52.820904096-06:00","level":"INFO","msg":"info rule not matched","rule":"logging-usage-00170"}
{"time":"2025-02-27T15:16:52.821182807-06:00","level":"INFO","msg":"info rule not matched","rule":"logging-usage-00180"}
{"time":"2025-02-27T15:16:52.821427491-06:00","level":"INFO","msg":"info rule not matched","rule":"logging-usage-00190"}
{"time":"2025-02-27T15:16:52.821678633-06:00","level":"INFO","msg":"info rule not matched","rule":"logging-usage-00200"}
{"time":"2025-02-27T15:16:52.821922967-06:00","level":"INFO","msg":"info rule not matched","rule":"logging-usage-00210"}
{"time":"2025-02-27T15:16:52.822180619-06:00","level":"INFO","msg":"info rule not matched","rule":"logging-usage-00220"}
{"time":"2025-02-27T15:16:52.822441723-06:00","level":"INFO","msg":"info rule not matched","rule":"logging-usage-00230"}
{"time":"2025-02-27T15:16:52.822724862-06:00","level":"INFO","msg":"info rule not matched","rule":"logging-usage-00240"}
{"time":"2025-02-27T15:16:52.82297753-06:00","level":"INFO","msg":"info rule not matched","rule":"logging-usage-00250"}
{"time":"2025-02-27T15:16:52.823221818-06:00","level":"INFO","msg":"info rule not matched","rule":"logging-usage-00260"}
{"time":"2025-02-27T15:16:52.823455886-06:00","level":"INFO","msg":"info rule not matched","rule":"logging-usage-00270"}
{"time":"2025-02-27T15:16:52.823694712-06:00","level":"INFO","msg":"info rule not matched","rule":"logging-usage-00280"}
{"time":"2025-02-27T15:16:52.823935245-06:00","level":"INFO","msg":"info rule not matched","rule":"logging-usage-00290"}
{"time":"2025-02-27T15:16:52.824180831-06:00","level":"INFO","msg":"info rule not matched","rule":"mvc-01000"}
{"time":"2025-02-27T15:16:52.824449464-06:00","level":"INFO","msg":"info rule not matched","rule":"mvc-01100"}
{"time":"2025-02-27T15:16:52.824775214-06:00","level":"INFO","msg":"info rule not matched","rule":"mvc-01200"}
{"time":"2025-02-27T15:16:52.826547256-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:52.827038795-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [Marker [on: /my-app, id: 1, type: org.eclipse.jdt.core.problem, attributes: [categoryId: 10, message: The project was not built due to \"release 21 is not found in the system\". Fix the problem, then try refreshing this project and building it since it may be inconsistent, severity: 2, sourceId: JDT], created: 2/27/25, 3:16 PM]] warnings: []"}
{"time":"2025-02-27T15:16:52.827680761-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.springframework.web.servlet.mvc>, type<Controller> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Controller>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.springframework.web.servlet.mvc>, type<Controller>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:52.828282064-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.springframework.web.servlet.mvc.Controller location 4 matches0"}
{"time":"2025-02-27T15:16:52.828452709-06:00","level":"INFO","msg":"Symbols retrieved","provider":"java","symbols":0,"cap":"referenced","conditionInfo":{"Referenced":{"Pattern":"org.springframework.web.servlet.mvc.Controller","Location":"ANNOTATION","annotated":{"pattern":""},"Filepaths":null}}}
{"time":"2025-02-27T15:16:52.828515271-06:00","level":"INFO","msg":"info rule not matched","rule":"mvc-01210"}
{"time":"2025-02-27T15:16:52.828533285-06:00","level":"DEBUG","msg":"running dependency analysis","provider":"java"}
{"time":"2025-02-27T15:16:52.828576787-06:00","level":"DEBUG","msg":"running dependency analysis","provider":"java"}
{"time":"2025-02-27T15:16:52.828594829-06:00","level":"DEBUG","msg":"running dependency analysis","provider":"java"}
{"time":"2025-02-27T15:16:52.828610436-06:00","level":"DEBUG","msg":"running dependency analysis","provider":"java"}
{"time":"2025-02-27T15:16:52.828627272-06:00","level":"INFO","msg":"info rule not matched","rule":"mvc-01220"}
{"time":"2025-02-27T15:16:52.828977381-06:00","level":"INFO","msg":"info rule not matched","rule":"mvc-01300"}
{"time":"2025-02-27T15:16:52.829305229-06:00","level":"INFO","msg":"info rule not matched","rule":"mvc-01400"}
{"time":"2025-02-27T15:16:52.82957229-06:00","level":"INFO","msg":"info rule not matched","rule":"mvc-01500"}
{"time":"2025-02-27T15:16:52.829836218-06:00","level":"INFO","msg":"info rule not matched","rule":"mvc-01600"}
{"time":"2025-02-27T15:16:52.83013718-06:00","level":"INFO","msg":"info rule not matched","rule":"mvc-01700"}
{"time":"2025-02-27T15:16:52.830422231-06:00","level":"INFO","msg":"info rule not matched","rule":"mvc-01800"}
{"time":"2025-02-27T15:16:52.830790127-06:00","level":"INFO","msg":"info rule not matched","rule":"mvc-01900"}
{"time":"2025-02-27T15:16:52.831089755-06:00","level":"INFO","msg":"info rule not matched","rule":"mvc-02000"}
{"time":"2025-02-27T15:16:52.831526078-06:00","level":"INFO","msg":"info rule not matched","rule":"mvc-02100"}
{"time":"2025-02-27T15:16:52.831831822-06:00","level":"INFO","msg":"info rule not matched","rule":"mvc-02200"}
{"time":"2025-02-27T15:16:52.832292557-06:00","level":"INFO","msg":"info rule not matched","rule":"mvc-02300"}
{"time":"2025-02-27T15:16:52.832543128-06:00","level":"INFO","msg":"info rule not matched","rule":"mvc-02400"}
{"time":"2025-02-27T15:16:52.832805824-06:00","level":"INFO","msg":"info rule not matched","rule":"mvc-02500"}
{"time":"2025-02-27T15:16:52.833132351-06:00","level":"INFO","msg":"info rule not matched","rule":"mvc-02600"}
{"time":"2025-02-27T15:16:52.833394702-06:00","level":"INFO","msg":"info rule not matched","rule":"mvc-02700"}
{"time":"2025-02-27T15:16:52.833663125-06:00","level":"INFO","msg":"info rule not matched","rule":"mvc-02800"}
{"time":"2025-02-27T15:16:52.833990956-06:00","level":"INFO","msg":"info rule not matched","rule":"mvc-02900"}
{"time":"2025-02-27T15:16:52.83443262-06:00","level":"INFO","msg":"info rule not matched","rule":"mvc-03000"}
{"time":"2025-02-27T15:16:52.834781877-06:00","level":"INFO","msg":"info rule not matched","rule":"mvc-03100"}
{"time":"2025-02-27T15:16:52.835126939-06:00","level":"INFO","msg":"info rule not matched","rule":"mvc-03200"}
{"time":"2025-02-27T15:16:52.835396605-06:00","level":"INFO","msg":"info rule not matched","rule":"mvc-03300"}
{"time":"2025-02-27T15:16:52.835803308-06:00","level":"INFO","msg":"info rule not matched","rule":"mvc-03400"}
{"time":"2025-02-27T15:16:52.836099422-06:00","level":"INFO","msg":"info rule not matched","rule":"mvc-03500"}
{"time":"2025-02-27T15:16:52.836366933-06:00","level":"INFO","msg":"info rule not matched","rule":"mvc-03600"}
{"time":"2025-02-27T15:16:52.836633096-06:00","level":"INFO","msg":"info rule not matched","rule":"mvc-03700"}
{"time":"2025-02-27T15:16:52.836893279-06:00","level":"INFO","msg":"info rule not matched","rule":"mvc-03800"}
{"time":"2025-02-27T15:16:52.83712324-06:00","level":"INFO","msg":"info rule not matched","rule":"mvc-03900"}
{"time":"2025-02-27T15:16:52.837499122-06:00","level":"INFO","msg":"info rule not matched","rule":"mvc-04000"}
{"time":"2025-02-27T15:16:52.837760993-06:00","level":"INFO","msg":"info rule not matched","rule":"mvc-04100"}
{"time":"2025-02-27T15:16:52.837997644-06:00","level":"INFO","msg":"info rule not matched","rule":"mvc-04200"}
{"time":"2025-02-27T15:16:52.83824698-06:00","level":"INFO","msg":"info rule not matched","rule":"mvc-04300"}
{"time":"2025-02-27T15:16:52.83849575-06:00","level":"INFO","msg":"info rule not matched","rule":"mvc-04400"}
{"time":"2025-02-27T15:16:52.838738234-06:00","level":"INFO","msg":"info rule not matched","rule":"mvc-04500"}
{"time":"2025-02-27T15:16:52.838977233-06:00","level":"INFO","msg":"info rule not matched","rule":"mvc-04600"}
{"time":"2025-02-27T15:16:52.839240668-06:00","level":"INFO","msg":"info rule not matched","rule":"mvc-04700"}
{"time":"2025-02-27T15:16:52.839487288-06:00","level":"INFO","msg":"info rule not matched","rule":"mvc-04800"}
{"time":"2025-02-27T15:16:52.83972041-06:00","level":"INFO","msg":"info rule not matched","rule":"mvc-04900"}
{"time":"2025-02-27T15:16:52.839951425-06:00","level":"INFO","msg":"info rule not matched","rule":"mvc-05000"}
{"time":"2025-02-27T15:16:52.840220522-06:00","level":"INFO","msg":"info rule not matched","rule":"mvc-05100"}
{"time":"2025-02-27T15:16:52.840454574-06:00","level":"INFO","msg":"info rule not matched","rule":"mvc-05200"}
{"time":"2025-02-27T15:16:52.84079248-06:00","level":"INFO","msg":"info rule not matched","rule":"mvc-05300"}
{"time":"2025-02-27T15:16:52.841041118-06:00","level":"INFO","msg":"info rule not matched","rule":"mvc-05400"}
{"time":"2025-02-27T15:16:52.841286121-06:00","level":"INFO","msg":"info rule not matched","rule":"mvc-05500"}
{"time":"2025-02-27T15:16:52.841617464-06:00","level":"INFO","msg":"info rule not matched","rule":"mvc-05600"}
{"time":"2025-02-27T15:16:52.841903549-06:00","level":"INFO","msg":"info rule not matched","rule":"mvc-05700"}
{"time":"2025-02-27T15:16:52.842177709-06:00","level":"INFO","msg":"info rule not matched","rule":"mvc-05800"}
{"time":"2025-02-27T15:16:52.842418202-06:00","level":"INFO","msg":"info rule not matched","rule":"mvc-05900"}
{"time":"2025-02-27T15:16:52.842710563-06:00","level":"INFO","msg":"info rule not matched","rule":"mvc-06000"}
{"time":"2025-02-27T15:16:52.842758375-06:00","level":"DEBUG","msg":"running dependency analysis","provider":"java"}
{"time":"2025-02-27T15:16:52.842801245-06:00","level":"DEBUG","msg":"running dependency analysis","provider":"java"}
{"time":"2025-02-27T15:16:52.842818677-06:00","level":"DEBUG","msg":"running dependency analysis","provider":"java"}
{"time":"2025-02-27T15:16:52.842836933-06:00","level":"DEBUG","msg":"running dependency analysis","provider":"java"}
{"time":"2025-02-27T15:16:52.842854562-06:00","level":"INFO","msg":"info rule not matched","rule":"observability-0100"}
{"time":"2025-02-27T15:16:52.844733762-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:52.845250588-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [Marker [on: /my-app, id: 1, type: org.eclipse.jdt.core.problem, attributes: [categoryId: 10, message: The project was not built due to \"release 21 is not found in the system\". Fix the problem, then try refreshing this project and building it since it may be inconsistent, severity: 2, sourceId: JDT], created: 2/27/25, 3:16 PM]] warnings: []"}
{"time":"2025-02-27T15:16:52.84577777-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<org.springframework>, type<jmx*> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<jmx*>, pattern match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<org.springframework>, type<jmx*>, pattern match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:52.846322177-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.springframework.jmx* location 4 matches0"}
{"time":"2025-02-27T15:16:52.846377534-06:00","level":"INFO","msg":"Symbols retrieved","provider":"java","symbols":0,"cap":"referenced","conditionInfo":{"Referenced":{"Pattern":"org.springframework.jmx*","Location":"ANNOTATION","annotated":{"pattern":""},"Filepaths":null}}}
{"time":"2025-02-27T15:16:52.847039621-06:00","level":"INFO","msg":"info rule not matched","rule":"observability-0200"}
{"time":"2025-02-27T15:16:52.847358278-06:00","level":"INFO","msg":"info rule not matched","rule":"security-01100"}
{"time":"2025-02-27T15:16:52.847603973-06:00","level":"INFO","msg":"info rule not matched","rule":"security-01200"}
{"time":"2025-02-27T15:16:52.847859824-06:00","level":"INFO","msg":"info rule not matched","rule":"security-01300"}
{"time":"2025-02-27T15:16:52.848119782-06:00","level":"INFO","msg":"info rule not matched","rule":"security-01400"}
{"time":"2025-02-27T15:16:52.848373202-06:00","level":"INFO","msg":"info rule not matched","rule":"security-01500"}
{"time":"2025-02-27T15:16:52.848651417-06:00","level":"INFO","msg":"info rule not matched","rule":"security-01600"}
{"time":"2025-02-27T15:16:52.848885591-06:00","level":"INFO","msg":"info rule not matched","rule":"security-01700"}
{"time":"2025-02-27T15:16:52.849113024-06:00","level":"INFO","msg":"info rule not matched","rule":"security-01800"}
{"time":"2025-02-27T15:16:52.849384879-06:00","level":"INFO","msg":"info rule not matched","rule":"security-01900"}
{"time":"2025-02-27T15:16:52.850660788-06:00","level":"INFO","msg":"info rule not matched","rule":"security-02000"}
{"time":"2025-02-27T15:16:52.851010488-06:00","level":"INFO","msg":"info rule not matched","rule":"security-02100"}
{"time":"2025-02-27T15:16:52.851248971-06:00","level":"INFO","msg":"info rule not matched","rule":"security-02200"}
{"time":"2025-02-27T15:16:52.851515816-06:00","level":"INFO","msg":"info rule not matched","rule":"security-02300"}
{"time":"2025-02-27T15:16:52.851746145-06:00","level":"INFO","msg":"info rule not matched","rule":"security-02400"}
{"time":"2025-02-27T15:16:52.851959923-06:00","level":"INFO","msg":"info rule not matched","rule":"security-02500"}
{"time":"2025-02-27T15:16:52.852227877-06:00","level":"INFO","msg":"info rule not matched","rule":"security-02600"}
{"time":"2025-02-27T15:16:52.852458602-06:00","level":"INFO","msg":"info rule not matched","rule":"security-02700"}
{"time":"2025-02-27T15:16:52.852691764-06:00","level":"INFO","msg":"info rule not matched","rule":"security-02800"}
{"time":"2025-02-27T15:16:52.852926148-06:00","level":"INFO","msg":"info rule not matched","rule":"security-02900"}
{"time":"2025-02-27T15:16:52.853151919-06:00","level":"INFO","msg":"info rule not matched","rule":"security-03000"}
{"time":"2025-02-27T15:16:52.853378274-06:00","level":"INFO","msg":"info rule not matched","rule":"security-03100"}
{"time":"2025-02-27T15:16:52.853613345-06:00","level":"INFO","msg":"info rule not matched","rule":"security-03200"}
{"time":"2025-02-27T15:16:52.853840255-06:00","level":"INFO","msg":"info rule not matched","rule":"security-03300"}
{"time":"2025-02-27T15:16:52.854074621-06:00","level":"INFO","msg":"info rule not matched","rule":"security-03400"}
{"time":"2025-02-27T15:16:52.854312137-06:00","level":"INFO","msg":"info rule not matched","rule":"security-03500"}
{"time":"2025-02-27T15:16:52.85436765-06:00","level":"DEBUG","msg":"running dependency analysis","provider":"java"}
{"time":"2025-02-27T15:16:52.854414929-06:00","level":"DEBUG","msg":"running dependency analysis","provider":"java"}
{"time":"2025-02-27T15:16:52.854430659-06:00","level":"DEBUG","msg":"running dependency analysis","provider":"java"}
{"time":"2025-02-27T15:16:52.854447343-06:00","level":"INFO","msg":"info rule not matched","rule":"security-03600"}
{"time":"2025-02-27T15:16:52.85452333-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-embedded-framework-01000"}
{"time":"2025-02-27T15:16:52.854613247-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-embedded-framework-01010"}
{"time":"2025-02-27T15:16:52.854700685-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-embedded-framework-01100"}
{"time":"2025-02-27T15:16:52.854791757-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-embedded-framework-01200"}
{"time":"2025-02-27T15:16:52.854880252-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-embedded-framework-01300"}
{"time":"2025-02-27T15:16:52.854969277-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-embedded-framework-01400"}
{"time":"2025-02-27T15:16:52.855052551-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-embedded-framework-01500"}
{"time":"2025-02-27T15:16:52.855136914-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-embedded-framework-01600"}
{"time":"2025-02-27T15:16:52.855226465-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-embedded-framework-01700"}
{"time":"2025-02-27T15:16:52.855310928-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-embedded-framework-02000"}
{"time":"2025-02-27T15:16:52.855411733-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-embedded-framework-02100"}
{"time":"2025-02-27T15:16:52.855495555-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-embedded-framework-02200"}
{"time":"2025-02-27T15:16:52.855580862-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-embedded-framework-02300"}
{"time":"2025-02-27T15:16:52.855667448-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-embedded-framework-02400"}
{"time":"2025-02-27T15:16:52.855751833-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-embedded-framework-02700"}
{"time":"2025-02-27T15:16:52.855834962-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-embedded-framework-02800"}
{"time":"2025-02-27T15:16:52.85592342-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-embedded-framework-02900"}
{"time":"2025-02-27T15:16:52.856006712-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-embedded-framework-03000"}
{"time":"2025-02-27T15:16:52.856105043-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-embedded-framework-03100"}
{"time":"2025-02-27T15:16:52.856197398-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-embedded-framework-03200"}
{"time":"2025-02-27T15:16:52.856308401-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-embedded-framework-03300"}
{"time":"2025-02-27T15:16:52.856398859-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-embedded-framework-03400"}
{"time":"2025-02-27T15:16:52.856488821-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-embedded-framework-03500"}
{"time":"2025-02-27T15:16:52.856573098-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-embedded-framework-03600"}
{"time":"2025-02-27T15:16:52.85666388-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-embedded-framework-03700"}
{"time":"2025-02-27T15:16:52.85676001-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-embedded-framework-03800"}
{"time":"2025-02-27T15:16:52.856846798-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-embedded-framework-03900"}
{"time":"2025-02-27T15:16:52.856932095-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-embedded-framework-04000"}
{"time":"2025-02-27T15:16:52.85701843-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-embedded-framework-04100"}
{"time":"2025-02-27T15:16:52.857110661-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-embedded-framework-04200"}
{"time":"2025-02-27T15:16:52.857196736-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-embedded-framework-04300"}
{"time":"2025-02-27T15:16:52.857279029-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-embedded-framework-04400"}
{"time":"2025-02-27T15:16:52.85736321-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-embedded-framework-04500"}
{"time":"2025-02-27T15:16:52.857445706-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-embedded-framework-04600"}
{"time":"2025-02-27T15:16:52.857529691-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-embedded-framework-04700"}
{"time":"2025-02-27T15:16:52.857631121-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-embedded-framework-05000"}
{"time":"2025-02-27T15:16:52.857716541-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-embedded-framework-05100"}
{"time":"2025-02-27T15:16:52.85779874-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-embedded-framework-05300"}
{"time":"2025-02-27T15:16:52.857935984-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-embedded-framework-05400"}
{"time":"2025-02-27T15:16:52.858032755-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-embedded-framework-05600"}
{"time":"2025-02-27T15:16:52.858171307-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-embedded-framework-05700"}
{"time":"2025-02-27T15:16:52.858313912-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-embedded-framework-05800"}
{"time":"2025-02-27T15:16:52.858480431-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-embedded-framework-05900"}
{"time":"2025-02-27T15:16:52.858572534-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-embedded-framework-06000"}
{"time":"2025-02-27T15:16:52.858649945-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-embedded-framework-06100"}
{"time":"2025-02-27T15:16:52.858750394-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-embedded-framework-06200"}
{"time":"2025-02-27T15:16:52.858896883-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-embedded-framework-06300"}
{"time":"2025-02-27T15:16:52.858972671-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-embedded-framework-06400"}
{"time":"2025-02-27T15:16:52.859060725-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-embedded-framework-06500"}
{"time":"2025-02-27T15:16:52.859159772-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-embedded-framework-06600"}
{"time":"2025-02-27T15:16:52.859279898-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-embedded-framework-06700"}
{"time":"2025-02-27T15:16:52.859389786-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-embedded-framework-06800"}
{"time":"2025-02-27T15:16:52.85952255-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-embedded-framework-06900"}
{"time":"2025-02-27T15:16:52.859608223-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-embedded-framework-07000"}
{"time":"2025-02-27T15:16:52.859700336-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-embedded-framework-07100"}
{"time":"2025-02-27T15:16:52.859793728-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-embedded-framework-07200"}
{"time":"2025-02-27T15:16:52.859932612-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-embedded-framework-07300"}
{"time":"2025-02-27T15:16:52.860022603-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-embedded-framework-07400"}
{"time":"2025-02-27T15:16:52.860132223-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-embedded-framework-07500"}
{"time":"2025-02-27T15:16:52.860219543-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-embedded-framework-07600"}
{"time":"2025-02-27T15:16:52.860327565-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-embedded-framework-07700"}
{"time":"2025-02-27T15:16:52.860433328-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-embedded-framework-07800"}
{"time":"2025-02-27T15:16:52.860503717-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-embedded-framework-07900"}
{"time":"2025-02-27T15:16:52.86057437-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-embedded-framework-08000"}
{"time":"2025-02-27T15:16:52.860648598-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-embedded-framework-08100"}
{"time":"2025-02-27T15:16:52.860736414-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-embedded-framework-08200"}
{"time":"2025-02-27T15:16:52.860842973-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-embedded-framework-08300"}
{"time":"2025-02-27T15:16:52.860915635-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-embedded-framework-08400"}
{"time":"2025-02-27T15:16:52.860998449-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-embedded-framework-08500"}
{"time":"2025-02-27T15:16:52.861081836-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-embedded-framework-08600"}
{"time":"2025-02-27T15:16:52.861170963-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-embedded-framework-08700"}
{"time":"2025-02-27T15:16:52.86125511-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-embedded-framework-08800"}
{"time":"2025-02-27T15:16:52.861337592-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-embedded-framework-08900"}
{"time":"2025-02-27T15:16:52.861423446-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-embedded-framework-09000"}
{"time":"2025-02-27T15:16:52.86150591-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-embedded-framework-09100"}
{"time":"2025-02-27T15:16:52.861587625-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-embedded-framework-09200"}
{"time":"2025-02-27T15:16:52.861674251-06:00","level":"INFO","msg":"info rule not matched","rule":"embedded-framework-embedded-framework-09300"}
{"time":"2025-02-27T15:16:52.861973685-06:00","level":"INFO","msg":"info rule not matched","rule":"spring-catchall-00001"}
{"time":"2025-02-27T15:16:52.862235628-06:00","level":"INFO","msg":"info rule not matched","rule":"test-frameworks-sauge-00010"}
{"time":"2025-02-27T15:16:52.862470513-06:00","level":"INFO","msg":"info rule not matched","rule":"test-frameworks-sauge-00020"}
{"time":"2025-02-27T15:16:52.862702506-06:00","level":"INFO","msg":"info rule not matched","rule":"test-frameworks-sauge-00030"}
{"time":"2025-02-27T15:16:52.862923681-06:00","level":"INFO","msg":"info rule not matched","rule":"test-frameworks-sauge-00040"}
{"time":"2025-02-27T15:16:52.863162147-06:00","level":"INFO","msg":"info rule not matched","rule":"test-frameworks-sauge-00050"}
{"time":"2025-02-27T15:16:52.86337865-06:00","level":"INFO","msg":"info rule not matched","rule":"test-frameworks-sauge-00060"}
{"time":"2025-02-27T15:16:52.86359517-06:00","level":"INFO","msg":"info rule not matched","rule":"test-frameworks-sauge-00070"}
{"time":"2025-02-27T15:16:52.863814625-06:00","level":"INFO","msg":"info rule not matched","rule":"test-frameworks-sauge-00080"}
{"time":"2025-02-27T15:16:52.864033054-06:00","level":"INFO","msg":"info rule not matched","rule":"test-frameworks-sauge-00090"}
{"time":"2025-02-27T15:16:52.864254671-06:00","level":"INFO","msg":"info rule not matched","rule":"test-frameworks-sauge-00100"}
{"time":"2025-02-27T15:16:52.864467333-06:00","level":"INFO","msg":"info rule not matched","rule":"test-frameworks-sauge-00110"}
{"time":"2025-02-27T15:16:52.864720678-06:00","level":"INFO","msg":"info rule not matched","rule":"test-frameworks-sauge-00120"}
{"time":"2025-02-27T15:16:52.864962638-06:00","level":"INFO","msg":"info rule not matched","rule":"test-frameworks-sauge-00130"}
{"time":"2025-02-27T15:16:52.865181211-06:00","level":"INFO","msg":"info rule not matched","rule":"test-frameworks-sauge-00140"}
{"time":"2025-02-27T15:16:52.865393436-06:00","level":"INFO","msg":"info rule not matched","rule":"test-frameworks-sauge-00150"}
{"time":"2025-02-27T15:16:52.865599764-06:00","level":"INFO","msg":"info rule not matched","rule":"test-frameworks-sauge-00160"}
{"time":"2025-02-27T15:16:52.86581813-06:00","level":"INFO","msg":"info rule not matched","rule":"test-frameworks-sauge-00170"}
{"time":"2025-02-27T15:16:52.866025359-06:00","level":"INFO","msg":"info rule not matched","rule":"test-frameworks-sauge-00180"}
{"time":"2025-02-27T15:16:52.866251835-06:00","level":"INFO","msg":"info rule not matched","rule":"test-frameworks-sauge-00190"}
{"time":"2025-02-27T15:16:52.866464211-06:00","level":"INFO","msg":"info rule not matched","rule":"test-frameworks-sauge-00200"}
{"time":"2025-02-27T15:16:52.866694775-06:00","level":"INFO","msg":"info rule not matched","rule":"test-frameworks-sauge-00210"}
{"time":"2025-02-27T15:16:52.866908546-06:00","level":"INFO","msg":"info rule not matched","rule":"test-frameworks-sauge-00220"}
{"time":"2025-02-27T15:16:52.867136258-06:00","level":"INFO","msg":"info rule not matched","rule":"test-frameworks-sauge-00230"}
{"time":"2025-02-27T15:16:52.867370906-06:00","level":"INFO","msg":"info rule not matched","rule":"test-frameworks-sauge-00240"}
{"time":"2025-02-27T15:16:52.86760677-06:00","level":"INFO","msg":"info rule not matched","rule":"test-frameworks-sauge-00560"}
{"time":"2025-02-27T15:16:52.867866286-06:00","level":"INFO","msg":"info rule not matched","rule":"test-frameworks-sauge-00260"}
{"time":"2025-02-27T15:16:52.868138719-06:00","level":"INFO","msg":"info rule not matched","rule":"test-frameworks-sauge-00270"}
{"time":"2025-02-27T15:16:52.868371332-06:00","level":"INFO","msg":"info rule not matched","rule":"test-frameworks-sauge-00280"}
{"time":"2025-02-27T15:16:52.868592027-06:00","level":"INFO","msg":"info rule not matched","rule":"test-frameworks-sauge-00290"}
{"time":"2025-02-27T15:16:52.86880929-06:00","level":"INFO","msg":"info rule not matched","rule":"test-frameworks-sauge-00300"}
{"time":"2025-02-27T15:16:52.869024419-06:00","level":"INFO","msg":"info rule not matched","rule":"test-frameworks-sauge-00310"}
{"time":"2025-02-27T15:16:52.869244677-06:00","level":"INFO","msg":"info rule not matched","rule":"test-frameworks-sauge-00320"}
{"time":"2025-02-27T15:16:52.869465601-06:00","level":"INFO","msg":"info rule not matched","rule":"test-frameworks-sauge-00330"}
{"time":"2025-02-27T15:16:52.8696825-06:00","level":"INFO","msg":"info rule not matched","rule":"test-frameworks-sauge-00340"}
{"time":"2025-02-27T15:16:52.869895472-06:00","level":"INFO","msg":"info rule not matched","rule":"test-frameworks-sauge-00350"}
{"time":"2025-02-27T15:16:52.870121178-06:00","level":"INFO","msg":"info rule not matched","rule":"test-frameworks-sauge-00360"}
{"time":"2025-02-27T15:16:52.870352333-06:00","level":"INFO","msg":"info rule not matched","rule":"test-frameworks-sauge-00370"}
{"time":"2025-02-27T15:16:52.873668471-06:00","level":"INFO","msg":"info rule not matched","rule":"web-01000"}
{"time":"2025-02-27T15:16:52.879958215-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-web-01100"}
{"time":"2025-02-27T15:16:52.881341006-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:52.881794768-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [Marker [on: /my-app, id: 1, type: org.eclipse.jdt.core.problem, attributes: [categoryId: 10, message: The project was not built due to \"release 21 is not found in the system\". Fix the problem, then try refreshing this project and building it since it may be inconsistent, severity: 2, sourceId: JDT], created: 2/27/25, 3:16 PM]] warnings: []"}
{"time":"2025-02-27T15:16:52.88226396-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<javax.websocket.server>, type<ServerEndpoint> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<ServerEndpoint>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax.websocket.server>, type<ServerEndpoint>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:52.882653508-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.websocket.server.ServerEndpoint location 4 matches0"}
{"time":"2025-02-27T15:16:52.882774332-06:00","level":"INFO","msg":"Symbols retrieved","provider":"java","symbols":0,"cap":"referenced","conditionInfo":{"Referenced":{"Pattern":"javax.websocket.server.ServerEndpoint","Location":"ANNOTATION","annotated":{"pattern":""},"Filepaths":null}}}
{"time":"2025-02-27T15:16:52.882826522-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-web-01300"}
{"time":"2025-02-27T15:16:52.884199537-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:52.884693776-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [Marker [on: /my-app, id: 1, type: org.eclipse.jdt.core.problem, attributes: [categoryId: 10, message: The project was not built due to \"release 21 is not found in the system\". Fix the problem, then try refreshing this project and building it since it may be inconsistent, severity: 2, sourceId: JDT], created: 2/27/25, 3:16 PM]] warnings: []"}
{"time":"2025-02-27T15:16:52.885148627-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: SuperInterfaceReferencePattern: <Applet>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:52.885784547-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for java.applet.Applet location 1 matches0"}
{"time":"2025-02-27T15:16:52.885934553-06:00","level":"INFO","msg":"Symbols retrieved","provider":"java","symbols":0,"cap":"referenced","conditionInfo":{"Referenced":{"Pattern":"java.applet.Applet","Location":"INHERITANCE","annotated":{"pattern":""},"Filepaths":null}}}
{"time":"2025-02-27T15:16:52.88650007-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-web-01400"}
{"time":"2025-02-27T15:16:52.886877075-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-web-01500"}
{"time":"2025-02-27T15:16:52.887391603-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-web-01600"}
{"time":"2025-02-27T15:16:52.88768215-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-web-01700"}
{"time":"2025-02-27T15:16:52.887994822-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-web-01800"}
{"time":"2025-02-27T15:16:52.888283723-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-web-01900"}
{"time":"2025-02-27T15:16:52.88860391-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-web-02000"}
{"time":"2025-02-27T15:16:52.888835533-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-web-02100"}
{"time":"2025-02-27T15:16:52.889065625-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-web-02200"}
{"time":"2025-02-27T15:16:52.889331343-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-web-02300"}
{"time":"2025-02-27T15:16:52.890154026-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-web-02400"}
{"time":"2025-02-27T15:16:52.89025155-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-ejb-01400"}
{"time":"2025-02-27T15:16:52.891731333-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:52.89219223-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [Marker [on: /my-app, id: 1, type: org.eclipse.jdt.core.problem, attributes: [categoryId: 10, message: The project was not built due to \"release 21 is not found in the system\". Fix the problem, then try refreshing this project and building it since it may be inconsistent, severity: 2, sourceId: JDT], created: 2/27/25, 3:16 PM]] warnings: []"}
{"time":"2025-02-27T15:16:52.893027943-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<javax.annotation.sql>, type<DataSourceDefinition> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<DataSourceDefinition>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax.annotation.sql>, type<DataSourceDefinition>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:52.893748496-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.annotation.sql.DataSourceDefinition location 4 matches0"}
{"time":"2025-02-27T15:16:52.893925417-06:00","level":"INFO","msg":"Symbols retrieved","provider":"java","symbols":0,"cap":"referenced","conditionInfo":{"Referenced":{"Pattern":"javax.annotation.sql.DataSourceDefinition","Location":"ANNOTATION","annotated":{"pattern":""},"Filepaths":null}}}
{"time":"2025-02-27T15:16:52.894003807-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-database-01000"}
{"time":"2025-02-27T15:16:52.89508604-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:52.895394884-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [Marker [on: /my-app, id: 1, type: org.eclipse.jdt.core.problem, attributes: [categoryId: 10, message: The project was not built due to \"release 21 is not found in the system\". Fix the problem, then try refreshing this project and building it since it may be inconsistent, severity: 2, sourceId: JDT], created: 2/27/25, 3:16 PM]] warnings: []"}
{"time":"2025-02-27T15:16:52.896006048-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<javax.annotation.sql>, type<DataSourceDefinition> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<DataSourceDefinition>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax.annotation.sql>, type<DataSourceDefinition>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:52.89644798-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.annotation.sql.DataSourceDefinition location 4 matches0"}
{"time":"2025-02-27T15:16:52.896540568-06:00","level":"INFO","msg":"Symbols retrieved","provider":"java","symbols":0,"cap":"referenced","conditionInfo":{"Referenced":{"Pattern":"javax.annotation.sql.DataSourceDefinition","Location":"ANNOTATION","annotated":{"pattern":""},"Filepaths":null}}}
{"time":"2025-02-27T15:16:52.896591402-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-database-01001"}
{"time":"2025-02-27T15:16:52.908139903-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-database-01100"}
{"time":"2025-02-27T15:16:52.910089373-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:52.910506309-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [Marker [on: /my-app, id: 1, type: org.eclipse.jdt.core.problem, attributes: [categoryId: 10, message: The project was not built due to \"release 21 is not found in the system\". Fix the problem, then try refreshing this project and building it since it may be inconsistent, severity: 2, sourceId: JDT], created: 2/27/25, 3:16 PM]] warnings: []"}
{"time":"2025-02-27T15:16:52.911046707-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<javax.persistence>, type<Entity> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Entity>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax.persistence>, type<Entity>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:52.911446051-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.persistence.Entity location 4 matches0"}
{"time":"2025-02-27T15:16:52.911561928-06:00","level":"INFO","msg":"Symbols retrieved","provider":"java","symbols":0,"cap":"referenced","conditionInfo":{"Referenced":{"Pattern":"javax.persistence.Entity","Location":"ANNOTATION","annotated":{"pattern":""},"Filepaths":null}}}
{"time":"2025-02-27T15:16:52.912546078-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:52.912857286-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [Marker [on: /my-app, id: 1, type: org.eclipse.jdt.core.problem, attributes: [categoryId: 10, message: The project was not built due to \"release 21 is not found in the system\". Fix the problem, then try refreshing this project and building it since it may be inconsistent, severity: 2, sourceId: JDT], created: 2/27/25, 3:16 PM]] warnings: []"}
{"time":"2025-02-27T15:16:52.913242155-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<javax.persistence>, type<Table> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Table>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax.persistence>, type<Table>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:52.913752135-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.persistence.Table location 4 matches0"}
{"time":"2025-02-27T15:16:52.91387521-06:00","level":"INFO","msg":"Symbols retrieved","provider":"java","symbols":0,"cap":"referenced","conditionInfo":{"Referenced":{"Pattern":"javax.persistence.Table","Location":"ANNOTATION","annotated":{"pattern":""},"Filepaths":null}}}
{"time":"2025-02-27T15:16:52.915072262-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:52.91546381-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [Marker [on: /my-app, id: 1, type: org.eclipse.jdt.core.problem, attributes: [categoryId: 10, message: The project was not built due to \"release 21 is not found in the system\". Fix the problem, then try refreshing this project and building it since it may be inconsistent, severity: 2, sourceId: JDT], created: 2/27/25, 3:16 PM]] warnings: []"}
{"time":"2025-02-27T15:16:52.915842521-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<javax.persistence>, type<NamedQuery> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<NamedQuery>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax.persistence>, type<NamedQuery>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:52.91620218-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.persistence.NamedQuery location 4 matches0"}
{"time":"2025-02-27T15:16:52.916294261-06:00","level":"INFO","msg":"Symbols retrieved","provider":"java","symbols":0,"cap":"referenced","conditionInfo":{"Referenced":{"Pattern":"javax.persistence.NamedQuery","Location":"ANNOTATION","annotated":{"pattern":""},"Filepaths":null}}}
{"time":"2025-02-27T15:16:52.917392922-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:52.917778689-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [Marker [on: /my-app, id: 1, type: org.eclipse.jdt.core.problem, attributes: [categoryId: 10, message: The project was not built due to \"release 21 is not found in the system\". Fix the problem, then try refreshing this project and building it since it may be inconsistent, severity: 2, sourceId: JDT], created: 2/27/25, 3:16 PM]] warnings: []"}
{"time":"2025-02-27T15:16:52.918315757-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<javax.persistence>, type<NamedQueries> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<NamedQueries>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax.persistence>, type<NamedQueries>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:52.918808169-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.persistence.NamedQueries location 4 matches0"}
{"time":"2025-02-27T15:16:52.919044654-06:00","level":"INFO","msg":"Symbols retrieved","provider":"java","symbols":0,"cap":"referenced","conditionInfo":{"Referenced":{"Pattern":"javax.persistence.NamedQueries","Location":"ANNOTATION","annotated":{"pattern":""},"Filepaths":null}}}
{"time":"2025-02-27T15:16:52.920680086-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:52.92109464-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [Marker [on: /my-app, id: 1, type: org.eclipse.jdt.core.problem, attributes: [categoryId: 10, message: The project was not built due to \"release 21 is not found in the system\". Fix the problem, then try refreshing this project and building it since it may be inconsistent, severity: 2, sourceId: JDT], created: 2/27/25, 3:16 PM]] warnings: []"}
{"time":"2025-02-27T15:16:52.922252565-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<javax.persistence>, type<DiscriminatorValue> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<DiscriminatorValue>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax.persistence>, type<DiscriminatorValue>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:52.922722807-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.persistence.DiscriminatorValue location 4 matches0"}
{"time":"2025-02-27T15:16:52.922842549-06:00","level":"INFO","msg":"Symbols retrieved","provider":"java","symbols":0,"cap":"referenced","conditionInfo":{"Referenced":{"Pattern":"javax.persistence.DiscriminatorValue","Location":"ANNOTATION","annotated":{"pattern":""},"Filepaths":null}}}
{"time":"2025-02-27T15:16:52.924007656-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:52.924289095-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [Marker [on: /my-app, id: 1, type: org.eclipse.jdt.core.problem, attributes: [categoryId: 10, message: The project was not built due to \"release 21 is not found in the system\". Fix the problem, then try refreshing this project and building it since it may be inconsistent, severity: 2, sourceId: JDT], created: 2/27/25, 3:16 PM]] warnings: []"}
{"time":"2025-02-27T15:16:52.924835553-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<jakarta.persistence>, type<Entity> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Entity>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<jakarta.persistence>, type<Entity>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:52.925447638-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for jakarta.persistence.Entity location 4 matches0"}
{"time":"2025-02-27T15:16:52.925832749-06:00","level":"INFO","msg":"Symbols retrieved","provider":"java","symbols":0,"cap":"referenced","conditionInfo":{"Referenced":{"Pattern":"jakarta.persistence.Entity","Location":"ANNOTATION","annotated":{"pattern":""},"Filepaths":null}}}
{"time":"2025-02-27T15:16:52.927060129-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:52.927539038-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [Marker [on: /my-app, id: 1, type: org.eclipse.jdt.core.problem, attributes: [categoryId: 10, message: The project was not built due to \"release 21 is not found in the system\". Fix the problem, then try refreshing this project and building it since it may be inconsistent, severity: 2, sourceId: JDT], created: 2/27/25, 3:16 PM]] warnings: []"}
{"time":"2025-02-27T15:16:52.928002206-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<jakarta.persistence>, type<Table> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Table>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<jakarta.persistence>, type<Table>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:52.928343449-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for jakarta.persistence.Table location 4 matches0"}
{"time":"2025-02-27T15:16:52.928409269-06:00","level":"INFO","msg":"Symbols retrieved","provider":"java","symbols":0,"cap":"referenced","conditionInfo":{"Referenced":{"Pattern":"jakarta.persistence.Table","Location":"ANNOTATION","annotated":{"pattern":""},"Filepaths":null}}}
{"time":"2025-02-27T15:16:52.929465784-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:52.930103184-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [Marker [on: /my-app, id: 1, type: org.eclipse.jdt.core.problem, attributes: [categoryId: 10, message: The project was not built due to \"release 21 is not found in the system\". Fix the problem, then try refreshing this project and building it since it may be inconsistent, severity: 2, sourceId: JDT], created: 2/27/25, 3:16 PM]] warnings: []"}
{"time":"2025-02-27T15:16:52.930484581-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<jakarta.persistence>, type<NamedQuery> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<NamedQuery>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<jakarta.persistence>, type<NamedQuery>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:52.930993932-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for jakarta.persistence.NamedQuery location 4 matches0"}
{"time":"2025-02-27T15:16:52.931037263-06:00","level":"INFO","msg":"Symbols retrieved","provider":"java","symbols":0,"cap":"referenced","conditionInfo":{"Referenced":{"Pattern":"jakarta.persistence.NamedQuery","Location":"ANNOTATION","annotated":{"pattern":""},"Filepaths":null}}}
{"time":"2025-02-27T15:16:52.93200727-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:52.932366326-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [Marker [on: /my-app, id: 1, type: org.eclipse.jdt.core.problem, attributes: [categoryId: 10, message: The project was not built due to \"release 21 is not found in the system\". Fix the problem, then try refreshing this project and building it since it may be inconsistent, severity: 2, sourceId: JDT], created: 2/27/25, 3:16 PM]] warnings: []"}
{"time":"2025-02-27T15:16:52.932795408-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<jakarta.persistence>, type<NamedQueries> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<NamedQueries>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<jakarta.persistence>, type<NamedQueries>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:52.933093073-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for jakarta.persistence.NamedQueries location 4 matches0"}
{"time":"2025-02-27T15:16:52.933137867-06:00","level":"INFO","msg":"Symbols retrieved","provider":"java","symbols":0,"cap":"referenced","conditionInfo":{"Referenced":{"Pattern":"jakarta.persistence.NamedQueries","Location":"ANNOTATION","annotated":{"pattern":""},"Filepaths":null}}}
{"time":"2025-02-27T15:16:52.934011914-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:52.934471853-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [Marker [on: /my-app, id: 1, type: org.eclipse.jdt.core.problem, attributes: [categoryId: 10, message: The project was not built due to \"release 21 is not found in the system\". Fix the problem, then try refreshing this project and building it since it may be inconsistent, severity: 2, sourceId: JDT], created: 2/27/25, 3:16 PM]] warnings: []"}
{"time":"2025-02-27T15:16:52.934825948-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<jakarta.persistence>, type<DiscriminatorValue> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<DiscriminatorValue>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<jakarta.persistence>, type<DiscriminatorValue>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:52.93522277-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for jakarta.persistence.DiscriminatorValue location 4 matches0"}
{"time":"2025-02-27T15:16:52.935307949-06:00","level":"INFO","msg":"Symbols retrieved","provider":"java","symbols":0,"cap":"referenced","conditionInfo":{"Referenced":{"Pattern":"jakarta.persistence.DiscriminatorValue","Location":"ANNOTATION","annotated":{"pattern":""},"Filepaths":null}}}
{"time":"2025-02-27T15:16:52.935367138-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-database-01200"}
{"time":"2025-02-27T15:16:52.935740187-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-database-01300"}
{"time":"2025-02-27T15:16:52.935874513-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-database-01400"}
{"time":"2025-02-27T15:16:52.935982523-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-database-01500"}
{"time":"2025-02-27T15:16:52.936082985-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-database-01600"}
{"time":"2025-02-27T15:16:52.936179934-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-database-01700"}
{"time":"2025-02-27T15:16:52.93627622-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-database-01800"}
{"time":"2025-02-27T15:16:52.936366627-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-database-01900"}
{"time":"2025-02-27T15:16:52.936454661-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-database-02000"}
{"time":"2025-02-27T15:16:52.936585317-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-database-02100"}
{"time":"2025-02-27T15:16:52.93668934-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-database-02200"}
{"time":"2025-02-27T15:16:52.936780965-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-database-02300"}
{"time":"2025-02-27T15:16:52.93687516-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-database-02400"}
{"time":"2025-02-27T15:16:52.936992102-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-database-02500"}
{"time":"2025-02-27T15:16:52.937089565-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-database-02600"}
{"time":"2025-02-27T15:16:52.937181766-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-database-02700"}
{"time":"2025-02-27T15:16:52.937280147-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-database-02800"}
{"time":"2025-02-27T15:16:52.93737319-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-database-02900"}
{"time":"2025-02-27T15:16:52.937465039-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-database-03000"}
{"time":"2025-02-27T15:16:52.937562491-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-database-03100"}
{"time":"2025-02-27T15:16:52.937654155-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-database-03200"}
{"time":"2025-02-27T15:16:52.938701134-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:52.939087969-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [Marker [on: /my-app, id: 1, type: org.eclipse.jdt.core.problem, attributes: [categoryId: 10, message: The project was not built due to \"release 21 is not found in the system\". Fix the problem, then try refreshing this project and building it since it may be inconsistent, severity: 2, sourceId: JDT], created: 2/27/25, 3:16 PM]] warnings: []"}
{"time":"2025-02-27T15:16:52.939542854-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<javax.ws.rs>, type<Path> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Path>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax.ws.rs>, type<Path>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:52.939882914-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.ws.rs.Path location 4 matches0"}
{"time":"2025-02-27T15:16:52.939936549-06:00","level":"INFO","msg":"Symbols retrieved","provider":"java","symbols":0,"cap":"referenced","conditionInfo":{"Referenced":{"Pattern":"javax.ws.rs.Path","Location":"ANNOTATION","annotated":{"pattern":""},"Filepaths":null}}}
{"time":"2025-02-27T15:16:52.940728483-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:52.941128526-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [Marker [on: /my-app, id: 1, type: org.eclipse.jdt.core.problem, attributes: [categoryId: 10, message: The project was not built due to \"release 21 is not found in the system\". Fix the problem, then try refreshing this project and building it since it may be inconsistent, severity: 2, sourceId: JDT], created: 2/27/25, 3:16 PM]] warnings: []"}
{"time":"2025-02-27T15:16:52.941824501-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<jakarta.ws.rs>, type<Path> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<Path>, exact match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<jakarta.ws.rs>, type<Path>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:52.942194291-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for jakarta.ws.rs.Path location 4 matches0"}
{"time":"2025-02-27T15:16:52.942222347-06:00","level":"INFO","msg":"Symbols retrieved","provider":"java","symbols":0,"cap":"referenced","conditionInfo":{"Referenced":{"Pattern":"jakarta.ws.rs.Path","Location":"ANNOTATION","annotated":{"pattern":""},"Filepaths":null}}}
{"time":"2025-02-27T15:16:52.94224922-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-connect-01000"}
{"time":"2025-02-27T15:16:52.943081771-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:52.943447414-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [Marker [on: /my-app, id: 1, type: org.eclipse.jdt.core.problem, attributes: [categoryId: 10, message: The project was not built due to \"release 21 is not found in the system\". Fix the problem, then try refreshing this project and building it since it may be inconsistent, severity: 2, sourceId: JDT], created: 2/27/25, 3:16 PM]] warnings: []"}
{"time":"2025-02-27T15:16:52.944355231-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: MethodReferencePattern: java.lang.system.load*(...), pattern match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | MethodReferencePattern: java.lang.system.loadlibrary*(...), pattern match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE | MethodReferencePattern: java.lang.system.maplibraryname*(...), pattern match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE"}
{"time":"2025-02-27T15:16:53.052726508-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for java.lang.System.(load|loadLibrary|mapLibraryName)* location 2 matches0"}
{"time":"2025-02-27T15:16:53.052792888-06:00","level":"INFO","msg":"Symbols retrieved","provider":"java","symbols":0,"cap":"referenced","conditionInfo":{"Referenced":{"Pattern":"java.lang.System.(load|loadLibrary|mapLibraryName)*","Location":"METHOD_CALL","annotated":{"pattern":""},"Filepaths":null}}}
{"time":"2025-02-27T15:16:53.053805296-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:53.054274931-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [Marker [on: /my-app, id: 1, type: org.eclipse.jdt.core.problem, attributes: [categoryId: 10, message: The project was not built due to \"release 21 is not found in the system\". Fix the problem, then try refreshing this project and building it since it may be inconsistent, severity: 2, sourceId: JDT], created: 2/27/25, 3:16 PM]] warnings: []"}
{"time":"2025-02-27T15:16:53.054623016-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: MethodReferencePattern: java.lang.runtime.load(*), pattern match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE"}
{"time":"2025-02-27T15:16:53.065691454-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for java.lang.Runtime.load(*) location 2 matches0"}
{"time":"2025-02-27T15:16:53.065826738-06:00","level":"INFO","msg":"Symbols retrieved","provider":"java","symbols":0,"cap":"referenced","conditionInfo":{"Referenced":{"Pattern":"java.lang.Runtime.load(*)","Location":"METHOD_CALL","annotated":{"pattern":""},"Filepaths":null}}}
{"time":"2025-02-27T15:16:53.067338098-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:53.067937156-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [Marker [on: /my-app, id: 1, type: org.eclipse.jdt.core.problem, attributes: [categoryId: 10, message: The project was not built due to \"release 21 is not found in the system\". Fix the problem, then try refreshing this project and building it since it may be inconsistent, severity: 2, sourceId: JDT], created: 2/27/25, 3:16 PM]] warnings: []"}
{"time":"2025-02-27T15:16:53.068407526-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: MethodReferencePattern: java.lang.runtime.loadlibrary(*), pattern match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE"}
{"time":"2025-02-27T15:16:53.085998443-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for java.lang.Runtime.loadLibrary(*) location 2 matches0"}
{"time":"2025-02-27T15:16:53.086331185-06:00","level":"INFO","msg":"Symbols retrieved","provider":"java","symbols":0,"cap":"referenced","conditionInfo":{"Referenced":{"Pattern":"java.lang.Runtime.loadLibrary(*)","Location":"METHOD_CALL","annotated":{"pattern":""},"Filepaths":null}}}
{"time":"2025-02-27T15:16:53.086421677-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-connect-01100"}
{"time":"2025-02-27T15:16:53.087957634-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:53.088449152-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [Marker [on: /my-app, id: 1, type: org.eclipse.jdt.core.problem, attributes: [categoryId: 10, message: The project was not built due to \"release 21 is not found in the system\". Fix the problem, then try refreshing this project and building it since it may be inconsistent, severity: 2, sourceId: JDT], created: 2/27/25, 3:16 PM]] warnings: []"}
{"time":"2025-02-27T15:16:53.08911747-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: ConstructorCombinedPattern: com.sun.jna*(...), pattern match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:53.0895996-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for com.sun.jna* location 3 matches0"}
{"time":"2025-02-27T15:16:53.089720738-06:00","level":"INFO","msg":"Symbols retrieved","provider":"java","symbols":0,"cap":"referenced","conditionInfo":{"Referenced":{"Pattern":"com.sun.jna*","Location":"CONSTRUCTOR_CALL","annotated":{"pattern":""},"Filepaths":null}}}
{"time":"2025-02-27T15:16:53.091393317-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:53.092013133-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [Marker [on: /my-app, id: 1, type: org.eclipse.jdt.core.problem, attributes: [categoryId: 10, message: The project was not built due to \"release 21 is not found in the system\". Fix the problem, then try refreshing this project and building it since it may be inconsistent, severity: 2, sourceId: JDT], created: 2/27/25, 3:16 PM]] warnings: []"}
{"time":"2025-02-27T15:16:53.092627928-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<com.sun>, type<jna*> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<jna*>, pattern match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<com.sun>, type<jna*>, pattern match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:53.093327695-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for com.sun.jna* location 8 matches0"}
{"time":"2025-02-27T15:16:53.093399167-06:00","level":"INFO","msg":"Symbols retrieved","provider":"java","symbols":0,"cap":"referenced","conditionInfo":{"Referenced":{"Pattern":"com.sun.jna*","Location":"IMPORT","annotated":{"pattern":""},"Filepaths":null}}}
{"time":"2025-02-27T15:16:53.095053932-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:53.095878024-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [Marker [on: /my-app, id: 1, type: org.eclipse.jdt.core.problem, attributes: [categoryId: 10, message: The project was not built due to \"release 21 is not found in the system\". Fix the problem, then try refreshing this project and building it since it may be inconsistent, severity: 2, sourceId: JDT], created: 2/27/25, 3:16 PM]] warnings: []"}
{"time":"2025-02-27T15:16:53.096455366-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: SuperInterfaceReferencePattern: <jna*>, pattern match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:53.096847155-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for com.sun.jna* location 1 matches0"}
{"time":"2025-02-27T15:16:53.09695368-06:00","level":"INFO","msg":"Symbols retrieved","provider":"java","symbols":0,"cap":"referenced","conditionInfo":{"Referenced":{"Pattern":"com.sun.jna*","Location":"INHERITANCE","annotated":{"pattern":""},"Filepaths":null}}}
{"time":"2025-02-27T15:16:53.098190914-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:53.098937812-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [Marker [on: /my-app, id: 1, type: org.eclipse.jdt.core.problem, attributes: [categoryId: 10, message: The project was not built due to \"release 21 is not found in the system\". Fix the problem, then try refreshing this project and building it since it may be inconsistent, severity: 2, sourceId: JDT], created: 2/27/25, 3:16 PM]] warnings: []"}
{"time":"2025-02-27T15:16:53.099568472-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: MethodReferencePattern: com.sun.jna(*), pattern match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE"}
{"time":"2025-02-27T15:16:53.11517396-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for com.sun.jna(*) location 2 matches0"}
{"time":"2025-02-27T15:16:53.115227381-06:00","level":"INFO","msg":"Symbols retrieved","provider":"java","symbols":0,"cap":"referenced","conditionInfo":{"Referenced":{"Pattern":"com.sun.jna(*)","Location":"METHOD_CALL","annotated":{"pattern":""},"Filepaths":null}}}
{"time":"2025-02-27T15:16:53.116718607-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:53.11701288-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [Marker [on: /my-app, id: 1, type: org.eclipse.jdt.core.problem, attributes: [categoryId: 10, message: The project was not built due to \"release 21 is not found in the system\". Fix the problem, then try refreshing this project and building it since it may be inconsistent, severity: 2, sourceId: JDT], created: 2/27/25, 3:16 PM]] warnings: []"}
{"time":"2025-02-27T15:16:53.117470895-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeReferencePattern: qualification<com.sun>, type<jna*>, pattern match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:53.118067984-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for com.sun.jna* location 9 matches0"}
{"time":"2025-02-27T15:16:53.118158679-06:00","level":"INFO","msg":"Symbols retrieved","provider":"java","symbols":0,"cap":"referenced","conditionInfo":{"Referenced":{"Pattern":"com.sun.jna*","Location":"VARIABLE_DECLARATION","annotated":{"pattern":""},"Filepaths":null}}}
{"time":"2025-02-27T15:16:53.118221685-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-connect-01101"}
{"time":"2025-02-27T15:16:53.11984768-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:53.120253726-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [Marker [on: /my-app, id: 1, type: org.eclipse.jdt.core.problem, attributes: [categoryId: 10, message: The project was not built due to \"release 21 is not found in the system\". Fix the problem, then try refreshing this project and building it since it may be inconsistent, severity: 2, sourceId: JDT], created: 2/27/25, 3:16 PM]] warnings: []"}
{"time":"2025-02-27T15:16:53.120816558-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: PackageDeclarationPattern: <javax.mail*>, pattern match, case insensitive, generic full match, fine grain: none | PackageReferencePattern: <javax.mail*>, pattern match, case insensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:53.121658375-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.mail* location 11 matches0"}
{"time":"2025-02-27T15:16:53.121774259-06:00","level":"INFO","msg":"Symbols retrieved","provider":"java","symbols":0,"cap":"referenced","conditionInfo":{"Referenced":{"Pattern":"javax.mail*","Location":"PACKAGE","annotated":{"pattern":""},"Filepaths":null}}}
{"time":"2025-02-27T15:16:53.122702678-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:53.123090679-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [Marker [on: /my-app, id: 1, type: org.eclipse.jdt.core.problem, attributes: [categoryId: 10, message: The project was not built due to \"release 21 is not found in the system\". Fix the problem, then try refreshing this project and building it since it may be inconsistent, severity: 2, sourceId: JDT], created: 2/27/25, 3:16 PM]] warnings: []"}
{"time":"2025-02-27T15:16:53.123639225-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: PackageDeclarationPattern: <com.sun.mail*>, pattern match, case insensitive, generic full match, fine grain: none | PackageReferencePattern: <com.sun.mail*>, pattern match, case insensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:53.124566468-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for com.sun.mail* location 11 matches0"}
{"time":"2025-02-27T15:16:53.12464042-06:00","level":"INFO","msg":"Symbols retrieved","provider":"java","symbols":0,"cap":"referenced","conditionInfo":{"Referenced":{"Pattern":"com.sun.mail*","Location":"PACKAGE","annotated":{"pattern":""},"Filepaths":null}}}
{"time":"2025-02-27T15:16:53.126130837-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:53.126738073-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [Marker [on: /my-app, id: 1, type: org.eclipse.jdt.core.problem, attributes: [categoryId: 10, message: The project was not built due to \"release 21 is not found in the system\". Fix the problem, then try refreshing this project and building it since it may be inconsistent, severity: 2, sourceId: JDT], created: 2/27/25, 3:16 PM]] warnings: []"}
{"time":"2025-02-27T15:16:53.127138461-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: PackageDeclarationPattern: <org.simplejavamail*>, pattern match, case insensitive, generic full match, fine grain: none | PackageReferencePattern: <org.simplejavamail*>, pattern match, case insensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:53.127823278-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.simplejavamail* location 11 matches0"}
{"time":"2025-02-27T15:16:53.128193016-06:00","level":"INFO","msg":"Symbols retrieved","provider":"java","symbols":0,"cap":"referenced","conditionInfo":{"Referenced":{"Pattern":"org.simplejavamail*","Location":"PACKAGE","annotated":{"pattern":""},"Filepaths":null}}}
{"time":"2025-02-27T15:16:53.129679419-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:53.130154685-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [Marker [on: /my-app, id: 1, type: org.eclipse.jdt.core.problem, attributes: [categoryId: 10, message: The project was not built due to \"release 21 is not found in the system\". Fix the problem, then try refreshing this project and building it since it may be inconsistent, severity: 2, sourceId: JDT], created: 2/27/25, 3:16 PM]] warnings: []"}
{"time":"2025-02-27T15:16:53.130576913-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: PackageDeclarationPattern: <org.apache.commons.mail*>, pattern match, case insensitive, generic full match, fine grain: none | PackageReferencePattern: <org.apache.commons.mail*>, pattern match, case insensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:53.131464709-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for org.apache.commons.mail* location 11 matches0"}
{"time":"2025-02-27T15:16:53.131595721-06:00","level":"INFO","msg":"Symbols retrieved","provider":"java","symbols":0,"cap":"referenced","conditionInfo":{"Referenced":{"Pattern":"org.apache.commons.mail*","Location":"PACKAGE","annotated":{"pattern":""},"Filepaths":null}}}
{"time":"2025-02-27T15:16:53.131676882-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-connect-01200"}
{"time":"2025-02-27T15:16:53.132955587-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:53.133358903-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [Marker [on: /my-app, id: 1, type: org.eclipse.jdt.core.problem, attributes: [categoryId: 10, message: The project was not built due to \"release 21 is not found in the system\". Fix the problem, then try refreshing this project and building it since it may be inconsistent, severity: 2, sourceId: JDT], created: 2/27/25, 3:16 PM]] warnings: []"}
{"time":"2025-02-27T15:16:53.133967219-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: ConstructorCombinedPattern: javax.resource*(...), pattern match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:53.134544427-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.resource* location 3 matches0"}
{"time":"2025-02-27T15:16:53.134671547-06:00","level":"INFO","msg":"Symbols retrieved","provider":"java","symbols":0,"cap":"referenced","conditionInfo":{"Referenced":{"Pattern":"javax.resource*","Location":"CONSTRUCTOR_CALL","annotated":{"pattern":""},"Filepaths":null}}}
{"time":"2025-02-27T15:16:53.135833504-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:53.136308987-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [Marker [on: /my-app, id: 1, type: org.eclipse.jdt.core.problem, attributes: [categoryId: 10, message: The project was not built due to \"release 21 is not found in the system\". Fix the problem, then try refreshing this project and building it since it may be inconsistent, severity: 2, sourceId: JDT], created: 2/27/25, 3:16 PM]] warnings: []"}
{"time":"2025-02-27T15:16:53.137114861-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeDeclarationPattern: qualification<javax>, type<resource*> TypeDeclarationPattern: pkg<*>, enclosing<*>, type<resource*>, pattern match, case sensitive, generic full match, fine grain: none | TypeReferencePattern: qualification<javax>, type<resource*>, pattern match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:53.137596413-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.resource* location 8 matches0"}
{"time":"2025-02-27T15:16:53.137858042-06:00","level":"INFO","msg":"Symbols retrieved","provider":"java","symbols":0,"cap":"referenced","conditionInfo":{"Referenced":{"Pattern":"javax.resource*","Location":"IMPORT","annotated":{"pattern":""},"Filepaths":null}}}
{"time":"2025-02-27T15:16:53.139109404-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:53.139574009-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [Marker [on: /my-app, id: 1, type: org.eclipse.jdt.core.problem, attributes: [categoryId: 10, message: The project was not built due to \"release 21 is not found in the system\". Fix the problem, then try refreshing this project and building it since it may be inconsistent, severity: 2, sourceId: JDT], created: 2/27/25, 3:16 PM]] warnings: []"}
{"time":"2025-02-27T15:16:53.139964077-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: SuperInterfaceReferencePattern: <resource*>, pattern match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:53.140487151-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.resource* location 1 matches0"}
{"time":"2025-02-27T15:16:53.140546945-06:00","level":"INFO","msg":"Symbols retrieved","provider":"java","symbols":0,"cap":"referenced","conditionInfo":{"Referenced":{"Pattern":"javax.resource*","Location":"INHERITANCE","annotated":{"pattern":""},"Filepaths":null}}}
{"time":"2025-02-27T15:16:53.141913944-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:53.142338241-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [Marker [on: /my-app, id: 1, type: org.eclipse.jdt.core.problem, attributes: [categoryId: 10, message: The project was not built due to \"release 21 is not found in the system\". Fix the problem, then try refreshing this project and building it since it may be inconsistent, severity: 2, sourceId: JDT], created: 2/27/25, 3:16 PM]] warnings: []"}
{"time":"2025-02-27T15:16:53.142940114-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: MethodReferencePattern: javax.resource*(...), pattern match, case insensitive, generic erasure match, fine grain: QUALIFIED_REFERENCE"}
{"time":"2025-02-27T15:16:53.149500775-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.resource* location 2 matches0"}
{"time":"2025-02-27T15:16:53.149591579-06:00","level":"INFO","msg":"Symbols retrieved","provider":"java","symbols":0,"cap":"referenced","conditionInfo":{"Referenced":{"Pattern":"javax.resource*","Location":"METHOD_CALL","annotated":{"pattern":""},"Filepaths":null}}}
{"time":"2025-02-27T15:16:53.151344992-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:53.151949192-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [Marker [on: /my-app, id: 1, type: org.eclipse.jdt.core.problem, attributes: [categoryId: 10, message: The project was not built due to \"release 21 is not found in the system\". Fix the problem, then try refreshing this project and building it since it may be inconsistent, severity: 2, sourceId: JDT], created: 2/27/25, 3:16 PM]] warnings: []"}
{"time":"2025-02-27T15:16:53.152439703-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: TypeReferencePattern: qualification<javax>, type<resource*>, pattern match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:53.152902997-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 0 search matches for javax.resource* location 9 matches0"}
{"time":"2025-02-27T15:16:53.153185688-06:00","level":"INFO","msg":"Symbols retrieved","provider":"java","symbols":0,"cap":"referenced","conditionInfo":{"Referenced":{"Pattern":"javax.resource*","Location":"VARIABLE_DECLARATION","annotated":{"pattern":""},"Filepaths":null}}}
{"time":"2025-02-27T15:16:53.154267765-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-connect-01300"}
{"time":"2025-02-27T15:16:53.154523135-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-connect-01400"}
{"time":"2025-02-27T15:16:53.15473654-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-connect-01500"}
{"time":"2025-02-27T15:16:53.154886676-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-connect-01600"}
{"time":"2025-02-27T15:16:53.155057795-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-connect-01700"}
{"time":"2025-02-27T15:16:53.155169337-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-connect-01800"}
{"time":"2025-02-27T15:16:53.15528098-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-connect-01900"}
{"time":"2025-02-27T15:16:53.155391783-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-connect-02000"}
{"time":"2025-02-27T15:16:53.155588873-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-connect-02100"}
{"time":"2025-02-27T15:16:53.155696574-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-connect-02200"}
{"time":"2025-02-27T15:16:53.155787203-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-connect-02300"}
{"time":"2025-02-27T15:16:53.155900627-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-connect-02400"}
{"time":"2025-02-27T15:16:53.156058049-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-connect-02500"}
{"time":"2025-02-27T15:16:53.156177816-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-connect-02600"}
{"time":"2025-02-27T15:16:53.156297226-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-connect-02700"}
{"time":"2025-02-27T15:16:53.156417024-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-connect-02800"}
{"time":"2025-02-27T15:16:53.15654063-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-connect-02900"}
{"time":"2025-02-27T15:16:53.156676939-06:00","level":"INFO","msg":"info rule not matched","rule":"configuration-management-technology-usage-0100"}
{"time":"2025-02-27T15:16:53.156824394-06:00","level":"INFO","msg":"info rule not matched","rule":"configuration-management-technology-usage-0200"}
{"time":"2025-02-27T15:16:53.156952937-06:00","level":"INFO","msg":"info rule not matched","rule":"configuration-management-technology-usage-0300"}
{"time":"2025-02-27T15:16:53.157100648-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-clustering-01000"}
{"time":"2025-02-27T15:16:53.15737487-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-clustering-02000"}
{"time":"2025-02-27T15:16:53.157520187-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-apm-00010"}
{"time":"2025-02-27T15:16:53.157644375-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-apm-00020"}
{"time":"2025-02-27T15:16:53.157766944-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-apm-00030"}
{"time":"2025-02-27T15:16:53.157921452-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-apm-00040"}
{"time":"2025-02-27T15:16:53.158140344-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-3rd-party-01000"}
{"time":"2025-02-27T15:16:53.158333096-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-3rd-party-02000"}
{"time":"2025-02-27T15:16:53.158512866-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-3rd-party-03000"}
{"time":"2025-02-27T15:16:53.158644084-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-3rd-party-04000"}
{"time":"2025-02-27T15:16:53.158807961-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-3rd-party-05000"}
{"time":"2025-02-27T15:16:53.158967858-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-3rd-party-06000"}
{"time":"2025-02-27T15:16:53.159124886-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-3rd-party-08000"}
{"time":"2025-02-27T15:16:53.159284716-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-3rd-party-09000"}
{"time":"2025-02-27T15:16:53.159430226-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-3rd-party-10000"}
{"time":"2025-02-27T15:16:53.159547682-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-3rd-party-11000"}
{"time":"2025-02-27T15:16:53.159658611-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-3rd-party-12000"}
{"time":"2025-02-27T15:16:53.159766469-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-3rd-party-13000"}
{"time":"2025-02-27T15:16:53.159881014-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-3rd-party-14000"}
{"time":"2025-02-27T15:16:53.159999629-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-3rd-party-15000"}
{"time":"2025-02-27T15:16:53.16011566-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-3rd-party-16000"}
{"time":"2025-02-27T15:16:53.160219328-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-3rd-party-17000"}
{"time":"2025-02-27T15:16:53.160329557-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-3rd-party-18000"}
{"time":"2025-02-27T15:16:53.160419827-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-3rd-party-19000"}
{"time":"2025-02-27T15:16:53.160513665-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-3rd-party-20000"}
{"time":"2025-02-27T15:16:53.160672355-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-3rd-party-spring-03001-0"}
{"time":"2025-02-27T15:16:53.160796156-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-3rd-party-spring-03001-1"}
{"time":"2025-02-27T15:16:53.160890096-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-3rd-party-spring-03001-2"}
{"time":"2025-02-27T15:16:53.160997966-06:00","level":"INFO","msg":"info rule not matched","rule":"technology-usage-3rd-party-spring-03002"}
{"time":"2025-02-27T15:16:53.161065155-06:00","level":"DEBUG+2","msg":"done processing all the rules"}
{"time":"2025-02-27T15:16:53.161136126-06:00","level":"INFO","msg":"using scopes","scope":"ExcludedPathsScope -- DiscoveryRulesetsScopes"}
{"time":"2025-02-27T15:16:53.161167126-06:00","level":"INFO","msg":"Adding tags to condctx","condctx":{"Tags":{},"Template":{"konveyor.io/path-scope":{"Filepaths":null,"Extras":null,"ExcludedPaths":["/home/dpeterson/kai-demo/my-app/.vscode"]}},"RuleID":""}}
{"time":"2025-02-27T15:16:53.161188469-06:00","level":"DEBUG+2","msg":"adding tag","tag":"Bean=EJB XML"}
{"time":"2025-02-27T15:16:53.161194456-06:00","level":"DEBUG+2","msg":"adding tag","tag":"Java EE=EJB XML"}
{"time":"2025-02-27T15:16:53.161198053-06:00","level":"DEBUG+2","msg":"adding tag","tag":"Connect=EJB XML"}
{"time":"2025-02-27T15:16:53.161201598-06:00","level":"DEBUG+2","msg":"adding tag","tag":"Java Source"}
{"time":"2025-02-27T15:16:53.161205094-06:00","level":"DEBUG+2","msg":"adding tag","tag":"Maven XML"}
{"time":"2025-02-27T15:16:53.16121685-06:00","level":"DEBUG+2","msg":"adding tag","tag":"EJB XML"}
{"time":"2025-02-27T15:16:53.161220831-06:00","level":"INFO","msg":"added scopes to condition context","scopes":{},"conditionContext":{"Tags":{"Bean=EJB XML":true,"Connect=EJB XML":true,"EJB XML":true,"Java EE=EJB XML":true,"Java Source":true,"Maven XML":true},"Template":{"konveyor.io/path-scope":{"Filepaths":null,"Extras":null,"ExcludedPaths":["/home/dpeterson/kai-demo/my-app/.vscode"]}},"RuleID":""}}
{"time":"2025-02-27T15:16:53.161235001-06:00","level":"INFO","msg":"inject span info","carrier":{}}
{"time":"2025-02-27T15:16:53.323945218-06:00","level":"INFO","msg":"Adding tags to condctx","condctx":{"Tags":{"Bean=EJB XML":true,"Connect=EJB XML":true,"EJB XML":true,"Java EE=EJB XML":true,"Java Source":true,"Maven XML":true},"Template":{"konveyor.io/path-scope":{"Filepaths":null,"Extras":null,"ExcludedPaths":["/home/dpeterson/kai-demo/my-app/.vscode"]}},"RuleID":"java21-getfirst-method"}}
{"time":"2025-02-27T15:16:53.32407246-06:00","level":"INFO","msg":"Adding Carrier span info to context","worker":7}
{"time":"2025-02-27T15:16:53.323968352-06:00","level":"INFO","msg":"Adding tags to condctx","condctx":{"Tags":{"Bean=EJB XML":true,"Connect=EJB XML":true,"EJB XML":true,"Java EE=EJB XML":true,"Java Source":true,"Maven XML":true},"Template":{"konveyor.io/path-scope":{"Filepaths":null,"Extras":null,"ExcludedPaths":["/home/dpeterson/kai-demo/my-app/.vscode"]}},"RuleID":"hardcoded-ip-address"}}
{"time":"2025-02-27T15:16:53.32411546-06:00","level":"INFO","msg":"Adding Carrier span info to context","worker":8}
{"time":"2025-02-27T15:16:53.325790982-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:53.326274634-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [Marker [on: /my-app, id: 1, type: org.eclipse.jdt.core.problem, attributes: [categoryId: 10, message: The project was not built due to \"release 21 is not found in the system\". Fix the problem, then try refreshing this project and building it since it may be inconsistent, severity: 2, sourceId: JDT], created: 2/27/25, 3:16 PM]] warnings: []"}
{"time":"2025-02-27T15:16:53.326741208-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: MethodDeclarationPattern: getfirst(...), exact match, case insensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:53.328826959-06:00","level":"INFO","msg":"rule returned","ruleID":"hardcoded-ip-address"}
{"time":"2025-02-27T15:16:53.35315205-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 1 search matches for getFirst location 13 matches1"}
{"time":"2025-02-27T15:16:53.354323651-06:00","level":"INFO","msg":"Symbols retrieved","provider":"java","symbols":1,"cap":"referenced","conditionInfo":{"Referenced":{"Pattern":"getFirst","Location":"METHOD","annotated":{"pattern":""},"Filepaths":null}}}
{"time":"2025-02-27T15:16:53.355593832-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:16:53.355902944-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [Marker [on: /my-app, id: 1, type: org.eclipse.jdt.core.problem, attributes: [categoryId: 10, message: The project was not built due to \"release 21 is not found in the system\". Fix the problem, then try refreshing this project and building it since it may be inconsistent, severity: 2, sourceId: JDT], created: 2/27/25, 3:16 PM]] warnings: []"}
{"time":"2025-02-27T15:16:53.356201504-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: SuperInterfaceReferencePattern: <List>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:16:53.36674762-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 1 search matches for List location 5 matches1"}
{"time":"2025-02-27T15:16:53.36715455-06:00","level":"INFO","msg":"Symbols retrieved","provider":"java","symbols":1,"cap":"referenced","conditionInfo":{"Referenced":{"Pattern":"List","Location":"IMPLEMENTS_TYPE","annotated":{"pattern":""},"Filepaths":null}}}
{"time":"2025-02-27T15:16:53.367349361-06:00","level":"INFO","msg":"rule returned","ruleID":"java21-getfirst-method"}
{"time":"2025-02-27T15:16:53.36759093-06:00","level":"DEBUG+2","msg":"done processing all the rules"}
{"time":"2025-02-27T15:21:58.250090807-06:00","level":"INFO","msg":"Have selectors","selectors":[{}]}
{"time":"2025-02-27T15:21:58.250173777-06:00","level":"DEBUG+2","msg":"Using inclusion scope","scope":"IncludedPathScope"}
{"time":"2025-02-27T15:21:58.250193261-06:00","level":"DEBUG+2","msg":"Using exclusion scope","scope":"ExcludedPathsScope"}
{"time":"2025-02-27T15:21:58.250211448-06:00","level":"INFO","msg":"using scopes","scope":"IncludedPathScope -- ExcludedPathsScope -- DiscoveryRulesetsScopes"}
{"time":"2025-02-27T15:21:58.250220636-06:00","level":"INFO","msg":"Adding tags to condctx","condctx":{"Tags":{},"Template":{"konveyor.io/path-scope":{"Filepaths":["/home/dpeterson/kai-demo/my-app/src/main/java/com/mycompany/app/StringList.java"],"Extras":null,"ExcludedPaths":["/home/dpeterson/kai-demo/my-app/.vscode"]}},"RuleID":""}}
{"time":"2025-02-27T15:21:58.250247607-06:00","level":"DEBUG+2","msg":"adding tag","tag":"Bean=EJB XML"}
{"time":"2025-02-27T15:21:58.250252598-06:00","level":"DEBUG+2","msg":"adding tag","tag":"Java EE=EJB XML"}
{"time":"2025-02-27T15:21:58.250255461-06:00","level":"DEBUG+2","msg":"adding tag","tag":"Connect=EJB XML"}
{"time":"2025-02-27T15:21:58.250258686-06:00","level":"DEBUG+2","msg":"adding tag","tag":"Java Source"}
{"time":"2025-02-27T15:21:58.250261757-06:00","level":"DEBUG+2","msg":"adding tag","tag":"Maven XML"}
{"time":"2025-02-27T15:21:58.250264432-06:00","level":"DEBUG+2","msg":"adding tag","tag":"EJB XML"}
{"time":"2025-02-27T15:21:58.250267545-06:00","level":"INFO","msg":"added scopes to condition context","scopes":{},"conditionContext":{"Tags":{"Bean=EJB XML":true,"Connect=EJB XML":true,"EJB XML":true,"Java EE=EJB XML":true,"Java Source":true,"Maven XML":true},"Template":{"konveyor.io/path-scope":{"Filepaths":["/home/dpeterson/kai-demo/my-app/src/main/java/com/mycompany/app/StringList.java"],"Extras":null,"ExcludedPaths":["/home/dpeterson/kai-demo/my-app/.vscode"]}},"RuleID":""}}
{"time":"2025-02-27T15:21:58.250284705-06:00","level":"INFO","msg":"inject span info","carrier":{}}
{"time":"2025-02-27T15:21:58.405144242-06:00","level":"INFO","msg":"Adding tags to condctx","condctx":{"Tags":{"Bean=EJB XML":true,"Connect=EJB XML":true,"EJB XML":true,"Java EE=EJB XML":true,"Java Source":true,"Maven XML":true},"Template":{"konveyor.io/path-scope":{"Filepaths":["/home/dpeterson/kai-demo/my-app/src/main/java/com/mycompany/app/StringList.java"],"Extras":null,"ExcludedPaths":["/home/dpeterson/kai-demo/my-app/.vscode"]}},"RuleID":"hardcoded-ip-address"}}
{"time":"2025-02-27T15:21:58.405324487-06:00","level":"INFO","msg":"Adding Carrier span info to context","worker":2}
{"time":"2025-02-27T15:21:58.405282385-06:00","level":"INFO","msg":"Adding tags to condctx","condctx":{"Tags":{"Bean=EJB XML":true,"Connect=EJB XML":true,"EJB XML":true,"Java EE=EJB XML":true,"Java Source":true,"Maven XML":true},"Template":{"konveyor.io/path-scope":{"Filepaths":["/home/dpeterson/kai-demo/my-app/src/main/java/com/mycompany/app/StringList.java"],"Extras":null,"ExcludedPaths":["/home/dpeterson/kai-demo/my-app/.vscode"]}},"RuleID":"java21-getfirst-method"}}
{"time":"2025-02-27T15:21:58.405383492-06:00","level":"INFO","msg":"Adding Carrier span info to context","worker":3}
{"time":"2025-02-27T15:21:58.407035479-06:00","level":"INFO","msg":"rule returned","ruleID":"hardcoded-ip-address"}
{"time":"2025-02-27T15:21:58.407608662-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:21:58.40805832-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [Marker [on: /my-app, id: 1, type: org.eclipse.jdt.core.problem, attributes: [categoryId: 10, message: The project was not built due to \"release 21 is not found in the system\". Fix the problem, then try refreshing this project and building it since it may be inconsistent, severity: 2, sourceId: JDT], created: 2/27/25, 3:16 PM]] warnings: []"}
{"time":"2025-02-27T15:21:58.410060239-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: MethodDeclarationPattern: getfirst(...), exact match, case insensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:21:58.420299031-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 1 search matches for getFirst location 13 matches1"}
{"time":"2025-02-27T15:21:58.420501645-06:00","level":"INFO","msg":"Symbols retrieved","provider":"java","symbols":1,"cap":"referenced","conditionInfo":{"Referenced":{"Pattern":"getFirst","Location":"METHOD","annotated":{"pattern":""},"Filepaths":null}}}
{"time":"2025-02-27T15:21:58.42224261-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: source-only analysis mode only scoping to Sources"}
{"time":"2025-02-27T15:21:58.42278744-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: found errors: [Marker [on: /my-app, id: 1, type: org.eclipse.jdt.core.problem, attributes: [categoryId: 10, message: The project was not built due to \"release 21 is not found in the system\". Fix the problem, then try refreshing this project and building it since it may be inconsistent, severity: 2, sourceId: JDT], created: 2/27/25, 3:16 PM]] warnings: []"}
{"time":"2025-02-27T15:21:58.423468792-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: pattern: SuperInterfaceReferencePattern: <List>, exact match, case sensitive, generic full match, fine grain: none"}
{"time":"2025-02-27T15:21:58.432109745-06:00","level":"INFO","msg":"language server log","provider":"java","line":"!MESSAGE KONVEYOR_LOG: got: 1 search matches for List location 5 matches1"}
{"time":"2025-02-27T15:21:58.43253466-06:00","level":"INFO","msg":"Symbols retrieved","provider":"java","symbols":1,"cap":"referenced","conditionInfo":{"Referenced":{"Pattern":"List","Location":"IMPLEMENTS_TYPE","annotated":{"pattern":""},"Filepaths":null}}}
{"time":"2025-02-27T15:21:58.432719354-06:00","level":"INFO","msg":"rule returned","ruleID":"java21-getfirst-method"}
{"time":"2025-02-27T15:21:58.433046654-06:00","level":"DEBUG+2","msg":"done processing all the rules"}
{"time":"2025-02-27T15:21:58.433315907-06:00","level":"INFO","msg":"deleting cache entry for path","path":"/home/dpeterson/kai-demo/my-app/src/main/java/com/mycompany/app/StringList.java"}
